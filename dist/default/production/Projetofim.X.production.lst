

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 30 19:01:20 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41  0000                     
    42                           ; Version 2.32
    43                           ; Generated 02/02/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4520 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	mediumconst
    79  007ECE                     __pmediumconst:
    80                           	callstack 0
    81  007ECE  00                 	db	0
    82  007ECF                     _valor@ssd$F285:
    83                           	callstack 0
    84  007ECF  3F                 	db	63
    85  007ED0  06                 	db	6
    86  007ED1  5B                 	db	91
    87  007ED2  4F                 	db	79
    88  007ED3  66                 	db	102
    89  007ED4  6D                 	db	109
    90  007ED5  7D                 	db	125
    91  007ED6  07                 	db	7
    92  007ED7  7F                 	db	127
    93  007ED8  6F                 	db	111
    94  007ED9  77                 	db	119
    95  007EDA  7C                 	db	124
    96  007EDB  39                 	db	57
    97  007EDC  5E                 	db	94
    98  007EDD  79                 	db	121
    99  007EDE  71                 	db	113
   100  007EDF                     __end_of_valor@ssd$F285:
   101                           	callstack 0
   102  0000                     _T2CON	set	4042
   103  0000                     _CCP1CON	set	4029
   104  0000                     _CCPR1L	set	4030
   105  0000                     _PR2	set	4043
   106  0000                     _TRISE	set	3990
   107  0000                     _TRISD	set	3989
   108  0000                     _TRISC	set	3988
   109  0000                     _TRISB	set	3987
   110  0000                     _TRISA	set	3986
   111  0000                     _PORTE	set	3972
   112  0000                     _PORTD	set	3971
   113  0000                     _PORTC	set	3970
   114  0000                     _PORTB	set	3969
   115  0000                     _PORTA	set	3968
   116  007EDF                     STR_5:
   117  007EDF  23                 	db	35
   118  007EE0  2D                 	db	45
   119  007EE1  54                 	db	84	;'T'
   120  007EE2  52                 	db	82	;'R'
   121  007EE3  41                 	db	65	;'A'
   122  007EE4  56                 	db	86	;'V'
   123  007EE5  41                 	db	65	;'A'
   124  007EE6  52                 	db	82	;'R'
   125  007EE7  0A                 	db	10
   126  007EE8  2A                 	db	42
   127  007EE9  2D                 	db	45
   128  007EEA  56                 	db	86	;'V'
   129  007EEB  65                 	db	101	;'e'
   130  007EEC  72                 	db	114	;'r'
   131  007EED  20                 	db	32
   132  007EEE  68                 	db	104	;'h'
   133  007EEF  69                 	db	105	;'i'
   134  007EF0  73                 	db	115	;'s'
   135  007EF1  74                 	db	116	;'t'
   136  007EF2  6F                 	db	111	;'o'
   137  007EF3  72                 	db	114	;'r'
   138  007EF4  69                 	db	105	;'i'
   139  007EF5  63                 	db	99	;'c'
   140  007EF6  6F                 	db	111	;'o'
   141  007EF7  20                 	db	32
   142  007EF8  64                 	db	100	;'d'
   143  007EF9  65                 	db	101	;'e'
   144  007EFA  20                 	db	32
   145  007EFB  73                 	db	115	;'s'
   146  007EFC  65                 	db	101	;'e'
   147  007EFD  6E                 	db	110	;'n'
   148  007EFE  68                 	db	104	;'h'
   149  007EFF  61                 	db	97	;'a'
   150  007F00  73                 	db	115	;'s'
   151  007F01  20                 	db	32
   152  007F02  00                 	db	0
   153  007F03                     STR_12:
   154  007F03  50                 	db	80	;'P'
   155  007F04  72                 	db	114	;'r'
   156  007F05  69                 	db	105	;'i'
   157  007F06  6D                 	db	109	;'m'
   158  007F07  65                 	db	101	;'e'
   159  007F08  69                 	db	105	;'i'
   160  007F09  72                 	db	114	;'r'
   161  007F0A  6F                 	db	111	;'o'
   162  007F0B  20                 	db	32
   163  007F0C  70                 	db	112	;'p'
   164  007F0D  61                 	db	97	;'a'
   165  007F0E  73                 	db	115	;'s'
   166  007F0F  73                 	db	115	;'s'
   167  007F10  6F                 	db	111	;'o'
   168  007F11  20                 	db	32
   169  007F12  0A                 	db	10
   170  007F13  20                 	db	32
   171  007F14  44                 	db	68	;'D'
   172  007F15  65                 	db	101	;'e'
   173  007F16  66                 	db	102	;'f'
   174  007F17  69                 	db	105	;'i'
   175  007F18  6E                 	db	110	;'n'
   176  007F19  69                 	db	105	;'i'
   177  007F1A  72                 	db	114	;'r'
   178  007F1B  20                 	db	32
   179  007F1C  73                 	db	115	;'s'
   180  007F1D  65                 	db	101	;'e'
   181  007F1E  6E                 	db	110	;'n'
   182  007F1F  68                 	db	104	;'h'
   183  007F20  61                 	db	97	;'a'
   184  007F21  3A                 	db	58	;':'
   185  007F22  00                 	db	0
   186  007F23                     STR_1:
   187  007F23  41                 	db	65	;'A'
   188  007F24  20                 	db	32
   189  007F25  73                 	db	115	;'s'
   190  007F26  65                 	db	101	;'e'
   191  007F27  6E                 	db	110	;'n'
   192  007F28  68                 	db	104	;'h'
   193  007F29  61                 	db	97	;'a'
   194  007F2A  20                 	db	32
   195  007F2B  66                 	db	102	;'f'
   196  007F2C  6F                 	db	111	;'o'
   197  007F2D  69                 	db	105	;'i'
   198  007F2E  20                 	db	32
   199  007F2F  73                 	db	115	;'s'
   200  007F30  61                 	db	97	;'a'
   201  007F31  6C                 	db	108	;'l'
   202  007F32  76                 	db	118	;'v'
   203  007F33  61                 	db	97	;'a'
   204  007F34  20                 	db	32
   205  007F35  0A                 	db	10
   206  007F36  41                 	db	65	;'A'
   207  007F37  67                 	db	103	;'g'
   208  007F38  75                 	db	117	;'u'
   209  007F39  61                 	db	97	;'a'
   210  007F3A  72                 	db	114	;'r'
   211  007F3B  64                 	db	100	;'d'
   212  007F3C  65                 	db	101	;'e'
   213  007F3D  2E                 	db	46
   214  007F3E  2E                 	db	46
   215  007F3F  2E                 	db	46
   216  007F40  00                 	db	0
   217  007F41                     STR_6:
   218  007F41  49                 	db	73	;'I'
   219  007F42  6E                 	db	110	;'n'
   220  007F43  66                 	db	102	;'f'
   221  007F44  6F                 	db	111	;'o'
   222  007F45  72                 	db	114	;'r'
   223  007F46  6D                 	db	109	;'m'
   224  007F47  65                 	db	101	;'e'
   225  007F48  20                 	db	32
   226  007F49  61                 	db	97	;'a'
   227  007F4A  20                 	db	32
   228  007F4B  73                 	db	115	;'s'
   229  007F4C  65                 	db	101	;'e'
   230  007F4D  6E                 	db	110	;'n'
   231  007F4E  68                 	db	104	;'h'
   232  007F4F  61                 	db	97	;'a'
   233  007F50  20                 	db	32
   234  007F51  70                 	db	112	;'p'
   235  007F52  61                 	db	97	;'a'
   236  007F53  72                 	db	114	;'r'
   237  007F54  61                 	db	97	;'a'
   238  007F55  20                 	db	32
   239  007F56  74                 	db	116	;'t'
   240  007F57  72                 	db	114	;'r'
   241  007F58  61                 	db	97	;'a'
   242  007F59  76                 	db	118	;'v'
   243  007F5A  61                 	db	97	;'a'
   244  007F5B  72                 	db	114	;'r'
   245  007F5C  3A                 	db	58	;':'
   246  007F5D  00                 	db	0
   247  007F5E                     STR_2:
   248  007F5E  41                 	db	65	;'A'
   249  007F5F  63                 	db	99	;'c'
   250  007F60  65                 	db	101	;'e'
   251  007F61  73                 	db	115	;'s'
   252  007F62  73                 	db	115	;'s'
   253  007F63  6F                 	db	111	;'o'
   254  007F64  20                 	db	32
   255  007F65  62                 	db	98	;'b'
   256  007F66  6C                 	db	108	;'l'
   257  007F67  6F                 	db	111	;'o'
   258  007F68  71                 	db	113	;'q'
   259  007F69  75                 	db	117	;'u'
   260  007F6A  65                 	db	101	;'e'
   261  007F6B  61                 	db	97	;'a'
   262  007F6C  64                 	db	100	;'d'
   263  007F6D  6F                 	db	111	;'o'
   264  007F6E  20                 	db	32
   265  007F6F  0A                 	db	10
   266  007F70  41                 	db	65	;'A'
   267  007F71  67                 	db	103	;'g'
   268  007F72  75                 	db	117	;'u'
   269  007F73  61                 	db	97	;'a'
   270  007F74  72                 	db	114	;'r'
   271  007F75  64                 	db	100	;'d'
   272  007F76  65                 	db	101	;'e'
   273  007F77  2E                 	db	46
   274  007F78  2E                 	db	46
   275  007F79  2E                 	db	46
   276  007F7A  00                 	db	0
   277  007F7B                     STR_9:
   278  007F7B  23                 	db	35
   279  007F7C  2D                 	db	45
   280  007F7D  74                 	db	116	;'t'
   281  007F7E  72                 	db	114	;'r'
   282  007F7F  61                 	db	97	;'a'
   283  007F80  76                 	db	118	;'v'
   284  007F81  61                 	db	97	;'a'
   285  007F82  72                 	db	114	;'r'
   286  007F83  0A                 	db	10
   287  007F84  2A                 	db	42
   288  007F85  2D                 	db	45
   289  007F86  56                 	db	86	;'V'
   290  007F87  65                 	db	101	;'e'
   291  007F88  72                 	db	114	;'r'
   292  007F89  20                 	db	32
   293  007F8A  68                 	db	104	;'h'
   294  007F8B  69                 	db	105	;'i'
   295  007F8C  73                 	db	115	;'s'
   296  007F8D  74                 	db	116	;'t'
   297  007F8E  6F                 	db	111	;'o'
   298  007F8F  72                 	db	114	;'r'
   299  007F90  69                 	db	105	;'i'
   300  007F91  63                 	db	99	;'c'
   301  007F92  6F                 	db	111	;'o'
   302  007F93  20                 	db	32
   303  007F94  20                 	db	32
   304  007F95  00                 	db	0
   305  007F96                     STR_8:
   306  007F96  54                 	db	84	;'T'
   307  007F97  45                 	db	69	;'E'
   308  007F98  4E                 	db	78	;'N'
   309  007F99  54                 	db	84	;'T'
   310  007F9A  45                 	db	69	;'E'
   311  007F9B  20                 	db	32
   312  007F9C  4E                 	db	78	;'N'
   313  007F9D  4F                 	db	79	;'O'
   314  007F9E  56                 	db	86	;'V'
   315  007F9F  41                 	db	65	;'A'
   316  007FA0  4D                 	db	77	;'M'
   317  007FA1  45                 	db	69	;'E'
   318  007FA2  4E                 	db	78	;'N'
   319  007FA3  54                 	db	84	;'T'
   320  007FA4  45                 	db	69	;'E'
   321  007FA5  0A                 	db	10
   322  007FA6  41                 	db	65	;'A'
   323  007FA7  67                 	db	103	;'g'
   324  007FA8  75                 	db	117	;'u'
   325  007FA9  61                 	db	97	;'a'
   326  007FAA  72                 	db	114	;'r'
   327  007FAB  64                 	db	100	;'d'
   328  007FAC  65                 	db	101	;'e'
   329  007FAD  2E                 	db	46
   330  007FAE  2E                 	db	46
   331  007FAF  2E                 	db	46
   332  007FB0  00                 	db	0
   333  007FB1                     STR_4:
   334  007FB1  44                 	db	68	;'D'
   335  007FB2  45                 	db	69	;'E'
   336  007FB3  53                 	db	83	;'S'
   337  007FB4  54                 	db	84	;'T'
   338  007FB5  52                 	db	82	;'R'
   339  007FB6  41                 	db	65	;'A'
   340  007FB7  56                 	db	86	;'V'
   341  007FB8  41                 	db	65	;'A'
   342  007FB9  44                 	db	68	;'D'
   343  007FBA  41                 	db	65	;'A'
   344  007FBB  20                 	db	32
   345  007FBC  0A                 	db	10
   346  007FBD  20                 	db	32
   347  007FBE  41                 	db	65	;'A'
   348  007FBF  67                 	db	103	;'g'
   349  007FC0  75                 	db	117	;'u'
   350  007FC1  61                 	db	97	;'a'
   351  007FC2  72                 	db	114	;'r'
   352  007FC3  64                 	db	100	;'d'
   353  007FC4  65                 	db	101	;'e'
   354  007FC5  2E                 	db	46
   355  007FC6  2E                 	db	46
   356  007FC7  2E                 	db	46
   357  007FC8  20                 	db	32
   358  007FC9  00                 	db	0
   359  007FCA                     STR_3:
   360  007FCA  53                 	db	83	;'S'
   361  007FCB  65                 	db	101	;'e'
   362  007FCC  6E                 	db	110	;'n'
   363  007FCD  68                 	db	104	;'h'
   364  007FCE  61                 	db	97	;'a'
   365  007FCF  20                 	db	32
   366  007FD0  70                 	db	112	;'p'
   367  007FD1  61                 	db	97	;'a'
   368  007FD2  72                 	db	114	;'r'
   369  007FD3  61                 	db	97	;'a'
   370  007FD4  20                 	db	32
   371  007FD5  64                 	db	100	;'d'
   372  007FD6  65                 	db	101	;'e'
   373  007FD7  73                 	db	115	;'s'
   374  007FD8  74                 	db	116	;'t'
   375  007FD9  72                 	db	114	;'r'
   376  007FDA  61                 	db	97	;'a'
   377  007FDB  76                 	db	118	;'v'
   378  007FDC  61                 	db	97	;'a'
   379  007FDD  72                 	db	114	;'r'
   380  007FDE  3A                 	db	58	;':'
   381  007FDF  00                 	db	0
   382  007FE0                     STR_7:
   383  007FE0  54                 	db	84	;'T'
   384  007FE1  52                 	db	82	;'R'
   385  007FE2  41                 	db	65	;'A'
   386  007FE3  56                 	db	86	;'V'
   387  007FE4  41                 	db	65	;'A'
   388  007FE5  44                 	db	68	;'D'
   389  007FE6  41                 	db	65	;'A'
   390  007FE7  0A                 	db	10
   391  007FE8  41                 	db	65	;'A'
   392  007FE9  67                 	db	103	;'g'
   393  007FEA  75                 	db	117	;'u'
   394  007FEB  61                 	db	97	;'a'
   395  007FEC  72                 	db	114	;'r'
   396  007FED  64                 	db	100	;'d'
   397  007FEE  65                 	db	101	;'e'
   398  007FEF  2E                 	db	46
   399  007FF0  2E                 	db	46
   400  007FF1  2E                 	db	46
   401  007FF2  00                 	db	0
   402  007FF3                     STR_10:
   403  007FF3  44                 	db	68	;'D'
   404  007FF4  45                 	db	69	;'E'
   405  007FF5  53                 	db	83	;'S'
   406  007FF6  54                 	db	84	;'T'
   407  007FF7  52                 	db	82	;'R'
   408  007FF8  41                 	db	65	;'A'
   409  007FF9  56                 	db	86	;'V'
   410  007FFA  41                 	db	65	;'A'
   411  007FFB  44                 	db	68	;'D'
   412  007FFC  41                 	db	65	;'A'
   413  007FFD  3A                 	db	58	;':'
   414  007FFE  00                 	db	0
   415  007FFF  00                 	db	0	; dummy byte at the end
   416  0000                     
   417                           ; #config settings
   418                           
   419                           	psect	cinit
   420  00648A                     __pcinit:
   421                           	callstack 0
   422  00648A                     start_initialization:
   423                           	callstack 0
   424  00648A                     __initialization:
   425                           	callstack 0
   426                           
   427                           ; Clear objects allocated to COMRAM (26 bytes)
   428  00648A  EE00  F01C         	lfsr	0,__pbssCOMRAM
   429  00648E  0E1A               	movlw	26
   430  006490                     clear_0:
   431  006490  6AEE               	clrf	postinc0,c
   432  006492  06E8               	decf	wreg,f,c
   433  006494  E1FD               	bnz	clear_0
   434  006496                     end_of_initialization:
   435                           	callstack 0
   436  006496                     __end_of__initialization:
   437                           	callstack 0
   438  006496  0E00               	movlw	low (__Lmediumconst shr (0+16))
   439  006498  6EF8               	movwf	tblptru,c
   440  00649A  0100               	movlb	0
   441  00649C  EF95  F034         	goto	_main	;jump to C main() function
   442                           
   443                           	psect	bssCOMRAM
   444  00001C                     __pbssCOMRAM:
   445                           	callstack 0
   446  00001C                     _senha:
   447                           	callstack 0
   448  00001C                     	ds	10
   449  000026                     kpDebounce@valorAntigo:
   450                           	callstack 0
   451  000026                     	ds	2
   452  000028                     kpDebounce@valorNovo:
   453                           	callstack 0
   454  000028                     	ds	2
   455  00002A                     _valor:
   456                           	callstack 0
   457  00002A                     	ds	2
   458  00002C                     _flag2:
   459                           	callstack 0
   460  00002C                     	ds	2
   461  00002E                     _flag1:
   462                           	callstack 0
   463  00002E                     	ds	2
   464  000030                     _v3:
   465                           	callstack 0
   466  000030                     	ds	1
   467  000031                     _v2:
   468                           	callstack 0
   469  000031                     	ds	1
   470  000032                     _v1:
   471                           	callstack 0
   472  000032                     	ds	1
   473  000033                     _v0:
   474                           	callstack 0
   475  000033                     	ds	1
   476  000034                     _display:
   477                           	callstack 0
   478  000034                     	ds	1
   479  000035                     kpDebounce@tempo:
   480                           	callstack 0
   481  000035                     	ds	1
   482                           
   483                           	psect	cstackCOMRAM
   484  000001                     __pcstackCOMRAM:
   485                           	callstack 0
   486  000001                     ??_kpDebounce:
   487  000001                     ?_kpRead:
   488                           	callstack 0
   489  000001                     ?___wmul:
   490                           	callstack 0
   491  000001                     ?___awdiv:
   492                           	callstack 0
   493  000001                     ?___lwdiv:
   494                           	callstack 0
   495  000001                     ?___aldiv:
   496                           	callstack 0
   497  000001                     Delay40us@i:
   498                           	callstack 0
   499  000001                     ssdDigit@pos:
   500                           	callstack 0
   501  000001                     digitalWrite@pin:
   502                           	callstack 0
   503  000001                     pinMode@pin:
   504                           	callstack 0
   505  000001                     ___wmul@multiplier:
   506                           	callstack 0
   507  000001                     ___awdiv@dividend:
   508                           	callstack 0
   509  000001                     ___lwdiv@dividend:
   510                           	callstack 0
   511  000001                     ___aldiv@dividend:
   512                           	callstack 0
   513                           
   514                           ; 4 bytes @ 0x0
   515  000001                     	ds	1
   516  000002                     Delay2ms@i:
   517                           	callstack 0
   518  000002                     ssdDigit@val:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x1
   522  000002                     	ds	1
   523  000003                     digitalWrite@value:
   524                           	callstack 0
   525  000003                     pinMode@type:
   526                           	callstack 0
   527  000003                     ___wmul@multiplicand:
   528                           	callstack 0
   529  000003                     ___awdiv@divisor:
   530                           	callstack 0
   531  000003                     ___lwdiv@divisor:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x2
   535  000003                     	ds	2
   536  000005                     ??_digitalWrite:
   537  000005                     ??_pinMode:
   538  000005                     ___awdiv@counter:
   539                           	callstack 0
   540  000005                     ___wmul@product:
   541                           	callstack 0
   542  000005                     ___lwdiv@quotient:
   543                           	callstack 0
   544  000005                     ___aldiv@divisor:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x4
   548  000005                     	ds	1
   549  000006                     kpDebounce@old_D:
   550                           	callstack 0
   551  000006                     ___awdiv@sign:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0x5
   555  000006                     	ds	1
   556  000007                     ??_ssdUpdate:
   557  000007                     lcdCommand@old_D:
   558                           	callstack 0
   559  000007                     lcdData@valor:
   560                           	callstack 0
   561  000007                     ___lwdiv@counter:
   562                           	callstack 0
   563  000007                     kpDebounce@k:
   564                           	callstack 0
   565  000007                     ___awdiv@quotient:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x6
   569  000007                     	ds	1
   570  000008                     ??_pwmSet:
   571  000008                     lcdCommand@cmd:
   572                           	callstack 0
   573  000008                     lcdData@old_D:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x7
   577  000008                     	ds	1
   578  000009                     ?___awmod:
   579                           	callstack 0
   580  000009                     kpDebounce@j:
   581                           	callstack 0
   582  000009                     ___aldiv@counter:
   583                           	callstack 0
   584  000009                     printf@texto:
   585                           	callstack 0
   586  000009                     ___awmod@dividend:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x8
   590  000009                     	ds	1
   591  00000A                     kpDebounce@i:
   592                           	callstack 0
   593  00000A                     pwmSet@porcento:
   594                           	callstack 0
   595  00000A                     ___aldiv@sign:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0x9
   599  00000A                     	ds	1
   600  00000B                     ??_printf:
   601  00000B                     teclado1@temp:
   602                           	callstack 0
   603  00000B                     teclado2@temp:
   604                           	callstack 0
   605  00000B                     pwmSet@val:
   606                           	callstack 0
   607  00000B                     ___awmod@divisor:
   608                           	callstack 0
   609  00000B                     ___aldiv@quotient:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0xA
   613  00000B                     	ds	2
   614  00000D                     ___awmod@counter:
   615                           	callstack 0
   616  00000D                     teclado1@time:
   617                           	callstack 0
   618  00000D                     teclado2@time:
   619                           	callstack 0
   620  00000D                     printf@i:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0xC
   624  00000D                     	ds	1
   625  00000E                     ___awmod@sign:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0xD
   629  00000E                     	ds	1
   630  00000F                     teclado1@i:
   631                           	callstack 0
   632  00000F                     teclado2@j:
   633                           	callstack 0
   634  00000F                     defineSenha@temp:
   635                           	callstack 0
   636  00000F                     lcdNumber@value:
   637                           	callstack 0
   638  00000F                     pwmFrequency@freq:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0xE
   642  00000F                     	ds	2
   643  000011                     defineSenha@time:
   644                           	callstack 0
   645  000011                     lcdNumber@i:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x10
   649  000011                     	ds	2
   650  000013                     ??_acesso:
   651  000013                     defineSenha@i:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x12
   655  000013                     	ds	3
   656  000016                     acesso@time:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x15
   660  000016                     	ds	2
   661  000018                     acesso@i:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x17
   665  000018                     	ds	2
   666  00001A                     main@k:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x19
   670  00001A                     	ds	2
   671                           
   672 ;;
   673 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   674 ;;
   675 ;; *************** function _main *****************
   676 ;; Defined at:
   677 ;;		line 13 in file "newmain.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  k               2   25[COMRAM] int 
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   691 ;;      Params:         0       0       0       0       0       0       0
   692 ;;      Locals:         2       0       0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0
   694 ;;      Totals:         2       0       0       0       0       0       0
   695 ;;Total ram usage:        2 bytes
   696 ;; Hardware stack levels required when called: 5
   697 ;; This function calls:
   698 ;;		_acesso
   699 ;;		_defineSenha
   700 ;;		_kpInit
   701 ;;		_lcdCommand
   702 ;;		_lcdInit
   703 ;;		_printf
   704 ;;		_pwmFrequency
   705 ;;		_pwmInit
   706 ;;		_ssdInit
   707 ;; This function is called by:
   708 ;;		Startup code after reset
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text0
   713  00692A                     __ptext0:
   714                           	callstack 0
   715  00692A                     _main:
   716                           	callstack 26
   717  00692A                     
   718                           ;newmain.c: 15:            int k;;newmain.c: 17:     pwmInit();
   719  00692A  EC5C  F032         	call	_pwmInit	;wreg free
   720                           
   721                           ;newmain.c: 18:     pwmFrequency(2000);
   722  00692E  0E07               	movlw	7
   723  006930  6E10               	movwf	(pwmFrequency@freq+1)^0,c
   724  006932  0ED0               	movlw	208
   725  006934  6E0F               	movwf	pwmFrequency@freq^0,c
   726  006936  EC8A  F032         	call	_pwmFrequency	;wreg free
   727                           
   728                           ;newmain.c: 19:     lcdInit();
   729  00693A  ECC8  F033         	call	_lcdInit	;wreg free
   730                           
   731                           ;newmain.c: 20:     kpInit();
   732  00693E  EC40  F032         	call	_kpInit	;wreg free
   733                           
   734                           ;newmain.c: 21:       ssdInit();
   735  006942  ECC7  F032         	call	_ssdInit	;wreg free
   736  006946                     
   737                           ;newmain.c: 22:     defineSenha();
   738  006946  ECA6  F03D         	call	_defineSenha	;wreg free
   739  00694A                     
   740                           ;newmain.c: 24:     lcdCommand(0x01);
   741  00694A  0E01               	movlw	1
   742  00694C  EC04  F034         	call	_lcdCommand
   743  006950                     
   744                           ;newmain.c: 26:         printf("A senha foi salva \nAguarde...");
   745  006950  0E23               	movlw	low STR_1
   746  006952  6E09               	movwf	printf@texto^0,c
   747  006954  0E7F               	movlw	high STR_1
   748  006956  6E0A               	movwf	(printf@texto+1)^0,c
   749  006958  EC43  F034         	call	_printf	;wreg free
   750  00695C                     
   751                           ;newmain.c: 27:             for (k = 0; k < 30000; k++);
   752  00695C  0E00               	movlw	0
   753  00695E  6E1B               	movwf	(main@k+1)^0,c
   754  006960  0E00               	movlw	0
   755  006962  6E1A               	movwf	main@k^0,c
   756  006964                     l2848:
   757  006964  4A1A               	infsnz	main@k^0,f,c
   758  006966  2A1B               	incf	(main@k+1)^0,f,c
   759  006968  BE1B               	btfsc	(main@k+1)^0,7,c
   760  00696A  EFC0  F034         	goto	u3271
   761  00696E  0E30               	movlw	48
   762  006970  5C1A               	subwf	main@k^0,w,c
   763  006972  0E75               	movlw	117
   764  006974  581B               	subwfb	(main@k+1)^0,w,c
   765  006976  A0D8               	btfss	status,0,c
   766  006978  EFC0  F034         	goto	u3271
   767  00697C  EFC2  F034         	goto	u3270
   768  006980                     u3271:
   769  006980  EFB2  F034         	goto	l2848
   770  006984                     u3270:
   771  006984                     
   772                           ;newmain.c: 28:     lcdCommand(0x01);
   773  006984  0E01               	movlw	1
   774  006986  EC04  F034         	call	_lcdCommand
   775  00698A                     
   776                           ;newmain.c: 29:         printf("Acesso bloqueado \nAguarde...");
   777  00698A  0E5E               	movlw	low STR_2
   778  00698C  6E09               	movwf	printf@texto^0,c
   779  00698E  0E7F               	movlw	high STR_2
   780  006990  6E0A               	movwf	(printf@texto+1)^0,c
   781  006992  EC43  F034         	call	_printf	;wreg free
   782  006996                     
   783                           ;newmain.c: 30:             for (k = 0; k < 30000; k++);
   784  006996  0E00               	movlw	0
   785  006998  6E1B               	movwf	(main@k+1)^0,c
   786  00699A  0E00               	movlw	0
   787  00699C  6E1A               	movwf	main@k^0,c
   788  00699E                     l2862:
   789  00699E  4A1A               	infsnz	main@k^0,f,c
   790  0069A0  2A1B               	incf	(main@k+1)^0,f,c
   791  0069A2  BE1B               	btfsc	(main@k+1)^0,7,c
   792  0069A4  EFDD  F034         	goto	u3281
   793  0069A8  0E30               	movlw	48
   794  0069AA  5C1A               	subwf	main@k^0,w,c
   795  0069AC  0E75               	movlw	117
   796  0069AE  581B               	subwfb	(main@k+1)^0,w,c
   797  0069B0  A0D8               	btfss	status,0,c
   798  0069B2  EFDD  F034         	goto	u3281
   799  0069B6  EFDF  F034         	goto	u3280
   800  0069BA                     u3281:
   801  0069BA  EFCF  F034         	goto	l2862
   802  0069BE                     u3280:
   803  0069BE                     
   804                           ;newmain.c: 31:     lcdCommand(0x01);
   805  0069BE  0E01               	movlw	1
   806  0069C0  EC04  F034         	call	_lcdCommand
   807  0069C4                     l2868:
   808                           
   809                           ;newmain.c: 34:         acesso();
   810  0069C4  EC2B  F03C         	call	_acesso	;wreg free
   811  0069C8  EFE2  F034         	goto	l2868
   812  0069CC  EF00  F000         	goto	start
   813  0069D0                     __end_of_main:
   814                           	callstack 0
   815                           
   816 ;; *************** function _ssdInit *****************
   817 ;; Defined at:
   818 ;;		line 101 in file "ssd.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2, status,0, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   832 ;;      Params:         0       0       0       0       0       0       0
   833 ;;      Locals:         0       0       0       0       0       0       0
   834 ;;      Temps:          0       0       0       0       0       0       0
   835 ;;      Totals:         0       0       0       0       0       0       0
   836 ;;Total ram usage:        0 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; Hardware stack levels required when called: 1
   839 ;; This function calls:
   840 ;;		_pinMode
   841 ;; This function is called by:
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text1
   847  00658E                     __ptext1:
   848                           	callstack 0
   849  00658E                     _ssdInit:
   850                           	callstack 29
   851  00658E                     
   852                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
   853  00658E  0E00               	movlw	0
   854  006590  6E02               	movwf	(pinMode@pin+1)^0,c
   855  006592  0E02               	movlw	2
   856  006594  6E01               	movwf	pinMode@pin^0,c
   857  006596  0E00               	movlw	0
   858  006598  6E04               	movwf	(pinMode@type+1)^0,c
   859  00659A  0E00               	movlw	0
   860  00659C  6E03               	movwf	pinMode@type^0,c
   861  00659E  EC04  F03B         	call	_pinMode	;wreg free
   862                           
   863                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
   864  0065A2  0E00               	movlw	0
   865  0065A4  6E02               	movwf	(pinMode@pin+1)^0,c
   866  0065A6  0E03               	movlw	3
   867  0065A8  6E01               	movwf	pinMode@pin^0,c
   868  0065AA  0E00               	movlw	0
   869  0065AC  6E04               	movwf	(pinMode@type+1)^0,c
   870  0065AE  0E00               	movlw	0
   871  0065B0  6E03               	movwf	pinMode@type^0,c
   872  0065B2  EC04  F03B         	call	_pinMode	;wreg free
   873                           
   874                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
   875  0065B6  0E00               	movlw	0
   876  0065B8  6E02               	movwf	(pinMode@pin+1)^0,c
   877  0065BA  0E04               	movlw	4
   878  0065BC  6E01               	movwf	pinMode@pin^0,c
   879  0065BE  0E00               	movlw	0
   880  0065C0  6E04               	movwf	(pinMode@type+1)^0,c
   881  0065C2  0E00               	movlw	0
   882  0065C4  6E03               	movwf	pinMode@type^0,c
   883  0065C6  EC04  F03B         	call	_pinMode	;wreg free
   884                           
   885                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
   886  0065CA  0E00               	movlw	0
   887  0065CC  6E02               	movwf	(pinMode@pin+1)^0,c
   888  0065CE  0E05               	movlw	5
   889  0065D0  6E01               	movwf	pinMode@pin^0,c
   890  0065D2  0E00               	movlw	0
   891  0065D4  6E04               	movwf	(pinMode@type+1)^0,c
   892  0065D6  0E00               	movlw	0
   893  0065D8  6E03               	movwf	pinMode@type^0,c
   894  0065DA  EC04  F03B         	call	_pinMode	;wreg free
   895  0065DE                     
   896                           ;ssd.c: 109:     TRISD = 0x00;
   897  0065DE  0E00               	movlw	0
   898  0065E0  6E95               	movwf	149,c	;volatile
   899  0065E2  0012               	return		;funcret
   900  0065E4                     __end_of_ssdInit:
   901                           	callstack 0
   902                           
   903 ;; *************** function _pwmInit *****************
   904 ;; Defined at:
   905 ;;		line 51 in file "pwm.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, status,2, status,0, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   919 ;;      Params:         0       0       0       0       0       0       0
   920 ;;      Locals:         0       0       0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0
   922 ;;      Totals:         0       0       0       0       0       0       0
   923 ;;Total ram usage:        0 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 2
   926 ;; This function calls:
   927 ;;		_pwmFrequency
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text2
   934  0064B8                     __ptext2:
   935                           	callstack 0
   936  0064B8                     _pwmInit:
   937                           	callstack 28
   938  0064B8                     
   939                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(2)));
   940  0064B8  9494               	bcf	148,2,c	;volatile
   941  0064BA                     
   942                           ;pwm.c: 55:  T2CON |= 0b00000011;
   943  0064BA  0E03               	movlw	3
   944  0064BC  12CA               	iorwf	202,f,c	;volatile
   945  0064BE                     
   946                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
   947  0064BE  84CA               	bsf	202,2,c	;volatile
   948  0064C0                     
   949                           ;pwm.c: 58:  CCP1CON = 0b00001100;
   950  0064C0  0E0C               	movlw	12
   951  0064C2  6EBD               	movwf	189,c	;volatile
   952  0064C4                     
   953                           ;pwm.c: 60:     pwmFrequency(100);
   954  0064C4  0E00               	movlw	0
   955  0064C6  6E10               	movwf	(pwmFrequency@freq+1)^0,c
   956  0064C8  0E64               	movlw	100
   957  0064CA  6E0F               	movwf	pwmFrequency@freq^0,c
   958  0064CC  EC8A  F032         	call	_pwmFrequency	;wreg free
   959  0064D0  0012               	return		;funcret
   960  0064D2                     __end_of_pwmInit:
   961                           	callstack 0
   962                           
   963 ;; *************** function _pwmFrequency *****************
   964 ;; Defined at:
   965 ;;		line 44 in file "pwm.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  freq            2   14[COMRAM] unsigned int 
   968 ;; Auto vars:     Size  Location     Type
   969 ;;		None
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg, status,2, status,0, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   979 ;;      Params:         2       0       0       0       0       0       0
   980 ;;      Locals:         0       0       0       0       0       0       0
   981 ;;      Temps:          0       0       0       0       0       0       0
   982 ;;      Totals:         2       0       0       0       0       0       0
   983 ;;Total ram usage:        2 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; Hardware stack levels required when called: 1
   986 ;; This function calls:
   987 ;;		___aldiv
   988 ;; This function is called by:
   989 ;;		_main
   990 ;;		_pwmInit
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           	psect	text3
   995  006514                     __ptext3:
   996                           	callstack 0
   997  006514                     _pwmFrequency:
   998                           	callstack 28
   999  006514                     
  1000                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  1001  006514  0E48               	movlw	72
  1002  006516  6E01               	movwf	___aldiv@dividend^0,c
  1003  006518  0EE8               	movlw	232
  1004  00651A  6E02               	movwf	(___aldiv@dividend+1)^0,c
  1005  00651C  0E01               	movlw	1
  1006  00651E  6E03               	movwf	(___aldiv@dividend+2)^0,c
  1007  006520  0E00               	movlw	0
  1008  006522  6E04               	movwf	(___aldiv@dividend+3)^0,c
  1009  006524  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  1010  006528  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  1011  00652C  6A07               	clrf	(___aldiv@divisor+2)^0,c
  1012  00652E  6A08               	clrf	(___aldiv@divisor+3)^0,c
  1013  006530  ECA2  F035         	call	___aldiv	;wreg free
  1014  006534  0401               	decf	?___aldiv^0,w,c
  1015  006536  6ECB               	movwf	203,c	;volatile
  1016  006538  0012               	return		;funcret
  1017  00653A                     __end_of_pwmFrequency:
  1018                           	callstack 0
  1019                           
  1020 ;; *************** function ___aldiv *****************
  1021 ;; Defined at:
  1022 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  dividend        4    0[COMRAM] long 
  1025 ;;  divisor         4    4[COMRAM] long 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  quotient        4   10[COMRAM] long 
  1028 ;;  sign            1    9[COMRAM] unsigned char 
  1029 ;;  counter         1    8[COMRAM] unsigned char 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  4    0[COMRAM] long 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1039 ;;      Params:         8       0       0       0       0       0       0
  1040 ;;      Locals:         6       0       0       0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0       0       0
  1042 ;;      Totals:        14       0       0       0       0       0       0
  1043 ;;Total ram usage:       14 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; This function calls:
  1046 ;;		Nothing
  1047 ;; This function is called by:
  1048 ;;		_pwmFrequency
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text4
  1053  006B44                     __ptext4:
  1054                           	callstack 0
  1055  006B44                     ___aldiv:
  1056                           	callstack 28
  1057  006B44  0E00               	movlw	0
  1058  006B46  6E0A               	movwf	___aldiv@sign^0,c
  1059  006B48  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  1060  006B4A  EFAB  F035         	goto	u2020
  1061  006B4E  EFA9  F035         	goto	u2021
  1062  006B52                     u2021:
  1063  006B52  EFB5  F035         	goto	l2166
  1064  006B56                     u2020:
  1065  006B56  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  1066  006B58  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  1067  006B5A  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  1068  006B5C  6C05               	negf	___aldiv@divisor^0,c
  1069  006B5E  0E00               	movlw	0
  1070  006B60  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  1071  006B62  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  1072  006B64  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  1073  006B66  0E01               	movlw	1
  1074  006B68  6E0A               	movwf	___aldiv@sign^0,c
  1075  006B6A                     l2166:
  1076  006B6A  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  1077  006B6C  EFBC  F035         	goto	u2030
  1078  006B70  EFBA  F035         	goto	u2031
  1079  006B74                     u2031:
  1080  006B74  EFC6  F035         	goto	l2172
  1081  006B78                     u2030:
  1082  006B78  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  1083  006B7A  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  1084  006B7C  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  1085  006B7E  6C01               	negf	___aldiv@dividend^0,c
  1086  006B80  0E00               	movlw	0
  1087  006B82  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  1088  006B84  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  1089  006B86  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  1090  006B88  0E01               	movlw	1
  1091  006B8A  1A0A               	xorwf	___aldiv@sign^0,f,c
  1092  006B8C                     l2172:
  1093  006B8C  0E00               	movlw	0
  1094  006B8E  6E0B               	movwf	___aldiv@quotient^0,c
  1095  006B90  0E00               	movlw	0
  1096  006B92  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  1097  006B94  0E00               	movlw	0
  1098  006B96  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  1099  006B98  0E00               	movlw	0
  1100  006B9A  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  1101  006B9C  5005               	movf	___aldiv@divisor^0,w,c
  1102  006B9E  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  1103  006BA0  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  1104  006BA2  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  1105  006BA4  B4D8               	btfsc	status,2,c
  1106  006BA6  EFD7  F035         	goto	u2041
  1107  006BAA  EFD9  F035         	goto	u2040
  1108  006BAE                     u2041:
  1109  006BAE  EF0F  F036         	goto	l2194
  1110  006BB2                     u2040:
  1111  006BB2  0E01               	movlw	1
  1112  006BB4  6E09               	movwf	___aldiv@counter^0,c
  1113  006BB6  EFE3  F035         	goto	l2180
  1114  006BBA                     l2178:
  1115  006BBA  90D8               	bcf	status,0,c
  1116  006BBC  3605               	rlcf	___aldiv@divisor^0,f,c
  1117  006BBE  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  1118  006BC0  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  1119  006BC2  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  1120  006BC4  2A09               	incf	___aldiv@counter^0,f,c
  1121  006BC6                     l2180:
  1122  006BC6  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  1123  006BC8  EFE8  F035         	goto	u2051
  1124  006BCC  EFEA  F035         	goto	u2050
  1125  006BD0                     u2051:
  1126  006BD0  EFDD  F035         	goto	l2178
  1127  006BD4                     u2050:
  1128  006BD4                     l2182:
  1129  006BD4  90D8               	bcf	status,0,c
  1130  006BD6  360B               	rlcf	___aldiv@quotient^0,f,c
  1131  006BD8  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  1132  006BDA  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  1133  006BDC  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  1134  006BDE  5005               	movf	___aldiv@divisor^0,w,c
  1135  006BE0  5C01               	subwf	___aldiv@dividend^0,w,c
  1136  006BE2  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1137  006BE4  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  1138  006BE6  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1139  006BE8  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  1140  006BEA  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1141  006BEC  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  1142  006BEE  A0D8               	btfss	status,0,c
  1143  006BF0  EFFC  F035         	goto	u2061
  1144  006BF4  EFFE  F035         	goto	u2060
  1145  006BF8                     u2061:
  1146  006BF8  EF07  F036         	goto	l2190
  1147  006BFC                     u2060:
  1148  006BFC  5005               	movf	___aldiv@divisor^0,w,c
  1149  006BFE  5E01               	subwf	___aldiv@dividend^0,f,c
  1150  006C00  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1151  006C02  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  1152  006C04  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1153  006C06  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  1154  006C08  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1155  006C0A  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  1156  006C0C  800B               	bsf	___aldiv@quotient^0,0,c
  1157  006C0E                     l2190:
  1158  006C0E  90D8               	bcf	status,0,c
  1159  006C10  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  1160  006C12  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  1161  006C14  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  1162  006C16  3205               	rrcf	___aldiv@divisor^0,f,c
  1163  006C18  2E09               	decfsz	___aldiv@counter^0,f,c
  1164  006C1A  EFEA  F035         	goto	l2182
  1165  006C1E                     l2194:
  1166  006C1E  500A               	movf	___aldiv@sign^0,w,c
  1167  006C20  B4D8               	btfsc	status,2,c
  1168  006C22  EF15  F036         	goto	u2071
  1169  006C26  EF17  F036         	goto	u2070
  1170  006C2A                     u2071:
  1171  006C2A  EF1F  F036         	goto	l2198
  1172  006C2E                     u2070:
  1173  006C2E  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  1174  006C30  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  1175  006C32  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  1176  006C34  6C0B               	negf	___aldiv@quotient^0,c
  1177  006C36  0E00               	movlw	0
  1178  006C38  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  1179  006C3A  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  1180  006C3C  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  1181  006C3E                     l2198:
  1182  006C3E  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1183  006C42  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1184  006C46  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1185  006C4A  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1186  006C4E  0012               	return		;funcret
  1187  006C50                     __end_of___aldiv:
  1188                           	callstack 0
  1189                           
  1190 ;; *************** function _lcdInit *****************
  1191 ;; Defined at:
  1192 ;;		line 95 in file "lcd.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1206 ;;      Params:         0       0       0       0       0       0       0
  1207 ;;      Locals:         0       0       0       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0       0       0
  1209 ;;      Totals:         0       0       0       0       0       0       0
  1210 ;;Total ram usage:        0 bytes
  1211 ;; Hardware stack levels used: 1
  1212 ;; Hardware stack levels required when called: 3
  1213 ;; This function calls:
  1214 ;;		_Delay2ms
  1215 ;;		_lcdCommand
  1216 ;;		_pinMode
  1217 ;; This function is called by:
  1218 ;;		_main
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text5
  1223  006790                     __ptext5:
  1224                           	callstack 0
  1225  006790                     _lcdInit:
  1226                           	callstack 27
  1227  006790                     
  1228                           ;lcd.c: 97:     pinMode(PIN_E2, 0);
  1229  006790  0E00               	movlw	0
  1230  006792  6E02               	movwf	(pinMode@pin+1)^0,c
  1231  006794  0E22               	movlw	34
  1232  006796  6E01               	movwf	pinMode@pin^0,c
  1233  006798  0E00               	movlw	0
  1234  00679A  6E04               	movwf	(pinMode@type+1)^0,c
  1235  00679C  0E00               	movlw	0
  1236  00679E  6E03               	movwf	pinMode@type^0,c
  1237  0067A0  EC04  F03B         	call	_pinMode	;wreg free
  1238                           
  1239                           ;lcd.c: 98:     pinMode(PIN_E1, 0);
  1240  0067A4  0E00               	movlw	0
  1241  0067A6  6E02               	movwf	(pinMode@pin+1)^0,c
  1242  0067A8  0E21               	movlw	33
  1243  0067AA  6E01               	movwf	pinMode@pin^0,c
  1244  0067AC  0E00               	movlw	0
  1245  0067AE  6E04               	movwf	(pinMode@type+1)^0,c
  1246  0067B0  0E00               	movlw	0
  1247  0067B2  6E03               	movwf	pinMode@type^0,c
  1248  0067B4  EC04  F03B         	call	_pinMode	;wreg free
  1249  0067B8                     
  1250                           ;lcd.c: 99:  TRISD = 0x00;
  1251  0067B8  0E00               	movlw	0
  1252  0067BA  6E95               	movwf	149,c	;volatile
  1253  0067BC                     
  1254                           ;lcd.c: 102:  Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  1255  0067BC  EC69  F032         	call	_Delay2ms	;wreg free
  1256  0067C0  EC69  F032         	call	_Delay2ms	;wreg free
  1257  0067C4  EC69  F032         	call	_Delay2ms	;wreg free
  1258  0067C8  EC69  F032         	call	_Delay2ms	;wreg free
  1259  0067CC  EC69  F032         	call	_Delay2ms	;wreg free
  1260  0067D0                     
  1261                           ;lcd.c: 104:     lcdCommand(0x38);
  1262  0067D0  0E38               	movlw	56
  1263  0067D2  EC04  F034         	call	_lcdCommand
  1264  0067D6                     
  1265                           ;lcd.c: 105:     Delay2ms(); Delay2ms();
  1266  0067D6  EC69  F032         	call	_Delay2ms	;wreg free
  1267  0067DA  EC69  F032         	call	_Delay2ms	;wreg free
  1268  0067DE                     
  1269                           ;lcd.c: 106:     lcdCommand(0x38);
  1270  0067DE  0E38               	movlw	56
  1271  0067E0  EC04  F034         	call	_lcdCommand
  1272  0067E4                     
  1273                           ;lcd.c: 107:     Delay2ms();
  1274  0067E4  EC69  F032         	call	_Delay2ms	;wreg free
  1275  0067E8                     
  1276                           ;lcd.c: 108:     lcdCommand(0x38);
  1277  0067E8  0E38               	movlw	56
  1278  0067EA  EC04  F034         	call	_lcdCommand
  1279  0067EE                     
  1280                           ;lcd.c: 110:     lcdCommand(0x38);
  1281  0067EE  0E38               	movlw	56
  1282  0067F0  EC04  F034         	call	_lcdCommand
  1283  0067F4                     
  1284                           ;lcd.c: 111:     lcdCommand(0x06);
  1285  0067F4  0E06               	movlw	6
  1286  0067F6  EC04  F034         	call	_lcdCommand
  1287  0067FA                     
  1288                           ;lcd.c: 114:     lcdCommand(0x0C);
  1289  0067FA  0E0C               	movlw	12
  1290  0067FC  EC04  F034         	call	_lcdCommand
  1291  006800                     
  1292                           ;lcd.c: 115:     lcdCommand(0x01);
  1293  006800  0E01               	movlw	1
  1294  006802  EC04  F034         	call	_lcdCommand
  1295  006806  0012               	return		;funcret
  1296  006808                     __end_of_lcdInit:
  1297                           	callstack 0
  1298                           
  1299 ;; *************** function _pinMode *****************
  1300 ;; Defined at:
  1301 ;;		line 46 in file "io.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  pin             2    0[COMRAM] int 
  1304 ;;  type            2    2[COMRAM] int 
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;		None
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, status,2, status,0
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1316 ;;      Params:         4       0       0       0       0       0       0
  1317 ;;      Locals:         0       0       0       0       0       0       0
  1318 ;;      Temps:          2       0       0       0       0       0       0
  1319 ;;      Totals:         6       0       0       0       0       0       0
  1320 ;;Total ram usage:        6 bytes
  1321 ;; Hardware stack levels used: 1
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_lcdInit
  1326 ;;		_ssdInit
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text6
  1331  007608                     __ptext6:
  1332                           	callstack 0
  1333  007608                     _pinMode:
  1334                           	callstack 29
  1335  007608                     
  1336                           ;io.c: 48:     if(pin <8){
  1337  007608  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1338  00760A  EF12  F03B         	goto	u2730
  1339  00760E  5002               	movf	(pinMode@pin+1)^0,w,c
  1340  007610  E107               	bnz	u2731
  1341  007612  0E08               	movlw	8
  1342  007614  5C01               	subwf	pinMode@pin^0,w,c
  1343  007616  B0D8               	btfsc	status,0,c
  1344  007618  EF10  F03B         	goto	u2731
  1345  00761C  EF12  F03B         	goto	u2730
  1346  007620                     u2731:
  1347  007620  EF3C  F03B         	goto	l2514
  1348  007624                     u2730:
  1349  007624                     
  1350                           ;io.c: 49:         if (type){ ((TRISA) |= (1<<(pin)));}
  1351  007624  5003               	movf	pinMode@type^0,w,c
  1352  007626  1004               	iorwf	(pinMode@type+1)^0,w,c
  1353  007628  B4D8               	btfsc	status,2,c
  1354  00762A  EF19  F03B         	goto	u2741
  1355  00762E  EF1B  F03B         	goto	u2740
  1356  007632                     u2741:
  1357  007632  EF2B  F03B         	goto	l2512
  1358  007636                     u2740:
  1359  007636  C001  F005         	movff	pinMode@pin,??_pinMode
  1360  00763A  0E01               	movlw	1
  1361  00763C  6E06               	movwf	(??_pinMode+1)^0,c
  1362  00763E  2A05               	incf	??_pinMode^0,f,c
  1363  007640  EF24  F03B         	goto	u2754
  1364  007644                     u2755:
  1365  007644  90D8               	bcf	status,0,c
  1366  007646  3606               	rlcf	(??_pinMode+1)^0,f,c
  1367  007648                     u2754:
  1368  007648  2E05               	decfsz	??_pinMode^0,f,c
  1369  00764A  EF22  F03B         	goto	u2755
  1370  00764E  5006               	movf	(??_pinMode+1)^0,w,c
  1371  007650  1292               	iorwf	146,f,c	;volatile
  1372  007652  EF2A  F03C         	goto	l212
  1373  007656                     l2512:
  1374  007656  C001  F005         	movff	pinMode@pin,??_pinMode
  1375  00765A  0E01               	movlw	1
  1376  00765C  6E06               	movwf	(??_pinMode+1)^0,c
  1377  00765E  2A05               	incf	??_pinMode^0,f,c
  1378  007660  EF34  F03B         	goto	u2764
  1379  007664                     u2765:
  1380  007664  90D8               	bcf	status,0,c
  1381  007666  3606               	rlcf	(??_pinMode+1)^0,f,c
  1382  007668                     u2764:
  1383  007668  2E05               	decfsz	??_pinMode^0,f,c
  1384  00766A  EF32  F03B         	goto	u2765
  1385  00766E  5006               	movf	(??_pinMode+1)^0,w,c
  1386  007670  0AFF               	xorlw	255
  1387  007672  1692               	andwf	146,f,c	;volatile
  1388  007674  EF2A  F03C         	goto	l212
  1389  007678                     l2514:
  1390  007678  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1391  00767A  EF4A  F03B         	goto	u2770
  1392  00767E  5002               	movf	(pinMode@pin+1)^0,w,c
  1393  007680  E107               	bnz	u2771
  1394  007682  0E10               	movlw	16
  1395  007684  5C01               	subwf	pinMode@pin^0,w,c
  1396  007686  B0D8               	btfsc	status,0,c
  1397  007688  EF48  F03B         	goto	u2771
  1398  00768C  EF4A  F03B         	goto	u2770
  1399  007690                     u2771:
  1400  007690  EF78  F03B         	goto	l2522
  1401  007694                     u2770:
  1402  007694                     
  1403                           ;io.c: 52:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  1404  007694  5003               	movf	pinMode@type^0,w,c
  1405  007696  1004               	iorwf	(pinMode@type+1)^0,w,c
  1406  007698  B4D8               	btfsc	status,2,c
  1407  00769A  EF51  F03B         	goto	u2781
  1408  00769E  EF53  F03B         	goto	u2780
  1409  0076A2                     u2781:
  1410  0076A2  EF65  F03B         	goto	l2520
  1411  0076A6                     u2780:
  1412  0076A6  C001  F005         	movff	pinMode@pin,??_pinMode
  1413  0076AA  0EF8               	movlw	-8
  1414  0076AC  2605               	addwf	??_pinMode^0,f,c
  1415  0076AE  0E01               	movlw	1
  1416  0076B0  6E06               	movwf	(??_pinMode+1)^0,c
  1417  0076B2  2A05               	incf	??_pinMode^0,f,c
  1418  0076B4  EF5E  F03B         	goto	u2794
  1419  0076B8                     u2795:
  1420  0076B8  90D8               	bcf	status,0,c
  1421  0076BA  3606               	rlcf	(??_pinMode+1)^0,f,c
  1422  0076BC                     u2794:
  1423  0076BC  2E05               	decfsz	??_pinMode^0,f,c
  1424  0076BE  EF5C  F03B         	goto	u2795
  1425  0076C2  5006               	movf	(??_pinMode+1)^0,w,c
  1426  0076C4  1293               	iorwf	147,f,c	;volatile
  1427  0076C6  EF2A  F03C         	goto	l212
  1428  0076CA                     l2520:
  1429  0076CA  C001  F005         	movff	pinMode@pin,??_pinMode
  1430  0076CE  0EF8               	movlw	-8
  1431  0076D0  2605               	addwf	??_pinMode^0,f,c
  1432  0076D2  0E01               	movlw	1
  1433  0076D4  6E06               	movwf	(??_pinMode+1)^0,c
  1434  0076D6  2A05               	incf	??_pinMode^0,f,c
  1435  0076D8  EF70  F03B         	goto	u2804
  1436  0076DC                     u2805:
  1437  0076DC  90D8               	bcf	status,0,c
  1438  0076DE  3606               	rlcf	(??_pinMode+1)^0,f,c
  1439  0076E0                     u2804:
  1440  0076E0  2E05               	decfsz	??_pinMode^0,f,c
  1441  0076E2  EF6E  F03B         	goto	u2805
  1442  0076E6  5006               	movf	(??_pinMode+1)^0,w,c
  1443  0076E8  0AFF               	xorlw	255
  1444  0076EA  1693               	andwf	147,f,c	;volatile
  1445  0076EC  EF2A  F03C         	goto	l212
  1446  0076F0                     l2522:
  1447  0076F0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1448  0076F2  EF86  F03B         	goto	u2810
  1449  0076F6  5002               	movf	(pinMode@pin+1)^0,w,c
  1450  0076F8  E107               	bnz	u2811
  1451  0076FA  0E18               	movlw	24
  1452  0076FC  5C01               	subwf	pinMode@pin^0,w,c
  1453  0076FE  B0D8               	btfsc	status,0,c
  1454  007700  EF84  F03B         	goto	u2811
  1455  007704  EF86  F03B         	goto	u2810
  1456  007708                     u2811:
  1457  007708  EFB4  F03B         	goto	l2530
  1458  00770C                     u2810:
  1459  00770C                     
  1460                           ;io.c: 55:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  1461  00770C  5003               	movf	pinMode@type^0,w,c
  1462  00770E  1004               	iorwf	(pinMode@type+1)^0,w,c
  1463  007710  B4D8               	btfsc	status,2,c
  1464  007712  EF8D  F03B         	goto	u2821
  1465  007716  EF8F  F03B         	goto	u2820
  1466  00771A                     u2821:
  1467  00771A  EFA1  F03B         	goto	l2528
  1468  00771E                     u2820:
  1469  00771E  C001  F005         	movff	pinMode@pin,??_pinMode
  1470  007722  0EF0               	movlw	-16
  1471  007724  2605               	addwf	??_pinMode^0,f,c
  1472  007726  0E01               	movlw	1
  1473  007728  6E06               	movwf	(??_pinMode+1)^0,c
  1474  00772A  2A05               	incf	??_pinMode^0,f,c
  1475  00772C  EF9A  F03B         	goto	u2834
  1476  007730                     u2835:
  1477  007730  90D8               	bcf	status,0,c
  1478  007732  3606               	rlcf	(??_pinMode+1)^0,f,c
  1479  007734                     u2834:
  1480  007734  2E05               	decfsz	??_pinMode^0,f,c
  1481  007736  EF98  F03B         	goto	u2835
  1482  00773A  5006               	movf	(??_pinMode+1)^0,w,c
  1483  00773C  1294               	iorwf	148,f,c	;volatile
  1484  00773E  EF2A  F03C         	goto	l212
  1485  007742                     l2528:
  1486  007742  C001  F005         	movff	pinMode@pin,??_pinMode
  1487  007746  0EF0               	movlw	-16
  1488  007748  2605               	addwf	??_pinMode^0,f,c
  1489  00774A  0E01               	movlw	1
  1490  00774C  6E06               	movwf	(??_pinMode+1)^0,c
  1491  00774E  2A05               	incf	??_pinMode^0,f,c
  1492  007750  EFAC  F03B         	goto	u2844
  1493  007754                     u2845:
  1494  007754  90D8               	bcf	status,0,c
  1495  007756  3606               	rlcf	(??_pinMode+1)^0,f,c
  1496  007758                     u2844:
  1497  007758  2E05               	decfsz	??_pinMode^0,f,c
  1498  00775A  EFAA  F03B         	goto	u2845
  1499  00775E  5006               	movf	(??_pinMode+1)^0,w,c
  1500  007760  0AFF               	xorlw	255
  1501  007762  1694               	andwf	148,f,c	;volatile
  1502  007764  EF2A  F03C         	goto	l212
  1503  007768                     l2530:
  1504  007768  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1505  00776A  EFC2  F03B         	goto	u2850
  1506  00776E  5002               	movf	(pinMode@pin+1)^0,w,c
  1507  007770  E107               	bnz	u2851
  1508  007772  0E20               	movlw	32
  1509  007774  5C01               	subwf	pinMode@pin^0,w,c
  1510  007776  B0D8               	btfsc	status,0,c
  1511  007778  EFC0  F03B         	goto	u2851
  1512  00777C  EFC2  F03B         	goto	u2850
  1513  007780                     u2851:
  1514  007780  EFF0  F03B         	goto	l2538
  1515  007784                     u2850:
  1516  007784                     
  1517                           ;io.c: 58:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  1518  007784  5003               	movf	pinMode@type^0,w,c
  1519  007786  1004               	iorwf	(pinMode@type+1)^0,w,c
  1520  007788  B4D8               	btfsc	status,2,c
  1521  00778A  EFC9  F03B         	goto	u2861
  1522  00778E  EFCB  F03B         	goto	u2860
  1523  007792                     u2861:
  1524  007792  EFDD  F03B         	goto	l2536
  1525  007796                     u2860:
  1526  007796  C001  F005         	movff	pinMode@pin,??_pinMode
  1527  00779A  0EE8               	movlw	-24
  1528  00779C  2605               	addwf	??_pinMode^0,f,c
  1529  00779E  0E01               	movlw	1
  1530  0077A0  6E06               	movwf	(??_pinMode+1)^0,c
  1531  0077A2  2A05               	incf	??_pinMode^0,f,c
  1532  0077A4  EFD6  F03B         	goto	u2874
  1533  0077A8                     u2875:
  1534  0077A8  90D8               	bcf	status,0,c
  1535  0077AA  3606               	rlcf	(??_pinMode+1)^0,f,c
  1536  0077AC                     u2874:
  1537  0077AC  2E05               	decfsz	??_pinMode^0,f,c
  1538  0077AE  EFD4  F03B         	goto	u2875
  1539  0077B2  5006               	movf	(??_pinMode+1)^0,w,c
  1540  0077B4  1295               	iorwf	149,f,c	;volatile
  1541  0077B6  EF2A  F03C         	goto	l212
  1542  0077BA                     l2536:
  1543  0077BA  C001  F005         	movff	pinMode@pin,??_pinMode
  1544  0077BE  0EE8               	movlw	-24
  1545  0077C0  2605               	addwf	??_pinMode^0,f,c
  1546  0077C2  0E01               	movlw	1
  1547  0077C4  6E06               	movwf	(??_pinMode+1)^0,c
  1548  0077C6  2A05               	incf	??_pinMode^0,f,c
  1549  0077C8  EFE8  F03B         	goto	u2884
  1550  0077CC                     u2885:
  1551  0077CC  90D8               	bcf	status,0,c
  1552  0077CE  3606               	rlcf	(??_pinMode+1)^0,f,c
  1553  0077D0                     u2884:
  1554  0077D0  2E05               	decfsz	??_pinMode^0,f,c
  1555  0077D2  EFE6  F03B         	goto	u2885
  1556  0077D6  5006               	movf	(??_pinMode+1)^0,w,c
  1557  0077D8  0AFF               	xorlw	255
  1558  0077DA  1695               	andwf	149,f,c	;volatile
  1559  0077DC  EF2A  F03C         	goto	l212
  1560  0077E0                     l2538:
  1561  0077E0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1562  0077E2  EFFE  F03B         	goto	u2890
  1563  0077E6  5002               	movf	(pinMode@pin+1)^0,w,c
  1564  0077E8  E107               	bnz	u2891
  1565  0077EA  0E28               	movlw	40
  1566  0077EC  5C01               	subwf	pinMode@pin^0,w,c
  1567  0077EE  B0D8               	btfsc	status,0,c
  1568  0077F0  EFFC  F03B         	goto	u2891
  1569  0077F4  EFFE  F03B         	goto	u2890
  1570  0077F8                     u2891:
  1571  0077F8  EF2A  F03C         	goto	l212
  1572  0077FC                     u2890:
  1573  0077FC                     
  1574                           ;io.c: 61:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  1575  0077FC  5003               	movf	pinMode@type^0,w,c
  1576  0077FE  1004               	iorwf	(pinMode@type+1)^0,w,c
  1577  007800  B4D8               	btfsc	status,2,c
  1578  007802  EF05  F03C         	goto	u2901
  1579  007806  EF07  F03C         	goto	u2900
  1580  00780A                     u2901:
  1581  00780A  EF19  F03C         	goto	l2544
  1582  00780E                     u2900:
  1583  00780E  C001  F005         	movff	pinMode@pin,??_pinMode
  1584  007812  0EE0               	movlw	-32
  1585  007814  2605               	addwf	??_pinMode^0,f,c
  1586  007816  0E01               	movlw	1
  1587  007818  6E06               	movwf	(??_pinMode+1)^0,c
  1588  00781A  2A05               	incf	??_pinMode^0,f,c
  1589  00781C  EF12  F03C         	goto	u2914
  1590  007820                     u2915:
  1591  007820  90D8               	bcf	status,0,c
  1592  007822  3606               	rlcf	(??_pinMode+1)^0,f,c
  1593  007824                     u2914:
  1594  007824  2E05               	decfsz	??_pinMode^0,f,c
  1595  007826  EF10  F03C         	goto	u2915
  1596  00782A  5006               	movf	(??_pinMode+1)^0,w,c
  1597  00782C  1296               	iorwf	150,f,c	;volatile
  1598  00782E  EF2A  F03C         	goto	l212
  1599  007832                     l2544:
  1600  007832  C001  F005         	movff	pinMode@pin,??_pinMode
  1601  007836  0EE0               	movlw	-32
  1602  007838  2605               	addwf	??_pinMode^0,f,c
  1603  00783A  0E01               	movlw	1
  1604  00783C  6E06               	movwf	(??_pinMode+1)^0,c
  1605  00783E  2A05               	incf	??_pinMode^0,f,c
  1606  007840  EF24  F03C         	goto	u2924
  1607  007844                     u2925:
  1608  007844  90D8               	bcf	status,0,c
  1609  007846  3606               	rlcf	(??_pinMode+1)^0,f,c
  1610  007848                     u2924:
  1611  007848  2E05               	decfsz	??_pinMode^0,f,c
  1612  00784A  EF22  F03C         	goto	u2925
  1613  00784E  5006               	movf	(??_pinMode+1)^0,w,c
  1614  007850  0AFF               	xorlw	255
  1615  007852  1696               	andwf	150,f,c	;volatile
  1616  007854                     l212:
  1617  007854  0012               	return		;funcret
  1618  007856                     __end_of_pinMode:
  1619                           	callstack 0
  1620                           
  1621 ;; *************** function _kpInit *****************
  1622 ;; Defined at:
  1623 ;;		line 90 in file "keypad.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, status,2, status,0
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1637 ;;      Params:         0       0       0       0       0       0       0
  1638 ;;      Locals:         0       0       0       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0       0       0
  1640 ;;      Totals:         0       0       0       0       0       0       0
  1641 ;;Total ram usage:        0 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_main
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text7
  1651  006480                     __ptext7:
  1652                           	callstack 0
  1653  006480                     _kpInit:
  1654                           	callstack 30
  1655  006480                     
  1656                           ;keypad.c: 92:     TRISB &= 0x07;
  1657  006480  0E07               	movlw	7
  1658  006482  1693               	andwf	147,f,c	;volatile
  1659                           
  1660                           ;keypad.c: 94:     TRISD |= 0x0f;
  1661  006484  0E0F               	movlw	15
  1662  006486  1295               	iorwf	149,f,c	;volatile
  1663  006488  0012               	return		;funcret
  1664  00648A                     __end_of_kpInit:
  1665                           	callstack 0
  1666                           
  1667 ;; *************** function _defineSenha *****************
  1668 ;; Defined at:
  1669 ;;		line 229 in file "Fechadura.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  i               2   18[COMRAM] int 
  1674 ;;  time            2   16[COMRAM] int 
  1675 ;;  temp            2   14[COMRAM] int 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1685 ;;      Params:         0       0       0       0       0       0       0
  1686 ;;      Locals:         6       0       0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0
  1688 ;;      Totals:         6       0       0       0       0       0       0
  1689 ;;Total ram usage:        6 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 4
  1692 ;; This function calls:
  1693 ;;		_kpDebounce
  1694 ;;		_kpRead
  1695 ;;		_printf
  1696 ;;		_ssdDigit
  1697 ;;		_ssdUpdate
  1698 ;; This function is called by:
  1699 ;;		_main
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text8
  1704  007B4C                     __ptext8:
  1705                           	callstack 0
  1706  007B4C                     _defineSenha:
  1707                           	callstack 26
  1708  007B4C                     
  1709                           ;Fechadura.c: 230:     int i = -1, temp, time;
  1710  007B4C  6813               	setf	defineSenha@i^0,c
  1711  007B4E  6814               	setf	(defineSenha@i+1)^0,c
  1712  007B50                     
  1713                           ;Fechadura.c: 231:     ssdDigit(0, 0);
  1714  007B50  0E00               	movlw	0
  1715  007B52  6E01               	movwf	ssdDigit@pos^0,c
  1716  007B54  0E00               	movlw	0
  1717  007B56  ECF2  F032         	call	_ssdDigit
  1718                           
  1719                           ;Fechadura.c: 232:     ssdDigit(0, 1);
  1720  007B5A  0E01               	movlw	1
  1721  007B5C  6E01               	movwf	ssdDigit@pos^0,c
  1722  007B5E  0E00               	movlw	0
  1723  007B60  ECF2  F032         	call	_ssdDigit
  1724                           
  1725                           ;Fechadura.c: 233:     ssdDigit(0, 2);
  1726  007B64  0E02               	movlw	2
  1727  007B66  6E01               	movwf	ssdDigit@pos^0,c
  1728  007B68  0E00               	movlw	0
  1729  007B6A  ECF2  F032         	call	_ssdDigit
  1730                           
  1731                           ;Fechadura.c: 234:     ssdDigit(0, 3);
  1732  007B6E  0E03               	movlw	3
  1733  007B70  6E01               	movwf	ssdDigit@pos^0,c
  1734  007B72  0E00               	movlw	0
  1735  007B74  ECF2  F032         	call	_ssdDigit
  1736  007B78                     
  1737                           ;Fechadura.c: 236:     printf("Primeiro passo \n Definir senha:");
  1738  007B78  0E03               	movlw	low STR_12
  1739  007B7A  6E09               	movwf	printf@texto^0,c
  1740  007B7C  0E7F               	movlw	high STR_12
  1741  007B7E  6E0A               	movwf	(printf@texto+1)^0,c
  1742  007B80  EC43  F034         	call	_printf	;wreg free
  1743  007B84                     l2600:
  1744                           
  1745                           ;Fechadura.c: 238:         kpDebounce();
  1746  007B84  ECD0  F036         	call	_kpDebounce	;wreg free
  1747  007B88                     
  1748                           ;Fechadura.c: 239:         ssdUpdate();
  1749  007B88  EC28  F036         	call	_ssdUpdate	;wreg free
  1750  007B8C                     
  1751                           ;Fechadura.c: 240:         for (time = 0; time < 100; time++);
  1752  007B8C  0E00               	movlw	0
  1753  007B8E  6E12               	movwf	(defineSenha@time+1)^0,c
  1754  007B90  0E00               	movlw	0
  1755  007B92  6E11               	movwf	defineSenha@time^0,c
  1756  007B94                     l2610:
  1757  007B94  4A11               	infsnz	defineSenha@time^0,f,c
  1758  007B96  2A12               	incf	(defineSenha@time+1)^0,f,c
  1759  007B98  BE12               	btfsc	(defineSenha@time+1)^0,7,c
  1760  007B9A  EFD8  F03D         	goto	u2931
  1761  007B9E  5012               	movf	(defineSenha@time+1)^0,w,c
  1762  007BA0  E109               	bnz	u2930
  1763  007BA2  0E64               	movlw	100
  1764  007BA4  5C11               	subwf	defineSenha@time^0,w,c
  1765  007BA6  A0D8               	btfss	status,0,c
  1766  007BA8  EFD8  F03D         	goto	u2931
  1767  007BAC  EFDA  F03D         	goto	u2930
  1768  007BB0                     u2931:
  1769  007BB0  EFCA  F03D         	goto	l2610
  1770  007BB4                     u2930:
  1771  007BB4                     
  1772                           ;Fechadura.c: 242:         if (kpRead() != temp) {
  1773  007BB4  EC3B  F032         	call	_kpRead	;wreg free
  1774  007BB8  500F               	movf	defineSenha@temp^0,w,c
  1775  007BBA  1801               	xorwf	?_kpRead^0,w,c
  1776  007BBC  E109               	bnz	u2940
  1777  007BBE  5010               	movf	(defineSenha@temp+1)^0,w,c
  1778  007BC0  1802               	xorwf	(?_kpRead+1)^0,w,c
  1779  007BC2  B4D8               	btfsc	status,2,c
  1780  007BC4  EFE6  F03D         	goto	u2941
  1781  007BC8  EFE8  F03D         	goto	u2940
  1782  007BCC                     u2941:
  1783  007BCC  EF58  F03F         	goto	l2698
  1784  007BD0                     u2940:
  1785  007BD0                     
  1786                           ;Fechadura.c: 243:             temp = kpRead();
  1787  007BD0  EC3B  F032         	call	_kpRead	;wreg free
  1788  007BD4  C001  F00F         	movff	?_kpRead,defineSenha@temp
  1789  007BD8  C002  F010         	movff	?_kpRead+1,defineSenha@temp+1
  1790                           
  1791                           ;Fechadura.c: 245:             if (((kpRead()) & (1<<(3))) || ((kpRead()) & (1<<(2))) ||
      +                           ((kpRead()) & (1<<(1))) || ((kpRead()) & (1<<(4)))
  1792  007BDC  EC3B  F032         	call	_kpRead	;wreg free
  1793  007BE0  B601               	btfsc	?_kpRead^0,3,c
  1794  007BE2  EFF5  F03D         	goto	u2951
  1795  007BE6  EFF7  F03D         	goto	u2950
  1796  007BEA                     u2951:
  1797  007BEA  EF48  F03E         	goto	l2636
  1798  007BEE                     u2950:
  1799  007BEE  EC3B  F032         	call	_kpRead	;wreg free
  1800  007BF2  B401               	btfsc	?_kpRead^0,2,c
  1801  007BF4  EFFE  F03D         	goto	u2961
  1802  007BF8  EF00  F03E         	goto	u2960
  1803  007BFC                     u2961:
  1804  007BFC  EF48  F03E         	goto	l2636
  1805  007C00                     u2960:
  1806  007C00  EC3B  F032         	call	_kpRead	;wreg free
  1807  007C04  B201               	btfsc	?_kpRead^0,1,c
  1808  007C06  EF07  F03E         	goto	u2971
  1809  007C0A  EF09  F03E         	goto	u2970
  1810  007C0E                     u2971:
  1811  007C0E  EF48  F03E         	goto	l2636
  1812  007C12                     u2970:
  1813  007C12  EC3B  F032         	call	_kpRead	;wreg free
  1814  007C16  B801               	btfsc	?_kpRead^0,4,c
  1815  007C18  EF10  F03E         	goto	u2981
  1816  007C1C  EF12  F03E         	goto	u2980
  1817  007C20                     u2981:
  1818  007C20  EF48  F03E         	goto	l2636
  1819  007C24                     u2980:
  1820  007C24  EC3B  F032         	call	_kpRead	;wreg free
  1821  007C28  BA01               	btfsc	?_kpRead^0,5,c
  1822  007C2A  EF19  F03E         	goto	u2991
  1823  007C2E  EF1B  F03E         	goto	u2990
  1824  007C32                     u2991:
  1825  007C32  EF48  F03E         	goto	l2636
  1826  007C36                     u2990:
  1827  007C36  EC3B  F032         	call	_kpRead	;wreg free
  1828  007C3A  BC01               	btfsc	?_kpRead^0,6,c
  1829  007C3C  EF22  F03E         	goto	u3001
  1830  007C40  EF24  F03E         	goto	u3000
  1831  007C44                     u3001:
  1832  007C44  EF48  F03E         	goto	l2636
  1833  007C48                     u3000:
  1834  007C48  EC3B  F032         	call	_kpRead	;wreg free
  1835  007C4C  BE01               	btfsc	?_kpRead^0,7,c
  1836  007C4E  EF2B  F03E         	goto	u3011
  1837  007C52  EF2D  F03E         	goto	u3010
  1838  007C56                     u3011:
  1839  007C56  EF48  F03E         	goto	l2636
  1840  007C5A                     u3010:
  1841  007C5A  EC3B  F032         	call	_kpRead	;wreg free
  1842  007C5E  B202               	btfsc	(?_kpRead+1)^0,1,c
  1843  007C60  EF34  F03E         	goto	u3021
  1844  007C64  EF36  F03E         	goto	u3020
  1845  007C68                     u3021:
  1846  007C68  EF48  F03E         	goto	l2636
  1847  007C6C                     u3020:
  1848  007C6C  EC3B  F032         	call	_kpRead	;wreg free
  1849  007C70  B402               	btfsc	(?_kpRead+1)^0,2,c
  1850  007C72  EF3D  F03E         	goto	u3031
  1851  007C76  EF3F  F03E         	goto	u3030
  1852  007C7A                     u3031:
  1853  007C7A  EF48  F03E         	goto	l2636
  1854  007C7E                     u3030:
  1855  007C7E  EC3B  F032         	call	_kpRead	;wreg free
  1856  007C82  A602               	btfss	(?_kpRead+1)^0,3,c
  1857  007C84  EF46  F03E         	goto	u3041
  1858  007C88  EF48  F03E         	goto	u3040
  1859  007C8C                     u3041:
  1860  007C8C  EF4A  F03E         	goto	l2638
  1861  007C90                     u3040:
  1862  007C90                     l2636:
  1863                           
  1864                           ;Fechadura.c: 247:                     || ((kpRead()) & (1<<(9))) || ((kpRead()) & (1<<(
      +                          10))) || ((kpRead()) & (1<<(11)))) {;Fechadura.c: 248:                 i++;
  1865  007C90  4A13               	infsnz	defineSenha@i^0,f,c
  1866  007C92  2A14               	incf	(defineSenha@i+1)^0,f,c
  1867  007C94                     l2638:
  1868                           
  1869                           ;Fechadura.c: 251:             if (((kpRead()) & (1<<(3)))) {
  1870  007C94  EC3B  F032         	call	_kpRead	;wreg free
  1871  007C98  A601               	btfss	?_kpRead^0,3,c
  1872  007C9A  EF51  F03E         	goto	u3051
  1873  007C9E  EF53  F03E         	goto	u3050
  1874  007CA2                     u3051:
  1875  007CA2  EF65  F03E         	goto	l2644
  1876  007CA6                     u3050:
  1877  007CA6                     
  1878                           ;Fechadura.c: 253:                 ssdDigit(1, i);
  1879  007CA6  C013  F001         	movff	defineSenha@i,ssdDigit@pos
  1880  007CAA  0E01               	movlw	1
  1881  007CAC  ECF2  F032         	call	_ssdDigit
  1882  007CB0                     
  1883                           ;Fechadura.c: 254:                 senha[i] = 3;
  1884  007CB0  90D8               	bcf	status,0,c
  1885  007CB2  3413               	rlcf	defineSenha@i^0,w,c
  1886  007CB4  6ED9               	movwf	fsr2l,c
  1887  007CB6  3414               	rlcf	(defineSenha@i+1)^0,w,c
  1888  007CB8  6EDA               	movwf	fsr2h,c
  1889  007CBA  0E1C               	movlw	low _senha
  1890  007CBC  26D9               	addwf	fsr2l,f,c
  1891  007CBE  0E00               	movlw	high _senha
  1892  007CC0  22DA               	addwfc	fsr2h,f,c
  1893  007CC2  0E03               	movlw	3
  1894  007CC4  6EDE               	movwf	postinc2,c
  1895  007CC6  0E00               	movlw	0
  1896  007CC8  6EDD               	movwf	postdec2,c
  1897  007CCA                     l2644:
  1898                           
  1899                           ;Fechadura.c: 257:             if (((kpRead()) & (1<<(2)))) {
  1900  007CCA  EC3B  F032         	call	_kpRead	;wreg free
  1901  007CCE  A401               	btfss	?_kpRead^0,2,c
  1902  007CD0  EF6C  F03E         	goto	u3061
  1903  007CD4  EF6E  F03E         	goto	u3060
  1904  007CD8                     u3061:
  1905  007CD8  EF80  F03E         	goto	l2650
  1906  007CDC                     u3060:
  1907  007CDC                     
  1908                           ;Fechadura.c: 259:                 ssdDigit(4, i);
  1909  007CDC  C013  F001         	movff	defineSenha@i,ssdDigit@pos
  1910  007CE0  0E04               	movlw	4
  1911  007CE2  ECF2  F032         	call	_ssdDigit
  1912  007CE6                     
  1913                           ;Fechadura.c: 260:                 senha[i] = 2;
  1914  007CE6  90D8               	bcf	status,0,c
  1915  007CE8  3413               	rlcf	defineSenha@i^0,w,c
  1916  007CEA  6ED9               	movwf	fsr2l,c
  1917  007CEC  3414               	rlcf	(defineSenha@i+1)^0,w,c
  1918  007CEE  6EDA               	movwf	fsr2h,c
  1919  007CF0  0E1C               	movlw	low _senha
  1920  007CF2  26D9               	addwf	fsr2l,f,c
  1921  007CF4  0E00               	movlw	high _senha
  1922  007CF6  22DA               	addwfc	fsr2h,f,c
  1923  007CF8  0E02               	movlw	2
  1924  007CFA  6EDE               	movwf	postinc2,c
  1925  007CFC  0E00               	movlw	0
  1926  007CFE  6EDD               	movwf	postdec2,c
  1927  007D00                     l2650:
  1928                           
  1929                           ;Fechadura.c: 263:             if (((kpRead()) & (1<<(1)))) {
  1930  007D00  EC3B  F032         	call	_kpRead	;wreg free
  1931  007D04  A201               	btfss	?_kpRead^0,1,c
  1932  007D06  EF87  F03E         	goto	u3071
  1933  007D0A  EF89  F03E         	goto	u3070
  1934  007D0E                     u3071:
  1935  007D0E  EF9B  F03E         	goto	l2656
  1936  007D12                     u3070:
  1937  007D12                     
  1938                           ;Fechadura.c: 265:                 ssdDigit(7, i);
  1939  007D12  C013  F001         	movff	defineSenha@i,ssdDigit@pos
  1940  007D16  0E07               	movlw	7
  1941  007D18  ECF2  F032         	call	_ssdDigit
  1942  007D1C                     
  1943                           ;Fechadura.c: 267:                 senha[i] = 1;
  1944  007D1C  90D8               	bcf	status,0,c
  1945  007D1E  3413               	rlcf	defineSenha@i^0,w,c
  1946  007D20  6ED9               	movwf	fsr2l,c
  1947  007D22  3414               	rlcf	(defineSenha@i+1)^0,w,c
  1948  007D24  6EDA               	movwf	fsr2h,c
  1949  007D26  0E1C               	movlw	low _senha
  1950  007D28  26D9               	addwf	fsr2l,f,c
  1951  007D2A  0E00               	movlw	high _senha
  1952  007D2C  22DA               	addwfc	fsr2h,f,c
  1953  007D2E  0E01               	movlw	1
  1954  007D30  6EDE               	movwf	postinc2,c
  1955  007D32  0E00               	movlw	0
  1956  007D34  6EDD               	movwf	postdec2,c
  1957  007D36                     l2656:
  1958                           
  1959                           ;Fechadura.c: 269:             if (((kpRead()) & (1<<(4)))) {
  1960  007D36  EC3B  F032         	call	_kpRead	;wreg free
  1961  007D3A  A801               	btfss	?_kpRead^0,4,c
  1962  007D3C  EFA2  F03E         	goto	u3081
  1963  007D40  EFA4  F03E         	goto	u3080
  1964  007D44                     u3081:
  1965  007D44  EFB6  F03E         	goto	l2662
  1966  007D48                     u3080:
  1967  007D48                     
  1968                           ;Fechadura.c: 271:                 ssdDigit(0, i);
  1969  007D48  C013  F001         	movff	defineSenha@i,ssdDigit@pos
  1970  007D4C  0E00               	movlw	0
  1971  007D4E  ECF2  F032         	call	_ssdDigit
  1972  007D52                     
  1973                           ;Fechadura.c: 273:                 senha[i] = 4;
  1974  007D52  90D8               	bcf	status,0,c
  1975  007D54  3413               	rlcf	defineSenha@i^0,w,c
  1976  007D56  6ED9               	movwf	fsr2l,c
  1977  007D58  3414               	rlcf	(defineSenha@i+1)^0,w,c
  1978  007D5A  6EDA               	movwf	fsr2h,c
  1979  007D5C  0E1C               	movlw	low _senha
  1980  007D5E  26D9               	addwf	fsr2l,f,c
  1981  007D60  0E00               	movlw	high _senha
  1982  007D62  22DA               	addwfc	fsr2h,f,c
  1983  007D64  0E04               	movlw	4
  1984  007D66  6EDE               	movwf	postinc2,c
  1985  007D68  0E00               	movlw	0
  1986  007D6A  6EDD               	movwf	postdec2,c
  1987  007D6C                     l2662:
  1988                           
  1989                           ;Fechadura.c: 275:             if (((kpRead()) & (1<<(5)))) {
  1990  007D6C  EC3B  F032         	call	_kpRead	;wreg free
  1991  007D70  AA01               	btfss	?_kpRead^0,5,c
  1992  007D72  EFBD  F03E         	goto	u3091
  1993  007D76  EFBF  F03E         	goto	u3090
  1994  007D7A                     u3091:
  1995  007D7A  EFD1  F03E         	goto	l2668
  1996  007D7E                     u3090:
  1997  007D7E                     
  1998                           ;Fechadura.c: 277:                 ssdDigit(8, i);
  1999  007D7E  C013  F001         	movff	defineSenha@i,ssdDigit@pos
  2000  007D82  0E08               	movlw	8
  2001  007D84  ECF2  F032         	call	_ssdDigit
  2002  007D88                     
  2003                           ;Fechadura.c: 279:                 senha[i] = 5;
  2004  007D88  90D8               	bcf	status,0,c
  2005  007D8A  3413               	rlcf	defineSenha@i^0,w,c
  2006  007D8C  6ED9               	movwf	fsr2l,c
  2007  007D8E  3414               	rlcf	(defineSenha@i+1)^0,w,c
  2008  007D90  6EDA               	movwf	fsr2h,c
  2009  007D92  0E1C               	movlw	low _senha
  2010  007D94  26D9               	addwf	fsr2l,f,c
  2011  007D96  0E00               	movlw	high _senha
  2012  007D98  22DA               	addwfc	fsr2h,f,c
  2013  007D9A  0E05               	movlw	5
  2014  007D9C  6EDE               	movwf	postinc2,c
  2015  007D9E  0E00               	movlw	0
  2016  007DA0  6EDD               	movwf	postdec2,c
  2017  007DA2                     l2668:
  2018                           
  2019                           ;Fechadura.c: 281:             if (((kpRead()) & (1<<(6)))) {
  2020  007DA2  EC3B  F032         	call	_kpRead	;wreg free
  2021  007DA6  AC01               	btfss	?_kpRead^0,6,c
  2022  007DA8  EFD8  F03E         	goto	u3101
  2023  007DAC  EFDA  F03E         	goto	u3100
  2024  007DB0                     u3101:
  2025  007DB0  EFEC  F03E         	goto	l2674
  2026  007DB4                     u3100:
  2027  007DB4                     
  2028                           ;Fechadura.c: 283:                 ssdDigit(5, i);
  2029  007DB4  C013  F001         	movff	defineSenha@i,ssdDigit@pos
  2030  007DB8  0E05               	movlw	5
  2031  007DBA  ECF2  F032         	call	_ssdDigit
  2032  007DBE                     
  2033                           ;Fechadura.c: 285:                 senha[i] = 6;
  2034  007DBE  90D8               	bcf	status,0,c
  2035  007DC0  3413               	rlcf	defineSenha@i^0,w,c
  2036  007DC2  6ED9               	movwf	fsr2l,c
  2037  007DC4  3414               	rlcf	(defineSenha@i+1)^0,w,c
  2038  007DC6  6EDA               	movwf	fsr2h,c
  2039  007DC8  0E1C               	movlw	low _senha
  2040  007DCA  26D9               	addwf	fsr2l,f,c
  2041  007DCC  0E00               	movlw	high _senha
  2042  007DCE  22DA               	addwfc	fsr2h,f,c
  2043  007DD0  0E06               	movlw	6
  2044  007DD2  6EDE               	movwf	postinc2,c
  2045  007DD4  0E00               	movlw	0
  2046  007DD6  6EDD               	movwf	postdec2,c
  2047  007DD8                     l2674:
  2048                           
  2049                           ;Fechadura.c: 287:             if (((kpRead()) & (1<<(7)))) {
  2050  007DD8  EC3B  F032         	call	_kpRead	;wreg free
  2051  007DDC  AE01               	btfss	?_kpRead^0,7,c
  2052  007DDE  EFF3  F03E         	goto	u3111
  2053  007DE2  EFF5  F03E         	goto	u3110
  2054  007DE6                     u3111:
  2055  007DE6  EF07  F03F         	goto	l2680
  2056  007DEA                     u3110:
  2057  007DEA                     
  2058                           ;Fechadura.c: 289:                 ssdDigit(2, i);
  2059  007DEA  C013  F001         	movff	defineSenha@i,ssdDigit@pos
  2060  007DEE  0E02               	movlw	2
  2061  007DF0  ECF2  F032         	call	_ssdDigit
  2062  007DF4                     
  2063                           ;Fechadura.c: 291:                 senha[i] = 7;
  2064  007DF4  90D8               	bcf	status,0,c
  2065  007DF6  3413               	rlcf	defineSenha@i^0,w,c
  2066  007DF8  6ED9               	movwf	fsr2l,c
  2067  007DFA  3414               	rlcf	(defineSenha@i+1)^0,w,c
  2068  007DFC  6EDA               	movwf	fsr2h,c
  2069  007DFE  0E1C               	movlw	low _senha
  2070  007E00  26D9               	addwf	fsr2l,f,c
  2071  007E02  0E00               	movlw	high _senha
  2072  007E04  22DA               	addwfc	fsr2h,f,c
  2073  007E06  0E07               	movlw	7
  2074  007E08  6EDE               	movwf	postinc2,c
  2075  007E0A  0E00               	movlw	0
  2076  007E0C  6EDD               	movwf	postdec2,c
  2077  007E0E                     l2680:
  2078                           
  2079                           ;Fechadura.c: 293:             if (((kpRead()) & (1<<(9)))) {
  2080  007E0E  EC3B  F032         	call	_kpRead	;wreg free
  2081  007E12  A202               	btfss	(?_kpRead+1)^0,1,c
  2082  007E14  EF0E  F03F         	goto	u3121
  2083  007E18  EF10  F03F         	goto	u3120
  2084  007E1C                     u3121:
  2085  007E1C  EF22  F03F         	goto	l2686
  2086  007E20                     u3120:
  2087  007E20                     
  2088                           ;Fechadura.c: 295:                 ssdDigit(9, i);
  2089  007E20  C013  F001         	movff	defineSenha@i,ssdDigit@pos
  2090  007E24  0E09               	movlw	9
  2091  007E26  ECF2  F032         	call	_ssdDigit
  2092  007E2A                     
  2093                           ;Fechadura.c: 297:                 senha[i] = 9;
  2094  007E2A  90D8               	bcf	status,0,c
  2095  007E2C  3413               	rlcf	defineSenha@i^0,w,c
  2096  007E2E  6ED9               	movwf	fsr2l,c
  2097  007E30  3414               	rlcf	(defineSenha@i+1)^0,w,c
  2098  007E32  6EDA               	movwf	fsr2h,c
  2099  007E34  0E1C               	movlw	low _senha
  2100  007E36  26D9               	addwf	fsr2l,f,c
  2101  007E38  0E00               	movlw	high _senha
  2102  007E3A  22DA               	addwfc	fsr2h,f,c
  2103  007E3C  0E09               	movlw	9
  2104  007E3E  6EDE               	movwf	postinc2,c
  2105  007E40  0E00               	movlw	0
  2106  007E42  6EDD               	movwf	postdec2,c
  2107  007E44                     l2686:
  2108                           
  2109                           ;Fechadura.c: 299:             if (((kpRead()) & (1<<(10)))) {
  2110  007E44  EC3B  F032         	call	_kpRead	;wreg free
  2111  007E48  A402               	btfss	(?_kpRead+1)^0,2,c
  2112  007E4A  EF29  F03F         	goto	u3131
  2113  007E4E  EF2B  F03F         	goto	u3130
  2114  007E52                     u3131:
  2115  007E52  EF3D  F03F         	goto	l2692
  2116  007E56                     u3130:
  2117  007E56                     
  2118                           ;Fechadura.c: 301:                 ssdDigit(6, i);
  2119  007E56  C013  F001         	movff	defineSenha@i,ssdDigit@pos
  2120  007E5A  0E06               	movlw	6
  2121  007E5C  ECF2  F032         	call	_ssdDigit
  2122  007E60                     
  2123                           ;Fechadura.c: 303:                 senha[i] = 10;
  2124  007E60  90D8               	bcf	status,0,c
  2125  007E62  3413               	rlcf	defineSenha@i^0,w,c
  2126  007E64  6ED9               	movwf	fsr2l,c
  2127  007E66  3414               	rlcf	(defineSenha@i+1)^0,w,c
  2128  007E68  6EDA               	movwf	fsr2h,c
  2129  007E6A  0E1C               	movlw	low _senha
  2130  007E6C  26D9               	addwf	fsr2l,f,c
  2131  007E6E  0E00               	movlw	high _senha
  2132  007E70  22DA               	addwfc	fsr2h,f,c
  2133  007E72  0E0A               	movlw	10
  2134  007E74  6EDE               	movwf	postinc2,c
  2135  007E76  0E00               	movlw	0
  2136  007E78  6EDD               	movwf	postdec2,c
  2137  007E7A                     l2692:
  2138                           
  2139                           ;Fechadura.c: 305:             if (((kpRead()) & (1<<(11)))) {
  2140  007E7A  EC3B  F032         	call	_kpRead	;wreg free
  2141  007E7E  A602               	btfss	(?_kpRead+1)^0,3,c
  2142  007E80  EF44  F03F         	goto	u3141
  2143  007E84  EF46  F03F         	goto	u3140
  2144  007E88                     u3141:
  2145  007E88  EF58  F03F         	goto	l2698
  2146  007E8C                     u3140:
  2147  007E8C                     
  2148                           ;Fechadura.c: 307:                 ssdDigit(3, i);
  2149  007E8C  C013  F001         	movff	defineSenha@i,ssdDigit@pos
  2150  007E90  0E03               	movlw	3
  2151  007E92  ECF2  F032         	call	_ssdDigit
  2152  007E96                     
  2153                           ;Fechadura.c: 309:                 senha[i] = 11;
  2154  007E96  90D8               	bcf	status,0,c
  2155  007E98  3413               	rlcf	defineSenha@i^0,w,c
  2156  007E9A  6ED9               	movwf	fsr2l,c
  2157  007E9C  3414               	rlcf	(defineSenha@i+1)^0,w,c
  2158  007E9E  6EDA               	movwf	fsr2h,c
  2159  007EA0  0E1C               	movlw	low _senha
  2160  007EA2  26D9               	addwf	fsr2l,f,c
  2161  007EA4  0E00               	movlw	high _senha
  2162  007EA6  22DA               	addwfc	fsr2h,f,c
  2163  007EA8  0E0B               	movlw	11
  2164  007EAA  6EDE               	movwf	postinc2,c
  2165  007EAC  0E00               	movlw	0
  2166  007EAE  6EDD               	movwf	postdec2,c
  2167  007EB0                     l2698:
  2168                           
  2169                           ;Fechadura.c: 312:     } while (i < 3);
  2170  007EB0  BE14               	btfsc	(defineSenha@i+1)^0,7,c
  2171  007EB2  EF64  F03F         	goto	u3151
  2172  007EB6  5014               	movf	(defineSenha@i+1)^0,w,c
  2173  007EB8  E109               	bnz	u3150
  2174  007EBA  0E03               	movlw	3
  2175  007EBC  5C13               	subwf	defineSenha@i^0,w,c
  2176  007EBE  A0D8               	btfss	status,0,c
  2177  007EC0  EF64  F03F         	goto	u3151
  2178  007EC4  EF66  F03F         	goto	u3150
  2179  007EC8                     u3151:
  2180  007EC8  EFC2  F03D         	goto	l2600
  2181  007ECC                     u3150:
  2182  007ECC  0012               	return		;funcret
  2183  007ECE                     __end_of_defineSenha:
  2184                           	callstack 0
  2185                           
  2186 ;; *************** function _acesso *****************
  2187 ;; Defined at:
  2188 ;;		line 144 in file "Fechadura.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;		None
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  i               2   23[COMRAM] int 
  2193 ;;  time            2   21[COMRAM] int 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2203 ;;      Params:         0       0       0       0       0       0       0
  2204 ;;      Locals:         4       0       0       0       0       0       0
  2205 ;;      Temps:          3       0       0       0       0       0       0
  2206 ;;      Totals:         7       0       0       0       0       0       0
  2207 ;;Total ram usage:        7 bytes
  2208 ;; Hardware stack levels used: 1
  2209 ;; Hardware stack levels required when called: 4
  2210 ;; This function calls:
  2211 ;;		_kpDebounce
  2212 ;;		_kpRead
  2213 ;;		_lcdCommand
  2214 ;;		_lcdNumber
  2215 ;;		_printf
  2216 ;;		_pwmSet
  2217 ;;		_ssdDigit
  2218 ;;		_teclado1
  2219 ;;		_teclado2
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text9
  2226  007856                     __ptext9:
  2227                           	callstack 0
  2228  007856                     _acesso:
  2229                           	callstack 26
  2230  007856                     
  2231                           ;Fechadura.c: 145:     int time, i;;Fechadura.c: 148:     ssdDigit(0, 0);
  2232  007856  0E00               	movlw	0
  2233  007858  6E01               	movwf	ssdDigit@pos^0,c
  2234  00785A  0E00               	movlw	0
  2235  00785C  ECF2  F032         	call	_ssdDigit
  2236                           
  2237                           ;Fechadura.c: 149:     ssdDigit(0, 1);
  2238  007860  0E01               	movlw	1
  2239  007862  6E01               	movwf	ssdDigit@pos^0,c
  2240  007864  0E00               	movlw	0
  2241  007866  ECF2  F032         	call	_ssdDigit
  2242                           
  2243                           ;Fechadura.c: 150:     ssdDigit(0, 2);
  2244  00786A  0E02               	movlw	2
  2245  00786C  6E01               	movwf	ssdDigit@pos^0,c
  2246  00786E  0E00               	movlw	0
  2247  007870  ECF2  F032         	call	_ssdDigit
  2248                           
  2249                           ;Fechadura.c: 151:     ssdDigit(0, 3);
  2250  007874  0E03               	movlw	3
  2251  007876  6E01               	movwf	ssdDigit@pos^0,c
  2252  007878  0E00               	movlw	0
  2253  00787A  ECF2  F032         	call	_ssdDigit
  2254                           
  2255                           ;Fechadura.c: 153:     lcdCommand(0x01);
  2256  00787E  0E01               	movlw	1
  2257  007880  EC04  F034         	call	_lcdCommand
  2258  007884                     
  2259                           ;Fechadura.c: 154:     printf("Senha para destravar:");
  2260  007884  0ECA               	movlw	low STR_3
  2261  007886  6E09               	movwf	printf@texto^0,c
  2262  007888  0E7F               	movlw	high STR_3
  2263  00788A  6E0A               	movwf	(printf@texto+1)^0,c
  2264  00788C  EC43  F034         	call	_printf	;wreg free
  2265  007890                     
  2266                           ;Fechadura.c: 156:     teclado1();
  2267  007890  ECB6  F038         	call	_teclado1	;wreg free
  2268  007894                     
  2269                           ;Fechadura.c: 158:     for (i = 0; i < 4; i++) {
  2270  007894  0E00               	movlw	0
  2271  007896  6E19               	movwf	(acesso@i+1)^0,c
  2272  007898  0E00               	movlw	0
  2273  00789A  6E18               	movwf	acesso@i^0,c
  2274  00789C                     l2712:
  2275                           
  2276                           ;Fechadura.c: 159:         if (((kpRead()) & (1<<(senha[i])))) {
  2277  00789C  90D8               	bcf	status,0,c
  2278  00789E  3418               	rlcf	acesso@i^0,w,c
  2279  0078A0  6ED9               	movwf	fsr2l,c
  2280  0078A2  3419               	rlcf	(acesso@i+1)^0,w,c
  2281  0078A4  6EDA               	movwf	fsr2h,c
  2282  0078A6  0E1C               	movlw	low _senha
  2283  0078A8  26D9               	addwf	fsr2l,f,c
  2284  0078AA  0E00               	movlw	high _senha
  2285  0078AC  22DA               	addwfc	fsr2h,f,c
  2286  0078AE  50DF               	movf	indf2,w,c
  2287  0078B0  6E13               	movwf	??_acesso^0,c
  2288  0078B2  0E01               	movlw	1
  2289  0078B4  6E14               	movwf	(??_acesso+1)^0,c
  2290  0078B6  0E00               	movlw	0
  2291  0078B8  6E15               	movwf	(??_acesso+2)^0,c
  2292  0078BA  2A13               	incf	??_acesso^0,f,c
  2293  0078BC  EF63  F03C         	goto	u3164
  2294  0078C0                     u3165:
  2295  0078C0  90D8               	bcf	status,0,c
  2296  0078C2  3614               	rlcf	(??_acesso+1)^0,f,c
  2297  0078C4  3615               	rlcf	(??_acesso+2)^0,f,c
  2298  0078C6                     u3164:
  2299  0078C6  2E13               	decfsz	??_acesso^0,f,c
  2300  0078C8  EF60  F03C         	goto	u3165
  2301  0078CC  EC3B  F032         	call	_kpRead	;wreg free
  2302  0078D0  5014               	movf	(??_acesso+1)^0,w,c
  2303  0078D2  1601               	andwf	?_kpRead^0,f,c
  2304  0078D4  5015               	movf	(??_acesso+2)^0,w,c
  2305  0078D6  1602               	andwf	(?_kpRead+1)^0,f,c
  2306  0078D8  5001               	movf	?_kpRead^0,w,c
  2307  0078DA  1002               	iorwf	(?_kpRead+1)^0,w,c
  2308  0078DC  B4D8               	btfsc	status,2,c
  2309  0078DE  EF73  F03C         	goto	u3171
  2310  0078E2  EF75  F03C         	goto	u3170
  2311  0078E6                     u3171:
  2312  0078E6  EF95  F03D         	goto	l2830
  2313  0078EA                     u3170:
  2314  0078EA                     
  2315                           ;Fechadura.c: 160:             flag1 += 1;
  2316  0078EA  4A2E               	infsnz	_flag1^0,f,c
  2317  0078EC  2A2F               	incf	(_flag1+1)^0,f,c
  2318  0078EE                     
  2319                           ;Fechadura.c: 161:             lcdCommand(0x01);
  2320  0078EE  0E01               	movlw	1
  2321  0078F0  EC04  F034         	call	_lcdCommand
  2322  0078F4                     
  2323                           ;Fechadura.c: 163:             printf("DESTRAVADA \n Aguarde... ");
  2324  0078F4  0EB1               	movlw	low STR_4
  2325  0078F6  6E09               	movwf	printf@texto^0,c
  2326  0078F8  0E7F               	movlw	high STR_4
  2327  0078FA  6E0A               	movwf	(printf@texto+1)^0,c
  2328  0078FC  EC43  F034         	call	_printf	;wreg free
  2329  007900                     
  2330                           ;Fechadura.c: 164:             pwmSet(50);
  2331  007900  0E32               	movlw	50
  2332  007902  EC1E  F033         	call	_pwmSet
  2333  007906                     
  2334                           ;Fechadura.c: 165:             for (time = 0; time < 30000; time++);
  2335  007906  0E00               	movlw	0
  2336  007908  6E17               	movwf	(acesso@time+1)^0,c
  2337  00790A  0E00               	movlw	0
  2338  00790C  6E16               	movwf	acesso@time^0,c
  2339  00790E                     l2728:
  2340  00790E  4A16               	infsnz	acesso@time^0,f,c
  2341  007910  2A17               	incf	(acesso@time+1)^0,f,c
  2342  007912  BE17               	btfsc	(acesso@time+1)^0,7,c
  2343  007914  EF95  F03C         	goto	u3181
  2344  007918  0E30               	movlw	48
  2345  00791A  5C16               	subwf	acesso@time^0,w,c
  2346  00791C  0E75               	movlw	117
  2347  00791E  5817               	subwfb	(acesso@time+1)^0,w,c
  2348  007920  A0D8               	btfss	status,0,c
  2349  007922  EF95  F03C         	goto	u3181
  2350  007926  EF97  F03C         	goto	u3180
  2351  00792A                     u3181:
  2352  00792A  EF87  F03C         	goto	l2728
  2353  00792E                     u3180:
  2354  00792E                     
  2355                           ;Fechadura.c: 166:             pwmSet(0);
  2356  00792E  0E00               	movlw	0
  2357  007930  EC1E  F033         	call	_pwmSet
  2358  007934                     
  2359                           ;Fechadura.c: 168:             lcdCommand(0x01);
  2360  007934  0E01               	movlw	1
  2361  007936  EC04  F034         	call	_lcdCommand
  2362  00793A                     
  2363                           ;Fechadura.c: 170:             ssdDigit(0, 0);
  2364  00793A  0E00               	movlw	0
  2365  00793C  6E01               	movwf	ssdDigit@pos^0,c
  2366  00793E  0E00               	movlw	0
  2367  007940  ECF2  F032         	call	_ssdDigit
  2368  007944                     
  2369                           ;Fechadura.c: 171:             ssdDigit(0, 1);
  2370  007944  0E01               	movlw	1
  2371  007946  6E01               	movwf	ssdDigit@pos^0,c
  2372  007948  0E00               	movlw	0
  2373  00794A  ECF2  F032         	call	_ssdDigit
  2374  00794E                     
  2375                           ;Fechadura.c: 172:             ssdDigit(0, 2);
  2376  00794E  0E02               	movlw	2
  2377  007950  6E01               	movwf	ssdDigit@pos^0,c
  2378  007952  0E00               	movlw	0
  2379  007954  ECF2  F032         	call	_ssdDigit
  2380  007958                     
  2381                           ;Fechadura.c: 173:             ssdDigit(0, 3);
  2382  007958  0E03               	movlw	3
  2383  00795A  6E01               	movwf	ssdDigit@pos^0,c
  2384  00795C  0E00               	movlw	0
  2385  00795E  ECF2  F032         	call	_ssdDigit
  2386  007962                     
  2387                           ;Fechadura.c: 175:             printf("#-TRAVAR\n*-Ver historico de senhas ");
  2388  007962  0EDF               	movlw	low STR_5
  2389  007964  6E09               	movwf	printf@texto^0,c
  2390  007966  0E7E               	movlw	high STR_5
  2391  007968  6E0A               	movwf	(printf@texto+1)^0,c
  2392  00796A  EC43  F034         	call	_printf	;wreg free
  2393  00796E                     l2746:
  2394                           
  2395                           ;Fechadura.c: 178:                 ssdDigit(0, 0);
  2396  00796E  0E00               	movlw	0
  2397  007970  6E01               	movwf	ssdDigit@pos^0,c
  2398  007972  0E00               	movlw	0
  2399  007974  ECF2  F032         	call	_ssdDigit
  2400  007978                     
  2401                           ;Fechadura.c: 179:                 ssdDigit(0, 1);
  2402  007978  0E01               	movlw	1
  2403  00797A  6E01               	movwf	ssdDigit@pos^0,c
  2404  00797C  0E00               	movlw	0
  2405  00797E  ECF2  F032         	call	_ssdDigit
  2406  007982                     
  2407                           ;Fechadura.c: 180:                 ssdDigit(0, 2);
  2408  007982  0E02               	movlw	2
  2409  007984  6E01               	movwf	ssdDigit@pos^0,c
  2410  007986  0E00               	movlw	0
  2411  007988  ECF2  F032         	call	_ssdDigit
  2412  00798C                     
  2413                           ;Fechadura.c: 181:                 ssdDigit(0, 3);
  2414  00798C  0E03               	movlw	3
  2415  00798E  6E01               	movwf	ssdDigit@pos^0,c
  2416  007990  0E00               	movlw	0
  2417  007992  ECF2  F032         	call	_ssdDigit
  2418  007996                     
  2419                           ;Fechadura.c: 182:                 if (((kpRead()) & (1<<(8)))) {
  2420  007996  EC3B  F032         	call	_kpRead	;wreg free
  2421  00799A  A002               	btfss	(?_kpRead+1)^0,0,c
  2422  00799C  EFD2  F03C         	goto	u3191
  2423  0079A0  EFD4  F03C         	goto	u3190
  2424  0079A4                     u3191:
  2425  0079A4  EF67  F03D         	goto	l2816
  2426  0079A8                     u3190:
  2427  0079A8                     
  2428                           ;Fechadura.c: 184:                     lcdCommand(0x01);
  2429  0079A8  0E01               	movlw	1
  2430  0079AA  EC04  F034         	call	_lcdCommand
  2431  0079AE                     
  2432                           ;Fechadura.c: 185:                     printf("Informe a senha para travar:");
  2433  0079AE  0E41               	movlw	low STR_6
  2434  0079B0  6E09               	movwf	printf@texto^0,c
  2435  0079B2  0E7F               	movlw	high STR_6
  2436  0079B4  6E0A               	movwf	(printf@texto+1)^0,c
  2437  0079B6  EC43  F034         	call	_printf	;wreg free
  2438  0079BA                     
  2439                           ;Fechadura.c: 187:                     teclado2();
  2440  0079BA  ECDD  F039         	call	_teclado2	;wreg free
  2441  0079BE                     
  2442                           ;Fechadura.c: 190:                     for (i = 0; i < 4; i++) {
  2443  0079BE  0E00               	movlw	0
  2444  0079C0  6E19               	movwf	(acesso@i+1)^0,c
  2445  0079C2  0E00               	movlw	0
  2446  0079C4  6E18               	movwf	acesso@i^0,c
  2447  0079C6                     l2768:
  2448                           
  2449                           ;Fechadura.c: 191:                         if (((kpRead()) & (1<<(senha[i])))) {
  2450  0079C6  90D8               	bcf	status,0,c
  2451  0079C8  3418               	rlcf	acesso@i^0,w,c
  2452  0079CA  6ED9               	movwf	fsr2l,c
  2453  0079CC  3419               	rlcf	(acesso@i+1)^0,w,c
  2454  0079CE  6EDA               	movwf	fsr2h,c
  2455  0079D0  0E1C               	movlw	low _senha
  2456  0079D2  26D9               	addwf	fsr2l,f,c
  2457  0079D4  0E00               	movlw	high _senha
  2458  0079D6  22DA               	addwfc	fsr2h,f,c
  2459  0079D8  50DF               	movf	indf2,w,c
  2460  0079DA  6E13               	movwf	??_acesso^0,c
  2461  0079DC  0E01               	movlw	1
  2462  0079DE  6E14               	movwf	(??_acesso+1)^0,c
  2463  0079E0  0E00               	movlw	0
  2464  0079E2  6E15               	movwf	(??_acesso+2)^0,c
  2465  0079E4  2A13               	incf	??_acesso^0,f,c
  2466  0079E6  EFF8  F03C         	goto	u3204
  2467  0079EA                     u3205:
  2468  0079EA  90D8               	bcf	status,0,c
  2469  0079EC  3614               	rlcf	(??_acesso+1)^0,f,c
  2470  0079EE  3615               	rlcf	(??_acesso+2)^0,f,c
  2471  0079F0                     u3204:
  2472  0079F0  2E13               	decfsz	??_acesso^0,f,c
  2473  0079F2  EFF5  F03C         	goto	u3205
  2474  0079F6  EC3B  F032         	call	_kpRead	;wreg free
  2475  0079FA  5014               	movf	(??_acesso+1)^0,w,c
  2476  0079FC  1601               	andwf	?_kpRead^0,f,c
  2477  0079FE  5015               	movf	(??_acesso+2)^0,w,c
  2478  007A00  1602               	andwf	(?_kpRead+1)^0,f,c
  2479  007A02  5001               	movf	?_kpRead^0,w,c
  2480  007A04  1002               	iorwf	(?_kpRead+1)^0,w,c
  2481  007A06  B4D8               	btfsc	status,2,c
  2482  007A08  EF08  F03D         	goto	u3211
  2483  007A0C  EF0A  F03D         	goto	u3210
  2484  007A10                     u3211:
  2485  007A10  EF31  F03D         	goto	l2794
  2486  007A14                     u3210:
  2487  007A14                     
  2488                           ;Fechadura.c: 192:                             flag2 += 1;
  2489  007A14  4A2C               	infsnz	_flag2^0,f,c
  2490  007A16  2A2D               	incf	(_flag2+1)^0,f,c
  2491  007A18                     
  2492                           ;Fechadura.c: 194:                             lcdCommand(0x01);
  2493  007A18  0E01               	movlw	1
  2494  007A1A  EC04  F034         	call	_lcdCommand
  2495  007A1E                     
  2496                           ;Fechadura.c: 195:                             printf("TRAVADA\nAguarde...");
  2497  007A1E  0EE0               	movlw	low STR_7
  2498  007A20  6E09               	movwf	printf@texto^0,c
  2499  007A22  0E7F               	movlw	high STR_7
  2500  007A24  6E0A               	movwf	(printf@texto+1)^0,c
  2501  007A26  EC43  F034         	call	_printf	;wreg free
  2502  007A2A                     
  2503                           ;Fechadura.c: 196:                             pwmSet(50);
  2504  007A2A  0E32               	movlw	50
  2505  007A2C  EC1E  F033         	call	_pwmSet
  2506  007A30                     
  2507                           ;Fechadura.c: 197:                             for (i = 0; i < 30000; i++);
  2508  007A30  0E00               	movlw	0
  2509  007A32  6E19               	movwf	(acesso@i+1)^0,c
  2510  007A34  0E00               	movlw	0
  2511  007A36  6E18               	movwf	acesso@i^0,c
  2512  007A38                     l2784:
  2513  007A38  4A18               	infsnz	acesso@i^0,f,c
  2514  007A3A  2A19               	incf	(acesso@i+1)^0,f,c
  2515  007A3C  BE19               	btfsc	(acesso@i+1)^0,7,c
  2516  007A3E  EF2A  F03D         	goto	u3221
  2517  007A42  0E30               	movlw	48
  2518  007A44  5C18               	subwf	acesso@i^0,w,c
  2519  007A46  0E75               	movlw	117
  2520  007A48  5819               	subwfb	(acesso@i+1)^0,w,c
  2521  007A4A  A0D8               	btfss	status,0,c
  2522  007A4C  EF2A  F03D         	goto	u3221
  2523  007A50  EF2C  F03D         	goto	u3220
  2524  007A54                     u3221:
  2525  007A54  EF1C  F03D         	goto	l2784
  2526  007A58                     u3220:
  2527  007A58                     
  2528                           ;Fechadura.c: 198:                             pwmSet(0);
  2529  007A58  0E00               	movlw	0
  2530  007A5A  EC1E  F033         	call	_pwmSet
  2531  007A5E  EFA5  F03D         	goto	l109
  2532  007A62                     l2794:
  2533                           
  2534                           ;Fechadura.c: 201:                             lcdCommand(0x01);
  2535  007A62  0E01               	movlw	1
  2536  007A64  EC04  F034         	call	_lcdCommand
  2537  007A68                     
  2538                           ;Fechadura.c: 202:                             printf("TENTE NOVAMENTE\nAguarde...");
  2539  007A68  0E96               	movlw	low STR_8
  2540  007A6A  6E09               	movwf	printf@texto^0,c
  2541  007A6C  0E7F               	movlw	high STR_8
  2542  007A6E  6E0A               	movwf	(printf@texto+1)^0,c
  2543  007A70  EC43  F034         	call	_printf	;wreg free
  2544  007A74                     
  2545                           ;Fechadura.c: 203:                             for (i = 0; i < 30000; i++);
  2546  007A74  0E00               	movlw	0
  2547  007A76  6E19               	movwf	(acesso@i+1)^0,c
  2548  007A78  0E00               	movlw	0
  2549  007A7A  6E18               	movwf	acesso@i^0,c
  2550  007A7C                     l2804:
  2551  007A7C  4A18               	infsnz	acesso@i^0,f,c
  2552  007A7E  2A19               	incf	(acesso@i+1)^0,f,c
  2553  007A80  BE19               	btfsc	(acesso@i+1)^0,7,c
  2554  007A82  EF4C  F03D         	goto	u3231
  2555  007A86  0E30               	movlw	48
  2556  007A88  5C18               	subwf	acesso@i^0,w,c
  2557  007A8A  0E75               	movlw	117
  2558  007A8C  5819               	subwfb	(acesso@i+1)^0,w,c
  2559  007A8E  A0D8               	btfss	status,0,c
  2560  007A90  EF4C  F03D         	goto	u3231
  2561  007A94  EF4E  F03D         	goto	u3230
  2562  007A98                     u3231:
  2563  007A98  EF3E  F03D         	goto	l2804
  2564  007A9C                     u3230:
  2565  007A9C                     
  2566                           ;Fechadura.c: 204:                             lcdCommand(0x01);
  2567  007A9C  0E01               	movlw	1
  2568  007A9E  EC04  F034         	call	_lcdCommand
  2569  007AA2                     
  2570                           ;Fechadura.c: 205:                             printf("#-travar\n*-Ver historico  ");
  2571  007AA2  0E7B               	movlw	low STR_9
  2572  007AA4  6E09               	movwf	printf@texto^0,c
  2573  007AA6  0E7F               	movlw	high STR_9
  2574  007AA8  6E0A               	movwf	(printf@texto+1)^0,c
  2575  007AAA  EC43  F034         	call	_printf	;wreg free
  2576  007AAE                     
  2577                           ;Fechadura.c: 207:                     }
  2578  007AAE  4A18               	infsnz	acesso@i^0,f,c
  2579  007AB0  2A19               	incf	(acesso@i+1)^0,f,c
  2580  007AB2  BE19               	btfsc	(acesso@i+1)^0,7,c
  2581  007AB4  EF65  F03D         	goto	u3241
  2582  007AB8  5019               	movf	(acesso@i+1)^0,w,c
  2583  007ABA  E109               	bnz	u3240
  2584  007ABC  0E04               	movlw	4
  2585  007ABE  5C18               	subwf	acesso@i^0,w,c
  2586  007AC0  A0D8               	btfss	status,0,c
  2587  007AC2  EF65  F03D         	goto	u3241
  2588  007AC6  EF67  F03D         	goto	u3240
  2589  007ACA                     u3241:
  2590  007ACA  EFE3  F03C         	goto	l2768
  2591  007ACE                     u3240:
  2592  007ACE                     l2816:
  2593                           
  2594                           ;Fechadura.c: 211:                 if (((kpRead()) & (1<<(0)))) {
  2595  007ACE  EC3B  F032         	call	_kpRead	;wreg free
  2596  007AD2  A001               	btfss	?_kpRead^0,0,c
  2597  007AD4  EF6E  F03D         	goto	u3251
  2598  007AD8  EF70  F03D         	goto	u3250
  2599  007ADC                     u3251:
  2600  007ADC  EF91  F03D         	goto	l2828
  2601  007AE0                     u3250:
  2602  007AE0                     
  2603                           ;Fechadura.c: 213:                     lcdCommand(0x01);
  2604  007AE0  0E01               	movlw	1
  2605  007AE2  EC04  F034         	call	_lcdCommand
  2606                           
  2607                           ;Fechadura.c: 214:                     lcdCommand(0x80);
  2608  007AE6  0E80               	movlw	128
  2609  007AE8  EC04  F034         	call	_lcdCommand
  2610  007AEC                     
  2611                           ;Fechadura.c: 215:                     printf("DESTRAVADA:");
  2612  007AEC  0EF3               	movlw	low STR_10
  2613  007AEE  6E09               	movwf	printf@texto^0,c
  2614  007AF0  0E7F               	movlw	high STR_10
  2615  007AF2  6E0A               	movwf	(printf@texto+1)^0,c
  2616  007AF4  EC43  F034         	call	_printf	;wreg free
  2617  007AF8                     
  2618                           ;Fechadura.c: 216:                     lcdNumber(flag1);
  2619  007AF8  C02E  F00F         	movff	_flag1,lcdNumber@value
  2620  007AFC  C02F  F010         	movff	_flag1+1,lcdNumber@value+1
  2621  007B00  EC54  F033         	call	_lcdNumber	;wreg free
  2622  007B04                     
  2623                           ;Fechadura.c: 217:                     lcdCommand(0xC0);
  2624  007B04  0EC0               	movlw	192
  2625  007B06  EC04  F034         	call	_lcdCommand
  2626  007B0A                     
  2627                           ;Fechadura.c: 218:                     printf("TRAVADA:");
  2628  007B0A  0EF6               	movlw	low (STR_10+3)
  2629  007B0C  6E09               	movwf	printf@texto^0,c
  2630  007B0E  0E7F               	movlw	high (STR_10+3)
  2631  007B10  6E0A               	movwf	(printf@texto+1)^0,c
  2632  007B12  EC43  F034         	call	_printf	;wreg free
  2633                           
  2634                           ;Fechadura.c: 219:                     lcdNumber(flag2);
  2635  007B16  C02C  F00F         	movff	_flag2,lcdNumber@value
  2636  007B1A  C02D  F010         	movff	_flag2+1,lcdNumber@value+1
  2637  007B1E  EC54  F033         	call	_lcdNumber	;wreg free
  2638  007B22                     l2828:
  2639                           
  2640                           ;Fechadura.c: 222:                 kpDebounce();
  2641  007B22  ECD0  F036         	call	_kpDebounce	;wreg free
  2642  007B26  EFB7  F03C         	goto	l2746
  2643  007B2A                     l2830:
  2644                           
  2645                           ;Fechadura.c: 226:     }
  2646  007B2A  4A18               	infsnz	acesso@i^0,f,c
  2647  007B2C  2A19               	incf	(acesso@i+1)^0,f,c
  2648  007B2E  BE19               	btfsc	(acesso@i+1)^0,7,c
  2649  007B30  EFA3  F03D         	goto	u3261
  2650  007B34  5019               	movf	(acesso@i+1)^0,w,c
  2651  007B36  E109               	bnz	u3260
  2652  007B38  0E04               	movlw	4
  2653  007B3A  5C18               	subwf	acesso@i^0,w,c
  2654  007B3C  A0D8               	btfss	status,0,c
  2655  007B3E  EFA3  F03D         	goto	u3261
  2656  007B42  EFA5  F03D         	goto	u3260
  2657  007B46                     u3261:
  2658  007B46  EF4E  F03C         	goto	l2712
  2659  007B4A                     u3260:
  2660  007B4A                     l109:
  2661  007B4A  0012               	return		;funcret
  2662  007B4C                     __end_of_acesso:
  2663                           	callstack 0
  2664                           
  2665 ;; *************** function _teclado2 *****************
  2666 ;; Defined at:
  2667 ;;		line 75 in file "Fechadura.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  j               2   14[COMRAM] int 
  2672 ;;  time            2   12[COMRAM] int 
  2673 ;;  temp            2   10[COMRAM] int 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2683 ;;      Params:         0       0       0       0       0       0       0
  2684 ;;      Locals:         6       0       0       0       0       0       0
  2685 ;;      Temps:          0       0       0       0       0       0       0
  2686 ;;      Totals:         6       0       0       0       0       0       0
  2687 ;;Total ram usage:        6 bytes
  2688 ;; Hardware stack levels used: 1
  2689 ;; Hardware stack levels required when called: 2
  2690 ;; This function calls:
  2691 ;;		_kpDebounce
  2692 ;;		_kpRead
  2693 ;;		_ssdDigit
  2694 ;;		_ssdUpdate
  2695 ;; This function is called by:
  2696 ;;		_acesso
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           	psect	text10
  2701  0073BA                     __ptext10:
  2702                           	callstack 0
  2703  0073BA                     _teclado2:
  2704                           	callstack 27
  2705  0073BA                     
  2706                           ;Fechadura.c: 76:     int temp, j = -2, time;
  2707  0073BA  0EFF               	movlw	255
  2708  0073BC  6E10               	movwf	(teclado2@j+1)^0,c
  2709  0073BE  0EFE               	movlw	254
  2710  0073C0  6E0F               	movwf	teclado2@j^0,c
  2711  0073C2                     l2410:
  2712                           
  2713                           ;Fechadura.c: 79:         kpDebounce();
  2714  0073C2  ECD0  F036         	call	_kpDebounce	;wreg free
  2715  0073C6                     
  2716                           ;Fechadura.c: 80:         ssdUpdate();
  2717  0073C6  EC28  F036         	call	_ssdUpdate	;wreg free
  2718  0073CA                     
  2719                           ;Fechadura.c: 81:         for (time = 0; time < 100; time++);
  2720  0073CA  0E00               	movlw	0
  2721  0073CC  6E0E               	movwf	(teclado2@time+1)^0,c
  2722  0073CE  0E00               	movlw	0
  2723  0073D0  6E0D               	movwf	teclado2@time^0,c
  2724  0073D2                     l2420:
  2725  0073D2  4A0D               	infsnz	teclado2@time^0,f,c
  2726  0073D4  2A0E               	incf	(teclado2@time+1)^0,f,c
  2727  0073D6  BE0E               	btfsc	(teclado2@time+1)^0,7,c
  2728  0073D8  EFF7  F039         	goto	u2491
  2729  0073DC  500E               	movf	(teclado2@time+1)^0,w,c
  2730  0073DE  E109               	bnz	u2490
  2731  0073E0  0E64               	movlw	100
  2732  0073E2  5C0D               	subwf	teclado2@time^0,w,c
  2733  0073E4  A0D8               	btfss	status,0,c
  2734  0073E6  EFF7  F039         	goto	u2491
  2735  0073EA  EFF9  F039         	goto	u2490
  2736  0073EE                     u2491:
  2737  0073EE  EFE9  F039         	goto	l2420
  2738  0073F2                     u2490:
  2739  0073F2                     
  2740                           ;Fechadura.c: 82:         if (kpRead() != temp) {
  2741  0073F2  EC3B  F032         	call	_kpRead	;wreg free
  2742  0073F6  500B               	movf	teclado2@temp^0,w,c
  2743  0073F8  1801               	xorwf	?_kpRead^0,w,c
  2744  0073FA  E109               	bnz	u2500
  2745  0073FC  500C               	movf	(teclado2@temp+1)^0,w,c
  2746  0073FE  1802               	xorwf	(?_kpRead+1)^0,w,c
  2747  007400  B4D8               	btfsc	status,2,c
  2748  007402  EF05  F03A         	goto	u2501
  2749  007406  EF07  F03A         	goto	u2500
  2750  00740A                     u2501:
  2751  00740A  EFF5  F03A         	goto	l2488
  2752  00740E                     u2500:
  2753  00740E                     
  2754                           ;Fechadura.c: 83:             temp = kpRead();
  2755  00740E  EC3B  F032         	call	_kpRead	;wreg free
  2756  007412  C001  F00B         	movff	?_kpRead,teclado2@temp
  2757  007416  C002  F00C         	movff	?_kpRead+1,teclado2@temp+1
  2758                           
  2759                           ;Fechadura.c: 85:             if (((kpRead()) & (1<<(3))) || ((kpRead()) & (1<<(2))) || 
      +                          ((kpRead()) & (1<<(1))) || ((kpRead()) & (1<<(4))) || ((kpRead()) & (1<<(5))) || ((kpRea
      +                          d()) & (1<<(6))) || ((kpRead()) & (1<<(7))) || ((kpRead()) & (1<<(9))) || ((kpRead()) & 
      +                          (1<<(10))) || ((kpRead()) & (1<<(11)))) {
  2760  00741A  EC3B  F032         	call	_kpRead	;wreg free
  2761  00741E  B601               	btfsc	?_kpRead^0,3,c
  2762  007420  EF14  F03A         	goto	u2511
  2763  007424  EF16  F03A         	goto	u2510
  2764  007428                     u2511:
  2765  007428  EF67  F03A         	goto	l2446
  2766  00742C                     u2510:
  2767  00742C  EC3B  F032         	call	_kpRead	;wreg free
  2768  007430  B401               	btfsc	?_kpRead^0,2,c
  2769  007432  EF1D  F03A         	goto	u2521
  2770  007436  EF1F  F03A         	goto	u2520
  2771  00743A                     u2521:
  2772  00743A  EF67  F03A         	goto	l2446
  2773  00743E                     u2520:
  2774  00743E  EC3B  F032         	call	_kpRead	;wreg free
  2775  007442  B201               	btfsc	?_kpRead^0,1,c
  2776  007444  EF26  F03A         	goto	u2531
  2777  007448  EF28  F03A         	goto	u2530
  2778  00744C                     u2531:
  2779  00744C  EF67  F03A         	goto	l2446
  2780  007450                     u2530:
  2781  007450  EC3B  F032         	call	_kpRead	;wreg free
  2782  007454  B801               	btfsc	?_kpRead^0,4,c
  2783  007456  EF2F  F03A         	goto	u2541
  2784  00745A  EF31  F03A         	goto	u2540
  2785  00745E                     u2541:
  2786  00745E  EF67  F03A         	goto	l2446
  2787  007462                     u2540:
  2788  007462  EC3B  F032         	call	_kpRead	;wreg free
  2789  007466  BA01               	btfsc	?_kpRead^0,5,c
  2790  007468  EF38  F03A         	goto	u2551
  2791  00746C  EF3A  F03A         	goto	u2550
  2792  007470                     u2551:
  2793  007470  EF67  F03A         	goto	l2446
  2794  007474                     u2550:
  2795  007474  EC3B  F032         	call	_kpRead	;wreg free
  2796  007478  BC01               	btfsc	?_kpRead^0,6,c
  2797  00747A  EF41  F03A         	goto	u2561
  2798  00747E  EF43  F03A         	goto	u2560
  2799  007482                     u2561:
  2800  007482  EF67  F03A         	goto	l2446
  2801  007486                     u2560:
  2802  007486  EC3B  F032         	call	_kpRead	;wreg free
  2803  00748A  BE01               	btfsc	?_kpRead^0,7,c
  2804  00748C  EF4A  F03A         	goto	u2571
  2805  007490  EF4C  F03A         	goto	u2570
  2806  007494                     u2571:
  2807  007494  EF67  F03A         	goto	l2446
  2808  007498                     u2570:
  2809  007498  EC3B  F032         	call	_kpRead	;wreg free
  2810  00749C  B202               	btfsc	(?_kpRead+1)^0,1,c
  2811  00749E  EF53  F03A         	goto	u2581
  2812  0074A2  EF55  F03A         	goto	u2580
  2813  0074A6                     u2581:
  2814  0074A6  EF67  F03A         	goto	l2446
  2815  0074AA                     u2580:
  2816  0074AA  EC3B  F032         	call	_kpRead	;wreg free
  2817  0074AE  B402               	btfsc	(?_kpRead+1)^0,2,c
  2818  0074B0  EF5C  F03A         	goto	u2591
  2819  0074B4  EF5E  F03A         	goto	u2590
  2820  0074B8                     u2591:
  2821  0074B8  EF67  F03A         	goto	l2446
  2822  0074BC                     u2590:
  2823  0074BC  EC3B  F032         	call	_kpRead	;wreg free
  2824  0074C0  A602               	btfss	(?_kpRead+1)^0,3,c
  2825  0074C2  EF65  F03A         	goto	u2601
  2826  0074C6  EF67  F03A         	goto	u2600
  2827  0074CA                     u2601:
  2828  0074CA  EF69  F03A         	goto	l2448
  2829  0074CE                     u2600:
  2830  0074CE                     l2446:
  2831                           
  2832                           ;Fechadura.c: 86:                 j++;
  2833  0074CE  4A0F               	infsnz	teclado2@j^0,f,c
  2834  0074D0  2A10               	incf	(teclado2@j+1)^0,f,c
  2835  0074D2                     l2448:
  2836                           
  2837                           ;Fechadura.c: 91:             if (((kpRead()) & (1<<(3)))) {
  2838  0074D2  EC3B  F032         	call	_kpRead	;wreg free
  2839  0074D6  A601               	btfss	?_kpRead^0,3,c
  2840  0074D8  EF70  F03A         	goto	u2611
  2841  0074DC  EF72  F03A         	goto	u2610
  2842  0074E0                     u2611:
  2843  0074E0  EF77  F03A         	goto	l2452
  2844  0074E4                     u2610:
  2845  0074E4                     
  2846                           ;Fechadura.c: 93:                 ssdDigit(1, j);
  2847  0074E4  C00F  F001         	movff	teclado2@j,ssdDigit@pos
  2848  0074E8  0E01               	movlw	1
  2849  0074EA  ECF2  F032         	call	_ssdDigit
  2850  0074EE                     l2452:
  2851                           
  2852                           ;Fechadura.c: 96:             if (((kpRead()) & (1<<(2)))) {
  2853  0074EE  EC3B  F032         	call	_kpRead	;wreg free
  2854  0074F2  A401               	btfss	?_kpRead^0,2,c
  2855  0074F4  EF7E  F03A         	goto	u2621
  2856  0074F8  EF80  F03A         	goto	u2620
  2857  0074FC                     u2621:
  2858  0074FC  EF85  F03A         	goto	l2456
  2859  007500                     u2620:
  2860  007500                     
  2861                           ;Fechadura.c: 98:                 ssdDigit(4, j);
  2862  007500  C00F  F001         	movff	teclado2@j,ssdDigit@pos
  2863  007504  0E04               	movlw	4
  2864  007506  ECF2  F032         	call	_ssdDigit
  2865  00750A                     l2456:
  2866                           
  2867                           ;Fechadura.c: 101:             if (((kpRead()) & (1<<(1)))) {
  2868  00750A  EC3B  F032         	call	_kpRead	;wreg free
  2869  00750E  A201               	btfss	?_kpRead^0,1,c
  2870  007510  EF8C  F03A         	goto	u2631
  2871  007514  EF8E  F03A         	goto	u2630
  2872  007518                     u2631:
  2873  007518  EF93  F03A         	goto	l2460
  2874  00751C                     u2630:
  2875  00751C                     
  2876                           ;Fechadura.c: 103:                 ssdDigit(7, j);
  2877  00751C  C00F  F001         	movff	teclado2@j,ssdDigit@pos
  2878  007520  0E07               	movlw	7
  2879  007522  ECF2  F032         	call	_ssdDigit
  2880  007526                     l2460:
  2881                           
  2882                           ;Fechadura.c: 106:             if (((kpRead()) & (1<<(4)))) {
  2883  007526  EC3B  F032         	call	_kpRead	;wreg free
  2884  00752A  A801               	btfss	?_kpRead^0,4,c
  2885  00752C  EF9A  F03A         	goto	u2641
  2886  007530  EF9C  F03A         	goto	u2640
  2887  007534                     u2641:
  2888  007534  EFA1  F03A         	goto	l2464
  2889  007538                     u2640:
  2890  007538                     
  2891                           ;Fechadura.c: 108:                 ssdDigit(0, j);
  2892  007538  C00F  F001         	movff	teclado2@j,ssdDigit@pos
  2893  00753C  0E00               	movlw	0
  2894  00753E  ECF2  F032         	call	_ssdDigit
  2895  007542                     l2464:
  2896                           
  2897                           ;Fechadura.c: 111:             if (((kpRead()) & (1<<(5)))) {
  2898  007542  EC3B  F032         	call	_kpRead	;wreg free
  2899  007546  AA01               	btfss	?_kpRead^0,5,c
  2900  007548  EFA8  F03A         	goto	u2651
  2901  00754C  EFAA  F03A         	goto	u2650
  2902  007550                     u2651:
  2903  007550  EFAF  F03A         	goto	l2468
  2904  007554                     u2650:
  2905  007554                     
  2906                           ;Fechadura.c: 113:                 ssdDigit(8, j);
  2907  007554  C00F  F001         	movff	teclado2@j,ssdDigit@pos
  2908  007558  0E08               	movlw	8
  2909  00755A  ECF2  F032         	call	_ssdDigit
  2910  00755E                     l2468:
  2911                           
  2912                           ;Fechadura.c: 116:             if (((kpRead()) & (1<<(6)))) {
  2913  00755E  EC3B  F032         	call	_kpRead	;wreg free
  2914  007562  AC01               	btfss	?_kpRead^0,6,c
  2915  007564  EFB6  F03A         	goto	u2661
  2916  007568  EFB8  F03A         	goto	u2660
  2917  00756C                     u2661:
  2918  00756C  EFBD  F03A         	goto	l2472
  2919  007570                     u2660:
  2920  007570                     
  2921                           ;Fechadura.c: 118:                 ssdDigit(5, j);
  2922  007570  C00F  F001         	movff	teclado2@j,ssdDigit@pos
  2923  007574  0E05               	movlw	5
  2924  007576  ECF2  F032         	call	_ssdDigit
  2925  00757A                     l2472:
  2926                           
  2927                           ;Fechadura.c: 121:             if (((kpRead()) & (1<<(7)))) {
  2928  00757A  EC3B  F032         	call	_kpRead	;wreg free
  2929  00757E  AE01               	btfss	?_kpRead^0,7,c
  2930  007580  EFC4  F03A         	goto	u2671
  2931  007584  EFC6  F03A         	goto	u2670
  2932  007588                     u2671:
  2933  007588  EFCB  F03A         	goto	l2476
  2934  00758C                     u2670:
  2935  00758C                     
  2936                           ;Fechadura.c: 123:                 ssdDigit(2, j);
  2937  00758C  C00F  F001         	movff	teclado2@j,ssdDigit@pos
  2938  007590  0E02               	movlw	2
  2939  007592  ECF2  F032         	call	_ssdDigit
  2940  007596                     l2476:
  2941                           
  2942                           ;Fechadura.c: 126:             if (((kpRead()) & (1<<(9)))) {
  2943  007596  EC3B  F032         	call	_kpRead	;wreg free
  2944  00759A  A202               	btfss	(?_kpRead+1)^0,1,c
  2945  00759C  EFD2  F03A         	goto	u2681
  2946  0075A0  EFD4  F03A         	goto	u2680
  2947  0075A4                     u2681:
  2948  0075A4  EFD9  F03A         	goto	l2480
  2949  0075A8                     u2680:
  2950  0075A8                     
  2951                           ;Fechadura.c: 128:                 ssdDigit(9, j);
  2952  0075A8  C00F  F001         	movff	teclado2@j,ssdDigit@pos
  2953  0075AC  0E09               	movlw	9
  2954  0075AE  ECF2  F032         	call	_ssdDigit
  2955  0075B2                     l2480:
  2956                           
  2957                           ;Fechadura.c: 131:             if (((kpRead()) & (1<<(10)))) {
  2958  0075B2  EC3B  F032         	call	_kpRead	;wreg free
  2959  0075B6  A402               	btfss	(?_kpRead+1)^0,2,c
  2960  0075B8  EFE0  F03A         	goto	u2691
  2961  0075BC  EFE2  F03A         	goto	u2690
  2962  0075C0                     u2691:
  2963  0075C0  EFE7  F03A         	goto	l2484
  2964  0075C4                     u2690:
  2965  0075C4                     
  2966                           ;Fechadura.c: 133:                 ssdDigit(6, j);
  2967  0075C4  C00F  F001         	movff	teclado2@j,ssdDigit@pos
  2968  0075C8  0E06               	movlw	6
  2969  0075CA  ECF2  F032         	call	_ssdDigit
  2970  0075CE                     l2484:
  2971                           
  2972                           ;Fechadura.c: 136:             if (((kpRead()) & (1<<(11)))) {
  2973  0075CE  EC3B  F032         	call	_kpRead	;wreg free
  2974  0075D2  A602               	btfss	(?_kpRead+1)^0,3,c
  2975  0075D4  EFEE  F03A         	goto	u2701
  2976  0075D8  EFF0  F03A         	goto	u2700
  2977  0075DC                     u2701:
  2978  0075DC  EFF5  F03A         	goto	l2488
  2979  0075E0                     u2700:
  2980  0075E0                     
  2981                           ;Fechadura.c: 138:                 ssdDigit(3, j);
  2982  0075E0  C00F  F001         	movff	teclado2@j,ssdDigit@pos
  2983  0075E4  0E03               	movlw	3
  2984  0075E6  ECF2  F032         	call	_ssdDigit
  2985  0075EA                     l2488:
  2986                           
  2987                           ;Fechadura.c: 141:     } while (j < 3);
  2988  0075EA  BE10               	btfsc	(teclado2@j+1)^0,7,c
  2989  0075EC  EF01  F03B         	goto	u2711
  2990  0075F0  5010               	movf	(teclado2@j+1)^0,w,c
  2991  0075F2  E109               	bnz	u2710
  2992  0075F4  0E03               	movlw	3
  2993  0075F6  5C0F               	subwf	teclado2@j^0,w,c
  2994  0075F8  A0D8               	btfss	status,0,c
  2995  0075FA  EF01  F03B         	goto	u2711
  2996  0075FE  EF03  F03B         	goto	u2710
  2997  007602                     u2711:
  2998  007602  EFE1  F039         	goto	l2410
  2999  007606                     u2710:
  3000  007606  0012               	return		;funcret
  3001  007608                     __end_of_teclado2:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function _teclado1 *****************
  3005 ;; Defined at:
  3006 ;;		line 13 in file "Fechadura.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;		None
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  i               2   14[COMRAM] int 
  3011 ;;  time            2   12[COMRAM] int 
  3012 ;;  temp            2   10[COMRAM] int 
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3022 ;;      Params:         0       0       0       0       0       0       0
  3023 ;;      Locals:         6       0       0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0       0       0
  3025 ;;      Totals:         6       0       0       0       0       0       0
  3026 ;;Total ram usage:        6 bytes
  3027 ;; Hardware stack levels used: 1
  3028 ;; Hardware stack levels required when called: 2
  3029 ;; This function calls:
  3030 ;;		_kpDebounce
  3031 ;;		_kpRead
  3032 ;;		_ssdDigit
  3033 ;;		_ssdUpdate
  3034 ;; This function is called by:
  3035 ;;		_acesso
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	text11
  3040  00716C                     __ptext11:
  3041                           	callstack 0
  3042  00716C                     _teclado1:
  3043                           	callstack 27
  3044  00716C                     
  3045                           ;Fechadura.c: 14:     int temp, i = -2, time;
  3046  00716C  0EFF               	movlw	255
  3047  00716E  6E10               	movwf	(teclado1@i+1)^0,c
  3048  007170  0EFE               	movlw	254
  3049  007172  6E0F               	movwf	teclado1@i^0,c
  3050  007174                     l2328:
  3051                           
  3052                           ;Fechadura.c: 18:         kpDebounce();
  3053  007174  ECD0  F036         	call	_kpDebounce	;wreg free
  3054  007178                     
  3055                           ;Fechadura.c: 19:         ssdUpdate();
  3056  007178  EC28  F036         	call	_ssdUpdate	;wreg free
  3057  00717C                     
  3058                           ;Fechadura.c: 20:         for (time = 0; time < 100; time++);
  3059  00717C  0E00               	movlw	0
  3060  00717E  6E0E               	movwf	(teclado1@time+1)^0,c
  3061  007180  0E00               	movlw	0
  3062  007182  6E0D               	movwf	teclado1@time^0,c
  3063  007184                     l2338:
  3064  007184  4A0D               	infsnz	teclado1@time^0,f,c
  3065  007186  2A0E               	incf	(teclado1@time+1)^0,f,c
  3066  007188  BE0E               	btfsc	(teclado1@time+1)^0,7,c
  3067  00718A  EFD0  F038         	goto	u2261
  3068  00718E  500E               	movf	(teclado1@time+1)^0,w,c
  3069  007190  E109               	bnz	u2260
  3070  007192  0E64               	movlw	100
  3071  007194  5C0D               	subwf	teclado1@time^0,w,c
  3072  007196  A0D8               	btfss	status,0,c
  3073  007198  EFD0  F038         	goto	u2261
  3074  00719C  EFD2  F038         	goto	u2260
  3075  0071A0                     u2261:
  3076  0071A0  EFC2  F038         	goto	l2338
  3077  0071A4                     u2260:
  3078  0071A4                     
  3079                           ;Fechadura.c: 22:         if (kpRead() != temp) {
  3080  0071A4  EC3B  F032         	call	_kpRead	;wreg free
  3081  0071A8  500B               	movf	teclado1@temp^0,w,c
  3082  0071AA  1801               	xorwf	?_kpRead^0,w,c
  3083  0071AC  E109               	bnz	u2270
  3084  0071AE  500C               	movf	(teclado1@temp+1)^0,w,c
  3085  0071B0  1802               	xorwf	(?_kpRead+1)^0,w,c
  3086  0071B2  B4D8               	btfsc	status,2,c
  3087  0071B4  EFDE  F038         	goto	u2271
  3088  0071B8  EFE0  F038         	goto	u2270
  3089  0071BC                     u2271:
  3090  0071BC  EFCE  F039         	goto	l2406
  3091  0071C0                     u2270:
  3092  0071C0                     
  3093                           ;Fechadura.c: 23:             temp = kpRead();
  3094  0071C0  EC3B  F032         	call	_kpRead	;wreg free
  3095  0071C4  C001  F00B         	movff	?_kpRead,teclado1@temp
  3096  0071C8  C002  F00C         	movff	?_kpRead+1,teclado1@temp+1
  3097                           
  3098                           ;Fechadura.c: 25:             if (((kpRead()) & (1<<(3))) || ((kpRead()) & (1<<(2))) || 
      +                          ((kpRead()) & (1<<(1))) || ((kpRead()) & (1<<(4))) || ((kpRead()) & (1<<(5))) || ((kpRea
      +                          d()) & (1<<(6))) || ((kpRead()) & (1<<(7))) || ((kpRead()) & (1<<(9))) || ((kpRead()) & 
      +                          (1<<(10))) || ((kpRead()) & (1<<(11)))) {
  3099  0071CC  EC3B  F032         	call	_kpRead	;wreg free
  3100  0071D0  B601               	btfsc	?_kpRead^0,3,c
  3101  0071D2  EFED  F038         	goto	u2281
  3102  0071D6  EFEF  F038         	goto	u2280
  3103  0071DA                     u2281:
  3104  0071DA  EF40  F039         	goto	l2364
  3105  0071DE                     u2280:
  3106  0071DE  EC3B  F032         	call	_kpRead	;wreg free
  3107  0071E2  B401               	btfsc	?_kpRead^0,2,c
  3108  0071E4  EFF6  F038         	goto	u2291
  3109  0071E8  EFF8  F038         	goto	u2290
  3110  0071EC                     u2291:
  3111  0071EC  EF40  F039         	goto	l2364
  3112  0071F0                     u2290:
  3113  0071F0  EC3B  F032         	call	_kpRead	;wreg free
  3114  0071F4  B201               	btfsc	?_kpRead^0,1,c
  3115  0071F6  EFFF  F038         	goto	u2301
  3116  0071FA  EF01  F039         	goto	u2300
  3117  0071FE                     u2301:
  3118  0071FE  EF40  F039         	goto	l2364
  3119  007202                     u2300:
  3120  007202  EC3B  F032         	call	_kpRead	;wreg free
  3121  007206  B801               	btfsc	?_kpRead^0,4,c
  3122  007208  EF08  F039         	goto	u2311
  3123  00720C  EF0A  F039         	goto	u2310
  3124  007210                     u2311:
  3125  007210  EF40  F039         	goto	l2364
  3126  007214                     u2310:
  3127  007214  EC3B  F032         	call	_kpRead	;wreg free
  3128  007218  BA01               	btfsc	?_kpRead^0,5,c
  3129  00721A  EF11  F039         	goto	u2321
  3130  00721E  EF13  F039         	goto	u2320
  3131  007222                     u2321:
  3132  007222  EF40  F039         	goto	l2364
  3133  007226                     u2320:
  3134  007226  EC3B  F032         	call	_kpRead	;wreg free
  3135  00722A  BC01               	btfsc	?_kpRead^0,6,c
  3136  00722C  EF1A  F039         	goto	u2331
  3137  007230  EF1C  F039         	goto	u2330
  3138  007234                     u2331:
  3139  007234  EF40  F039         	goto	l2364
  3140  007238                     u2330:
  3141  007238  EC3B  F032         	call	_kpRead	;wreg free
  3142  00723C  BE01               	btfsc	?_kpRead^0,7,c
  3143  00723E  EF23  F039         	goto	u2341
  3144  007242  EF25  F039         	goto	u2340
  3145  007246                     u2341:
  3146  007246  EF40  F039         	goto	l2364
  3147  00724A                     u2340:
  3148  00724A  EC3B  F032         	call	_kpRead	;wreg free
  3149  00724E  B202               	btfsc	(?_kpRead+1)^0,1,c
  3150  007250  EF2C  F039         	goto	u2351
  3151  007254  EF2E  F039         	goto	u2350
  3152  007258                     u2351:
  3153  007258  EF40  F039         	goto	l2364
  3154  00725C                     u2350:
  3155  00725C  EC3B  F032         	call	_kpRead	;wreg free
  3156  007260  B402               	btfsc	(?_kpRead+1)^0,2,c
  3157  007262  EF35  F039         	goto	u2361
  3158  007266  EF37  F039         	goto	u2360
  3159  00726A                     u2361:
  3160  00726A  EF40  F039         	goto	l2364
  3161  00726E                     u2360:
  3162  00726E  EC3B  F032         	call	_kpRead	;wreg free
  3163  007272  A602               	btfss	(?_kpRead+1)^0,3,c
  3164  007274  EF3E  F039         	goto	u2371
  3165  007278  EF40  F039         	goto	u2370
  3166  00727C                     u2371:
  3167  00727C  EF42  F039         	goto	l2366
  3168  007280                     u2370:
  3169  007280                     l2364:
  3170                           
  3171                           ;Fechadura.c: 26:                 i++;
  3172  007280  4A0F               	infsnz	teclado1@i^0,f,c
  3173  007282  2A10               	incf	(teclado1@i+1)^0,f,c
  3174  007284                     l2366:
  3175                           
  3176                           ;Fechadura.c: 31:             if (((kpRead()) & (1<<(3)))) {
  3177  007284  EC3B  F032         	call	_kpRead	;wreg free
  3178  007288  A601               	btfss	?_kpRead^0,3,c
  3179  00728A  EF49  F039         	goto	u2381
  3180  00728E  EF4B  F039         	goto	u2380
  3181  007292                     u2381:
  3182  007292  EF50  F039         	goto	l2370
  3183  007296                     u2380:
  3184  007296                     
  3185                           ;Fechadura.c: 33:                 ssdDigit(1, i);
  3186  007296  C00F  F001         	movff	teclado1@i,ssdDigit@pos
  3187  00729A  0E01               	movlw	1
  3188  00729C  ECF2  F032         	call	_ssdDigit
  3189  0072A0                     l2370:
  3190                           
  3191                           ;Fechadura.c: 35:             if (((kpRead()) & (1<<(2)))) {
  3192  0072A0  EC3B  F032         	call	_kpRead	;wreg free
  3193  0072A4  A401               	btfss	?_kpRead^0,2,c
  3194  0072A6  EF57  F039         	goto	u2391
  3195  0072AA  EF59  F039         	goto	u2390
  3196  0072AE                     u2391:
  3197  0072AE  EF5E  F039         	goto	l2374
  3198  0072B2                     u2390:
  3199  0072B2                     
  3200                           ;Fechadura.c: 37:                 ssdDigit(4, i);
  3201  0072B2  C00F  F001         	movff	teclado1@i,ssdDigit@pos
  3202  0072B6  0E04               	movlw	4
  3203  0072B8  ECF2  F032         	call	_ssdDigit
  3204  0072BC                     l2374:
  3205                           
  3206                           ;Fechadura.c: 39:             if (((kpRead()) & (1<<(1)))) {
  3207  0072BC  EC3B  F032         	call	_kpRead	;wreg free
  3208  0072C0  A201               	btfss	?_kpRead^0,1,c
  3209  0072C2  EF65  F039         	goto	u2401
  3210  0072C6  EF67  F039         	goto	u2400
  3211  0072CA                     u2401:
  3212  0072CA  EF6C  F039         	goto	l2378
  3213  0072CE                     u2400:
  3214  0072CE                     
  3215                           ;Fechadura.c: 41:                 ssdDigit(7, i);
  3216  0072CE  C00F  F001         	movff	teclado1@i,ssdDigit@pos
  3217  0072D2  0E07               	movlw	7
  3218  0072D4  ECF2  F032         	call	_ssdDigit
  3219  0072D8                     l2378:
  3220                           
  3221                           ;Fechadura.c: 43:             if (((kpRead()) & (1<<(4)))) {
  3222  0072D8  EC3B  F032         	call	_kpRead	;wreg free
  3223  0072DC  A801               	btfss	?_kpRead^0,4,c
  3224  0072DE  EF73  F039         	goto	u2411
  3225  0072E2  EF75  F039         	goto	u2410
  3226  0072E6                     u2411:
  3227  0072E6  EF7A  F039         	goto	l2382
  3228  0072EA                     u2410:
  3229  0072EA                     
  3230                           ;Fechadura.c: 45:                 ssdDigit(0, i);
  3231  0072EA  C00F  F001         	movff	teclado1@i,ssdDigit@pos
  3232  0072EE  0E00               	movlw	0
  3233  0072F0  ECF2  F032         	call	_ssdDigit
  3234  0072F4                     l2382:
  3235                           
  3236                           ;Fechadura.c: 47:             if (((kpRead()) & (1<<(5)))) {
  3237  0072F4  EC3B  F032         	call	_kpRead	;wreg free
  3238  0072F8  AA01               	btfss	?_kpRead^0,5,c
  3239  0072FA  EF81  F039         	goto	u2421
  3240  0072FE  EF83  F039         	goto	u2420
  3241  007302                     u2421:
  3242  007302  EF88  F039         	goto	l2386
  3243  007306                     u2420:
  3244  007306                     
  3245                           ;Fechadura.c: 49:                 ssdDigit(8, i);
  3246  007306  C00F  F001         	movff	teclado1@i,ssdDigit@pos
  3247  00730A  0E08               	movlw	8
  3248  00730C  ECF2  F032         	call	_ssdDigit
  3249  007310                     l2386:
  3250                           
  3251                           ;Fechadura.c: 51:             if (((kpRead()) & (1<<(6)))) {
  3252  007310  EC3B  F032         	call	_kpRead	;wreg free
  3253  007314  AC01               	btfss	?_kpRead^0,6,c
  3254  007316  EF8F  F039         	goto	u2431
  3255  00731A  EF91  F039         	goto	u2430
  3256  00731E                     u2431:
  3257  00731E  EF96  F039         	goto	l2390
  3258  007322                     u2430:
  3259  007322                     
  3260                           ;Fechadura.c: 53:                 ssdDigit(5, i);
  3261  007322  C00F  F001         	movff	teclado1@i,ssdDigit@pos
  3262  007326  0E05               	movlw	5
  3263  007328  ECF2  F032         	call	_ssdDigit
  3264  00732C                     l2390:
  3265                           
  3266                           ;Fechadura.c: 55:             if (((kpRead()) & (1<<(7)))) {
  3267  00732C  EC3B  F032         	call	_kpRead	;wreg free
  3268  007330  AE01               	btfss	?_kpRead^0,7,c
  3269  007332  EF9D  F039         	goto	u2441
  3270  007336  EF9F  F039         	goto	u2440
  3271  00733A                     u2441:
  3272  00733A  EFA4  F039         	goto	l2394
  3273  00733E                     u2440:
  3274  00733E                     
  3275                           ;Fechadura.c: 57:                 ssdDigit(2, i);
  3276  00733E  C00F  F001         	movff	teclado1@i,ssdDigit@pos
  3277  007342  0E02               	movlw	2
  3278  007344  ECF2  F032         	call	_ssdDigit
  3279  007348                     l2394:
  3280                           
  3281                           ;Fechadura.c: 59:             if (((kpRead()) & (1<<(9)))) {
  3282  007348  EC3B  F032         	call	_kpRead	;wreg free
  3283  00734C  A202               	btfss	(?_kpRead+1)^0,1,c
  3284  00734E  EFAB  F039         	goto	u2451
  3285  007352  EFAD  F039         	goto	u2450
  3286  007356                     u2451:
  3287  007356  EFB2  F039         	goto	l2398
  3288  00735A                     u2450:
  3289  00735A                     
  3290                           ;Fechadura.c: 61:                 ssdDigit(9, i);
  3291  00735A  C00F  F001         	movff	teclado1@i,ssdDigit@pos
  3292  00735E  0E09               	movlw	9
  3293  007360  ECF2  F032         	call	_ssdDigit
  3294  007364                     l2398:
  3295                           
  3296                           ;Fechadura.c: 63:             if (((kpRead()) & (1<<(10)))) {
  3297  007364  EC3B  F032         	call	_kpRead	;wreg free
  3298  007368  A402               	btfss	(?_kpRead+1)^0,2,c
  3299  00736A  EFB9  F039         	goto	u2461
  3300  00736E  EFBB  F039         	goto	u2460
  3301  007372                     u2461:
  3302  007372  EFC0  F039         	goto	l2402
  3303  007376                     u2460:
  3304  007376                     
  3305                           ;Fechadura.c: 65:                 ssdDigit(6, i);
  3306  007376  C00F  F001         	movff	teclado1@i,ssdDigit@pos
  3307  00737A  0E06               	movlw	6
  3308  00737C  ECF2  F032         	call	_ssdDigit
  3309  007380                     l2402:
  3310                           
  3311                           ;Fechadura.c: 67:             if (((kpRead()) & (1<<(11)))) {
  3312  007380  EC3B  F032         	call	_kpRead	;wreg free
  3313  007384  A602               	btfss	(?_kpRead+1)^0,3,c
  3314  007386  EFC7  F039         	goto	u2471
  3315  00738A  EFC9  F039         	goto	u2470
  3316  00738E                     u2471:
  3317  00738E  EFCE  F039         	goto	l2406
  3318  007392                     u2470:
  3319  007392                     
  3320                           ;Fechadura.c: 69:                 ssdDigit(3, i);
  3321  007392  C00F  F001         	movff	teclado1@i,ssdDigit@pos
  3322  007396  0E03               	movlw	3
  3323  007398  ECF2  F032         	call	_ssdDigit
  3324  00739C                     l2406:
  3325                           
  3326                           ;Fechadura.c: 72:     } while (i < 3);
  3327  00739C  BE10               	btfsc	(teclado1@i+1)^0,7,c
  3328  00739E  EFDA  F039         	goto	u2481
  3329  0073A2  5010               	movf	(teclado1@i+1)^0,w,c
  3330  0073A4  E109               	bnz	u2480
  3331  0073A6  0E03               	movlw	3
  3332  0073A8  5C0F               	subwf	teclado1@i^0,w,c
  3333  0073AA  A0D8               	btfss	status,0,c
  3334  0073AC  EFDA  F039         	goto	u2481
  3335  0073B0  EFDC  F039         	goto	u2480
  3336  0073B4                     u2481:
  3337  0073B4  EFBA  F038         	goto	l2328
  3338  0073B8                     u2480:
  3339  0073B8  0012               	return		;funcret
  3340  0073BA                     __end_of_teclado1:
  3341                           	callstack 0
  3342                           
  3343 ;; *************** function _ssdUpdate *****************
  3344 ;; Defined at:
  3345 ;;		line 54 in file "ssd.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3359 ;;      Params:         0       0       0       0       0       0       0
  3360 ;;      Locals:         0       0       0       0       0       0       0
  3361 ;;      Temps:          2       0       0       0       0       0       0
  3362 ;;      Totals:         2       0       0       0       0       0       0
  3363 ;;Total ram usage:        2 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; Hardware stack levels required when called: 1
  3366 ;; This function calls:
  3367 ;;		_digitalWrite
  3368 ;; This function is called by:
  3369 ;;		_teclado1
  3370 ;;		_teclado2
  3371 ;;		_defineSenha
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text12
  3376  006C50                     __ptext12:
  3377                           	callstack 0
  3378  006C50                     _ssdUpdate:
  3379                           	callstack 28
  3380  006C50                     
  3381                           ;ssd.c: 58:     TRISD= 0x00;
  3382  006C50  0E00               	movlw	0
  3383  006C52  6E95               	movwf	149,c	;volatile
  3384  006C54                     
  3385                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  3386  006C54  0E00               	movlw	0
  3387  006C56  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3388  006C58  0E02               	movlw	2
  3389  006C5A  6E01               	movwf	digitalWrite@pin^0,c
  3390  006C5C  0E00               	movlw	0
  3391  006C5E  6E04               	movwf	(digitalWrite@value+1)^0,c
  3392  006C60  0E00               	movlw	0
  3393  006C62  6E03               	movwf	digitalWrite@value^0,c
  3394  006C64  EC8F  F037         	call	_digitalWrite	;wreg free
  3395  006C68                     
  3396                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  3397  006C68  0E00               	movlw	0
  3398  006C6A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3399  006C6C  0E03               	movlw	3
  3400  006C6E  6E01               	movwf	digitalWrite@pin^0,c
  3401  006C70  0E00               	movlw	0
  3402  006C72  6E04               	movwf	(digitalWrite@value+1)^0,c
  3403  006C74  0E00               	movlw	0
  3404  006C76  6E03               	movwf	digitalWrite@value^0,c
  3405  006C78  EC8F  F037         	call	_digitalWrite	;wreg free
  3406  006C7C                     
  3407                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  3408  006C7C  0E00               	movlw	0
  3409  006C7E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3410  006C80  0E04               	movlw	4
  3411  006C82  6E01               	movwf	digitalWrite@pin^0,c
  3412  006C84  0E00               	movlw	0
  3413  006C86  6E04               	movwf	(digitalWrite@value+1)^0,c
  3414  006C88  0E00               	movlw	0
  3415  006C8A  6E03               	movwf	digitalWrite@value^0,c
  3416  006C8C  EC8F  F037         	call	_digitalWrite	;wreg free
  3417  006C90                     
  3418                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  3419  006C90  0E00               	movlw	0
  3420  006C92  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3421  006C94  0E05               	movlw	5
  3422  006C96  6E01               	movwf	digitalWrite@pin^0,c
  3423  006C98  0E00               	movlw	0
  3424  006C9A  6E04               	movwf	(digitalWrite@value+1)^0,c
  3425  006C9C  0E00               	movlw	0
  3426  006C9E  6E03               	movwf	digitalWrite@value^0,c
  3427  006CA0  EC8F  F037         	call	_digitalWrite	;wreg free
  3428                           
  3429                           ;ssd.c: 66:     PORTD = 0x00;
  3430  006CA4  0E00               	movlw	0
  3431  006CA6  6E83               	movwf	131,c	;volatile
  3432                           
  3433                           ;ssd.c: 69:     switch (display)
  3434  006CA8  EFB2  F036         	goto	l2112
  3435  006CAC                     l2084:
  3436                           
  3437                           ;ssd.c: 72:             PORTD = valor[v0];
  3438  006CAC  0ECF               	movlw	low _valor@ssd$F285
  3439  006CAE  2433               	addwf	_v0^0,w,c
  3440  006CB0  6EF6               	movwf	tblptrl,c
  3441  006CB2  6AF7               	clrf	tblptrh,c
  3442  006CB4  0E7E               	movlw	high _valor@ssd$F285
  3443  006CB6  22F7               	addwfc	tblptrh,f,c
  3444  006CB8                     	if	0	;There are less than 3 active tblptr bytes
  3445  006CB8                     	endif
  3446  006CB8  0008               	tblrd		*
  3447  006CBA  CFF5 FF83          	movff	tablat,3971	;volatile
  3448  006CBE                     
  3449                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  3450  006CBE  0E00               	movlw	0
  3451  006CC0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3452  006CC2  0E02               	movlw	2
  3453  006CC4  6E01               	movwf	digitalWrite@pin^0,c
  3454  006CC6  0E00               	movlw	0
  3455  006CC8  6E04               	movwf	(digitalWrite@value+1)^0,c
  3456  006CCA  0E01               	movlw	1
  3457  006CCC  6E03               	movwf	digitalWrite@value^0,c
  3458  006CCE  EC8F  F037         	call	_digitalWrite	;wreg free
  3459  006CD2                     
  3460                           ;ssd.c: 74:             display = 1;
  3461  006CD2  0E01               	movlw	1
  3462  006CD4  6E34               	movwf	_display^0,c
  3463                           
  3464                           ;ssd.c: 75:             break;
  3465  006CD6  EFCF  F036         	goto	l343
  3466  006CDA                     l2090:
  3467                           
  3468                           ;ssd.c: 78:             PORTD = valor[v1];
  3469  006CDA  0ECF               	movlw	low _valor@ssd$F285
  3470  006CDC  2432               	addwf	_v1^0,w,c
  3471  006CDE  6EF6               	movwf	tblptrl,c
  3472  006CE0  6AF7               	clrf	tblptrh,c
  3473  006CE2  0E7E               	movlw	high _valor@ssd$F285
  3474  006CE4  22F7               	addwfc	tblptrh,f,c
  3475  006CE6                     	if	0	;There are less than 3 active tblptr bytes
  3476  006CE6                     	endif
  3477  006CE6  0008               	tblrd		*
  3478  006CE8  CFF5 FF83          	movff	tablat,3971	;volatile
  3479  006CEC                     
  3480                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  3481  006CEC  0E00               	movlw	0
  3482  006CEE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3483  006CF0  0E03               	movlw	3
  3484  006CF2  6E01               	movwf	digitalWrite@pin^0,c
  3485  006CF4  0E00               	movlw	0
  3486  006CF6  6E04               	movwf	(digitalWrite@value+1)^0,c
  3487  006CF8  0E01               	movlw	1
  3488  006CFA  6E03               	movwf	digitalWrite@value^0,c
  3489  006CFC  EC8F  F037         	call	_digitalWrite	;wreg free
  3490  006D00                     
  3491                           ;ssd.c: 80:             display = 2;
  3492  006D00  0E02               	movlw	2
  3493  006D02  6E34               	movwf	_display^0,c
  3494                           
  3495                           ;ssd.c: 81:             break;
  3496  006D04  EFCF  F036         	goto	l343
  3497  006D08                     l2096:
  3498                           
  3499                           ;ssd.c: 84:             PORTD = valor[v2];
  3500  006D08  0ECF               	movlw	low _valor@ssd$F285
  3501  006D0A  2431               	addwf	_v2^0,w,c
  3502  006D0C  6EF6               	movwf	tblptrl,c
  3503  006D0E  6AF7               	clrf	tblptrh,c
  3504  006D10  0E7E               	movlw	high _valor@ssd$F285
  3505  006D12  22F7               	addwfc	tblptrh,f,c
  3506  006D14                     	if	0	;There are less than 3 active tblptr bytes
  3507  006D14                     	endif
  3508  006D14  0008               	tblrd		*
  3509  006D16  CFF5 FF83          	movff	tablat,3971	;volatile
  3510  006D1A                     
  3511                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  3512  006D1A  0E00               	movlw	0
  3513  006D1C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3514  006D1E  0E04               	movlw	4
  3515  006D20  6E01               	movwf	digitalWrite@pin^0,c
  3516  006D22  0E00               	movlw	0
  3517  006D24  6E04               	movwf	(digitalWrite@value+1)^0,c
  3518  006D26  0E01               	movlw	1
  3519  006D28  6E03               	movwf	digitalWrite@value^0,c
  3520  006D2A  EC8F  F037         	call	_digitalWrite	;wreg free
  3521  006D2E                     
  3522                           ;ssd.c: 86:             display = 3;
  3523  006D2E  0E03               	movlw	3
  3524  006D30  6E34               	movwf	_display^0,c
  3525                           
  3526                           ;ssd.c: 87:             break;
  3527  006D32  EFCF  F036         	goto	l343
  3528  006D36                     l2102:
  3529                           
  3530                           ;ssd.c: 90:             PORTD = valor[v3];
  3531  006D36  0ECF               	movlw	low _valor@ssd$F285
  3532  006D38  2430               	addwf	_v3^0,w,c
  3533  006D3A  6EF6               	movwf	tblptrl,c
  3534  006D3C  6AF7               	clrf	tblptrh,c
  3535  006D3E  0E7E               	movlw	high _valor@ssd$F285
  3536  006D40  22F7               	addwfc	tblptrh,f,c
  3537  006D42                     	if	0	;There are less than 3 active tblptr bytes
  3538  006D42                     	endif
  3539  006D42  0008               	tblrd		*
  3540  006D44  CFF5 FF83          	movff	tablat,3971	;volatile
  3541  006D48                     
  3542                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  3543  006D48  0E00               	movlw	0
  3544  006D4A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3545  006D4C  0E05               	movlw	5
  3546  006D4E  6E01               	movwf	digitalWrite@pin^0,c
  3547  006D50  0E00               	movlw	0
  3548  006D52  6E04               	movwf	(digitalWrite@value+1)^0,c
  3549  006D54  0E01               	movlw	1
  3550  006D56  6E03               	movwf	digitalWrite@value^0,c
  3551  006D58  EC8F  F037         	call	_digitalWrite	;wreg free
  3552  006D5C                     l2106:
  3553                           
  3554                           ;ssd.c: 92:             display = 0;
  3555  006D5C  0E00               	movlw	0
  3556  006D5E  6E34               	movwf	_display^0,c
  3557                           
  3558                           ;ssd.c: 93:             break;
  3559  006D60  EFCF  F036         	goto	l343
  3560  006D64                     l2112:
  3561  006D64  5034               	movf	_display^0,w,c
  3562  006D66  6E07               	movwf	??_ssdUpdate^0,c
  3563  006D68  6A08               	clrf	(??_ssdUpdate+1)^0,c
  3564                           
  3565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3566                           ; Switch size 1, requested type "simple"
  3567                           ; Number of cases is 1, Range of values is 0 to 0
  3568                           ; switch strategies available:
  3569                           ; Name         Instructions Cycles
  3570                           ; simple_byte            4     3 (average)
  3571                           ;	Chosen strategy is simple_byte
  3572  006D6A  5008               	movf	(??_ssdUpdate+1)^0,w,c
  3573  006D6C  0A00               	xorlw	0	; case 0
  3574  006D6E  B4D8               	btfsc	status,2,c
  3575  006D70  EFBC  F036         	goto	l2874
  3576  006D74  EFAE  F036         	goto	l2106
  3577  006D78                     l2874:
  3578                           
  3579                           ; Switch size 1, requested type "simple"
  3580                           ; Number of cases is 4, Range of values is 0 to 3
  3581                           ; switch strategies available:
  3582                           ; Name         Instructions Cycles
  3583                           ; simple_byte           13     7 (average)
  3584                           ;	Chosen strategy is simple_byte
  3585  006D78  5007               	movf	??_ssdUpdate^0,w,c
  3586  006D7A  0A00               	xorlw	0	; case 0
  3587  006D7C  B4D8               	btfsc	status,2,c
  3588  006D7E  EF56  F036         	goto	l2084
  3589  006D82  0A01               	xorlw	1	; case 1
  3590  006D84  B4D8               	btfsc	status,2,c
  3591  006D86  EF6D  F036         	goto	l2090
  3592  006D8A  0A03               	xorlw	3	; case 2
  3593  006D8C  B4D8               	btfsc	status,2,c
  3594  006D8E  EF84  F036         	goto	l2096
  3595  006D92  0A01               	xorlw	1	; case 3
  3596  006D94  B4D8               	btfsc	status,2,c
  3597  006D96  EF9B  F036         	goto	l2102
  3598  006D9A  EFAE  F036         	goto	l2106
  3599  006D9E                     l343:
  3600  006D9E  0012               	return		;funcret
  3601  006DA0                     __end_of_ssdUpdate:
  3602                           	callstack 0
  3603                           
  3604 ;; *************** function _ssdDigit *****************
  3605 ;; Defined at:
  3606 ;;		line 38 in file "ssd.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  val             1    wreg     unsigned char 
  3609 ;;  pos             1    0[COMRAM] unsigned char 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  val             1    1[COMRAM] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, status,2, status,0
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3621 ;;      Params:         1       0       0       0       0       0       0
  3622 ;;      Locals:         1       0       0       0       0       0       0
  3623 ;;      Temps:          0       0       0       0       0       0       0
  3624 ;;      Totals:         2       0       0       0       0       0       0
  3625 ;;Total ram usage:        2 bytes
  3626 ;; Hardware stack levels used: 1
  3627 ;; This function calls:
  3628 ;;		Nothing
  3629 ;; This function is called by:
  3630 ;;		_teclado1
  3631 ;;		_teclado2
  3632 ;;		_acesso
  3633 ;;		_defineSenha
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text13
  3638  0065E4                     __ptext13:
  3639                           	callstack 0
  3640  0065E4                     _ssdDigit:
  3641                           	callstack 29
  3642                           
  3643                           ;incstack = 0
  3644                           ;ssdDigit@val stored from wreg
  3645  0065E4  6E02               	movwf	ssdDigit@val^0,c
  3646  0065E6                     
  3647                           ;ssd.c: 39:     if (pos == 0) {
  3648  0065E6  5001               	movf	ssdDigit@pos^0,w,c
  3649  0065E8  A4D8               	btfss	status,2,c
  3650  0065EA  EFF9  F032         	goto	u1981
  3651  0065EE  EFFB  F032         	goto	u1980
  3652  0065F2                     u1981:
  3653  0065F2  EFFD  F032         	goto	l2124
  3654  0065F6                     u1980:
  3655  0065F6                     
  3656                           ;ssd.c: 40:         v0 = val;
  3657  0065F6  C002  F033         	movff	ssdDigit@val,_v0
  3658  0065FA                     l2124:
  3659                           
  3660                           ;ssd.c: 42:     if (pos == 1) {
  3661  0065FA  0401               	decf	ssdDigit@pos^0,w,c
  3662  0065FC  A4D8               	btfss	status,2,c
  3663  0065FE  EF03  F033         	goto	u1991
  3664  006602  EF05  F033         	goto	u1990
  3665  006606                     u1991:
  3666  006606  EF07  F033         	goto	l2128
  3667  00660A                     u1990:
  3668  00660A                     
  3669                           ;ssd.c: 43:         v1 = val;
  3670  00660A  C002  F032         	movff	ssdDigit@val,_v1
  3671  00660E                     l2128:
  3672                           
  3673                           ;ssd.c: 45:     if (pos == 2) {
  3674  00660E  0E02               	movlw	2
  3675  006610  1801               	xorwf	ssdDigit@pos^0,w,c
  3676  006612  A4D8               	btfss	status,2,c
  3677  006614  EF0E  F033         	goto	u2001
  3678  006618  EF10  F033         	goto	u2000
  3679  00661C                     u2001:
  3680  00661C  EF12  F033         	goto	l2132
  3681  006620                     u2000:
  3682  006620                     
  3683                           ;ssd.c: 46:         v2 = val;
  3684  006620  C002  F031         	movff	ssdDigit@val,_v2
  3685  006624                     l2132:
  3686                           
  3687                           ;ssd.c: 48:     if (pos == 3) {
  3688  006624  0E03               	movlw	3
  3689  006626  1801               	xorwf	ssdDigit@pos^0,w,c
  3690  006628  A4D8               	btfss	status,2,c
  3691  00662A  EF19  F033         	goto	u2011
  3692  00662E  EF1B  F033         	goto	u2010
  3693  006632                     u2011:
  3694  006632  EF1D  F033         	goto	l333
  3695  006636                     u2010:
  3696  006636                     
  3697                           ;ssd.c: 49:         v3 = val;
  3698  006636  C002  F030         	movff	ssdDigit@val,_v3
  3699  00663A                     l333:
  3700  00663A  0012               	return		;funcret
  3701  00663C                     __end_of_ssdDigit:
  3702                           	callstack 0
  3703                           
  3704 ;; *************** function _kpRead *****************
  3705 ;; Defined at:
  3706 ;;		line 35 in file "keypad.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;		None
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;		None
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  2    0[COMRAM] unsigned int 
  3713 ;; Registers used:
  3714 ;;		None
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3720 ;;      Params:         2       0       0       0       0       0       0
  3721 ;;      Locals:         0       0       0       0       0       0       0
  3722 ;;      Temps:          0       0       0       0       0       0       0
  3723 ;;      Totals:         2       0       0       0       0       0       0
  3724 ;;Total ram usage:        2 bytes
  3725 ;; Hardware stack levels used: 1
  3726 ;; This function calls:
  3727 ;;		Nothing
  3728 ;; This function is called by:
  3729 ;;		_teclado1
  3730 ;;		_teclado2
  3731 ;;		_acesso
  3732 ;;		_defineSenha
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           	psect	text14
  3737  006476                     __ptext14:
  3738                           	callstack 0
  3739  006476                     _kpRead:
  3740                           	callstack 29
  3741  006476                     
  3742                           ;keypad.c: 36:     return valor;
  3743  006476  C02A  F001         	movff	_valor,?_kpRead
  3744  00647A  C02B  F002         	movff	_valor+1,?_kpRead+1
  3745  00647E  0012               	return		;funcret
  3746  006480                     __end_of_kpRead:
  3747                           	callstack 0
  3748                           
  3749 ;; *************** function _kpDebounce *****************
  3750 ;; Defined at:
  3751 ;;		line 39 in file "keypad.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  k               2    6[COMRAM] int 
  3756 ;;  i               1    9[COMRAM] unsigned char 
  3757 ;;  j               1    8[COMRAM] unsigned char 
  3758 ;;  old_D           1    5[COMRAM] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg, status,2, status,0, prodl, prodh
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3768 ;;      Params:         0       0       0       0       0       0       0
  3769 ;;      Locals:         5       0       0       0       0       0       0
  3770 ;;      Temps:          5       0       0       0       0       0       0
  3771 ;;      Totals:        10       0       0       0       0       0       0
  3772 ;;Total ram usage:       10 bytes
  3773 ;; Hardware stack levels used: 1
  3774 ;; This function calls:
  3775 ;;		Nothing
  3776 ;; This function is called by:
  3777 ;;		_teclado1
  3778 ;;		_teclado2
  3779 ;;		_acesso
  3780 ;;		_defineSenha
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text15
  3785  006DA0                     __ptext15:
  3786                           	callstack 0
  3787  006DA0                     _kpDebounce:
  3788                           	callstack 29
  3789  006DA0                     
  3790                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTA;
  3791  006DA0  CF80 F006          	movff	3968,kpDebounce@old_D	;volatile
  3792  006DA4                     
  3793                           ;keypad.c: 48:     PORTA = 0x00;
  3794  006DA4  0E00               	movlw	0
  3795  006DA6  6E80               	movwf	128,c	;volatile
  3796  006DA8                     
  3797                           ;keypad.c: 53:     TRISD |= 0x0f;
  3798  006DA8  0E0F               	movlw	15
  3799  006DAA  1295               	iorwf	149,f,c	;volatile
  3800  006DAC                     
  3801                           ;keypad.c: 55:     for (i = 0; i < 3; i++) {
  3802  006DAC  0E00               	movlw	0
  3803  006DAE  6E0A               	movwf	kpDebounce@i^0,c
  3804  006DB0                     l1128:
  3805                           
  3806                           ;keypad.c: 57:         TRISB &= 0xF8;
  3807  006DB0  0EF8               	movlw	248
  3808  006DB2  1693               	andwf	147,f,c	;volatile
  3809                           
  3810                           ;keypad.c: 59:         ((TRISB) |= (1<<(i)));
  3811  006DB4  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  3812  006DB8  0E01               	movlw	1
  3813  006DBA  6E02               	movwf	(??_kpDebounce+1)^0,c
  3814  006DBC  2A01               	incf	??_kpDebounce^0,f,c
  3815  006DBE  EFE3  F036         	goto	u254
  3816  006DC2                     u255:
  3817  006DC2  90D8               	bcf	status,0,c
  3818  006DC4  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3819  006DC6                     u254:
  3820  006DC6  2E01               	decfsz	??_kpDebounce^0,f,c
  3821  006DC8  EFE1  F036         	goto	u255
  3822  006DCC  5002               	movf	(??_kpDebounce+1)^0,w,c
  3823  006DCE  1293               	iorwf	147,f,c	;volatile
  3824                           
  3825                           ;keypad.c: 61:         PORTB |= 0x07;
  3826  006DD0  0E07               	movlw	7
  3827  006DD2  1281               	iorwf	129,f,c	;volatile
  3828                           
  3829                           ;keypad.c: 62:         ((PORTB) &= ~(1<<(i)));
  3830  006DD4  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  3831  006DD8  0E01               	movlw	1
  3832  006DDA  6E02               	movwf	(??_kpDebounce+1)^0,c
  3833  006DDC  2A01               	incf	??_kpDebounce^0,f,c
  3834  006DDE  EFF3  F036         	goto	u264
  3835  006DE2                     u265:
  3836  006DE2  90D8               	bcf	status,0,c
  3837  006DE4  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3838  006DE6                     u264:
  3839  006DE6  2E01               	decfsz	??_kpDebounce^0,f,c
  3840  006DE8  EFF1  F036         	goto	u265
  3841  006DEC  5002               	movf	(??_kpDebounce+1)^0,w,c
  3842  006DEE  0AFF               	xorlw	255
  3843  006DF0  1681               	andwf	129,f,c	;volatile
  3844  006DF2                     
  3845                           ;keypad.c: 65:         for (int k = 0; k < 10; k++);
  3846  006DF2  0E00               	movlw	0
  3847  006DF4  6E08               	movwf	(kpDebounce@k+1)^0,c
  3848  006DF6  0E00               	movlw	0
  3849  006DF8  6E07               	movwf	kpDebounce@k^0,c
  3850  006DFA                     l1136:
  3851  006DFA  4A07               	infsnz	kpDebounce@k^0,f,c
  3852  006DFC  2A08               	incf	(kpDebounce@k+1)^0,f,c
  3853  006DFE  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  3854  006E00  EF0B  F037         	goto	u271
  3855  006E04  5008               	movf	(kpDebounce@k+1)^0,w,c
  3856  006E06  E109               	bnz	u270
  3857  006E08  0E0A               	movlw	10
  3858  006E0A  5C07               	subwf	kpDebounce@k^0,w,c
  3859  006E0C  A0D8               	btfss	status,0,c
  3860  006E0E  EF0B  F037         	goto	u271
  3861  006E12  EF0D  F037         	goto	u270
  3862  006E16                     u271:
  3863  006E16  EFFD  F036         	goto	l1136
  3864  006E1A                     u270:
  3865  006E1A                     
  3866                           ;keypad.c: 68:         for (j = 0; j < 4; j++) {
  3867  006E1A  0E00               	movlw	0
  3868  006E1C  6E09               	movwf	kpDebounce@j^0,c
  3869  006E1E                     l1146:
  3870                           
  3871                           ;keypad.c: 69:             if (!((PORTD) & (1<<(j)))) {
  3872  006E1E  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  3873  006E22  0E01               	movlw	1
  3874  006E24  6E02               	movwf	(??_kpDebounce+1)^0,c
  3875  006E26  2A01               	incf	??_kpDebounce^0,f,c
  3876  006E28  EF18  F037         	goto	u284
  3877  006E2C                     u285:
  3878  006E2C  90D8               	bcf	status,0,c
  3879  006E2E  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3880  006E30                     u284:
  3881  006E30  2E01               	decfsz	??_kpDebounce^0,f,c
  3882  006E32  EF16  F037         	goto	u285
  3883  006E36  5002               	movf	(??_kpDebounce+1)^0,w,c
  3884  006E38  1483               	andwf	131,w,c	;volatile
  3885  006E3A  0900               	iorlw	0
  3886  006E3C  A4D8               	btfss	status,2,c
  3887  006E3E  EF23  F037         	goto	u291
  3888  006E42  EF25  F037         	goto	u290
  3889  006E46                     u291:
  3890  006E46  EF3D  F037         	goto	l1150
  3891  006E4A                     u290:
  3892  006E4A                     
  3893                           ;keypad.c: 70:                 ((valorNovo) |= (1<<((i * 4) + j)));
  3894  006E4A  500A               	movf	kpDebounce@i^0,w,c
  3895  006E4C  0D04               	mullw	4
  3896  006E4E  50F3               	movf	243,w,c
  3897  006E50  2409               	addwf	kpDebounce@j^0,w,c
  3898  006E52  6E01               	movwf	??_kpDebounce^0,c
  3899  006E54  0E01               	movlw	1
  3900  006E56  6E02               	movwf	(??_kpDebounce+1)^0,c
  3901  006E58  0E00               	movlw	0
  3902  006E5A  6E03               	movwf	(??_kpDebounce+2)^0,c
  3903  006E5C  2A01               	incf	??_kpDebounce^0,f,c
  3904  006E5E  EF34  F037         	goto	u304
  3905  006E62                     u305:
  3906  006E62  90D8               	bcf	status,0,c
  3907  006E64  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3908  006E66  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  3909  006E68                     u304:
  3910  006E68  2E01               	decfsz	??_kpDebounce^0,f,c
  3911  006E6A  EF31  F037         	goto	u305
  3912  006E6E  5002               	movf	(??_kpDebounce+1)^0,w,c
  3913  006E70  1228               	iorwf	kpDebounce@valorNovo^0,f,c
  3914  006E72  5003               	movf	(??_kpDebounce+2)^0,w,c
  3915  006E74  1229               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  3916                           
  3917                           ;keypad.c: 71:             } else {
  3918  006E76  EF57  F037         	goto	l1152
  3919  006E7A                     l1150:
  3920                           
  3921                           ;keypad.c: 72:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  3922  006E7A  500A               	movf	kpDebounce@i^0,w,c
  3923  006E7C  0D04               	mullw	4
  3924  006E7E  50F3               	movf	243,w,c
  3925  006E80  2409               	addwf	kpDebounce@j^0,w,c
  3926  006E82  6E01               	movwf	??_kpDebounce^0,c
  3927  006E84  0E01               	movlw	1
  3928  006E86  6E02               	movwf	(??_kpDebounce+1)^0,c
  3929  006E88  0E00               	movlw	0
  3930  006E8A  6E03               	movwf	(??_kpDebounce+2)^0,c
  3931  006E8C  2A01               	incf	??_kpDebounce^0,f,c
  3932  006E8E  EF4C  F037         	goto	u314
  3933  006E92                     u315:
  3934  006E92  90D8               	bcf	status,0,c
  3935  006E94  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3936  006E96  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  3937  006E98                     u314:
  3938  006E98  2E01               	decfsz	??_kpDebounce^0,f,c
  3939  006E9A  EF49  F037         	goto	u315
  3940  006E9E  1C02               	comf	(??_kpDebounce+1)^0,w,c
  3941  006EA0  6E04               	movwf	(??_kpDebounce+3)^0,c
  3942  006EA2  1C03               	comf	(??_kpDebounce+2)^0,w,c
  3943  006EA4  6E05               	movwf	(??_kpDebounce+4)^0,c
  3944  006EA6  5004               	movf	(??_kpDebounce+3)^0,w,c
  3945  006EA8  1628               	andwf	kpDebounce@valorNovo^0,f,c
  3946  006EAA  5005               	movf	(??_kpDebounce+4)^0,w,c
  3947  006EAC  1629               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  3948  006EAE                     l1152:
  3949                           
  3950                           ;keypad.c: 74:         }
  3951  006EAE  2A09               	incf	kpDebounce@j^0,f,c
  3952  006EB0  0E03               	movlw	3
  3953  006EB2  6409               	cpfsgt	kpDebounce@j^0,c
  3954  006EB4  EF5E  F037         	goto	u321
  3955  006EB8  EF60  F037         	goto	u320
  3956  006EBC                     u321:
  3957  006EBC  EF0F  F037         	goto	l1146
  3958  006EC0                     u320:
  3959  006EC0                     
  3960                           ;keypad.c: 75:     }
  3961  006EC0  2A0A               	incf	kpDebounce@i^0,f,c
  3962  006EC2  0E02               	movlw	2
  3963  006EC4  640A               	cpfsgt	kpDebounce@i^0,c
  3964  006EC6  EF67  F037         	goto	u331
  3965  006ECA  EF69  F037         	goto	u330
  3966  006ECE                     u331:
  3967  006ECE  EFD8  F036         	goto	l1128
  3968  006ED2                     u330:
  3969  006ED2                     
  3970                           ;keypad.c: 76:     if (valorAntigo == valorNovo) {
  3971  006ED2  5028               	movf	kpDebounce@valorNovo^0,w,c
  3972  006ED4  1826               	xorwf	kpDebounce@valorAntigo^0,w,c
  3973  006ED6  E107               	bnz	u341
  3974  006ED8  5029               	movf	(kpDebounce@valorNovo+1)^0,w,c
  3975  006EDA  1827               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  3976  006EDC  A4D8               	btfss	status,2,c
  3977  006EDE  EF73  F037         	goto	u341
  3978  006EE2  EF75  F037         	goto	u340
  3979  006EE6                     u341:
  3980  006EE6  EF78  F037         	goto	l1164
  3981  006EEA                     u340:
  3982  006EEA                     
  3983                           ;keypad.c: 77:         tempo--;
  3984  006EEA  0635               	decf	kpDebounce@tempo^0,f,c
  3985                           
  3986                           ;keypad.c: 78:     } else {
  3987  006EEC  EF7E  F037         	goto	l245
  3988  006EF0                     l1164:
  3989                           
  3990                           ;keypad.c: 79:         tempo = 10;
  3991  006EF0  0E0A               	movlw	10
  3992  006EF2  6E35               	movwf	kpDebounce@tempo^0,c
  3993  006EF4                     
  3994                           ;keypad.c: 80:         valorAntigo = valorNovo;
  3995  006EF4  C028  F026         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  3996  006EF8  C029  F027         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  3997  006EFC                     l245:
  3998                           
  3999                           ;keypad.c: 82:     if (tempo == 0) {
  4000  006EFC  5035               	movf	kpDebounce@tempo^0,w,c
  4001  006EFE  A4D8               	btfss	status,2,c
  4002  006F00  EF84  F037         	goto	u351
  4003  006F04  EF86  F037         	goto	u350
  4004  006F08                     u351:
  4005  006F08  EF8A  F037         	goto	l246
  4006  006F0C                     u350:
  4007  006F0C                     
  4008                           ;keypad.c: 83:         valor = valorAntigo;
  4009  006F0C  C026  F02A         	movff	kpDebounce@valorAntigo,_valor
  4010  006F10  C027  F02B         	movff	kpDebounce@valorAntigo+1,_valor+1
  4011  006F14                     l246:
  4012                           
  4013                           ;keypad.c: 85:     PORTA = old_D;
  4014  006F14  C006  FF80         	movff	kpDebounce@old_D,3968	;volatile
  4015  006F18                     
  4016                           ;keypad.c: 86:     TRISD = 0x00;
  4017  006F18  0E00               	movlw	0
  4018  006F1A  6E95               	movwf	149,c	;volatile
  4019  006F1C  0012               	return		;funcret
  4020  006F1E                     __end_of_kpDebounce:
  4021                           	callstack 0
  4022                           
  4023 ;; *************** function _pwmSet *****************
  4024 ;; Defined at:
  4025 ;;		line 24 in file "pwm.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  porcento        1    wreg     unsigned char 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  porcento        1    9[COMRAM] unsigned char 
  4030 ;;  val             2   10[COMRAM] unsigned int 
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4040 ;;      Params:         0       0       0       0       0       0       0
  4041 ;;      Locals:         3       0       0       0       0       0       0
  4042 ;;      Temps:          2       0       0       0       0       0       0
  4043 ;;      Totals:         5       0       0       0       0       0       0
  4044 ;;Total ram usage:        5 bytes
  4045 ;; Hardware stack levels used: 1
  4046 ;; Hardware stack levels required when called: 1
  4047 ;; This function calls:
  4048 ;;		___lwdiv
  4049 ;;		___wmul
  4050 ;; This function is called by:
  4051 ;;		_acesso
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text16
  4056  00663C                     __ptext16:
  4057                           	callstack 0
  4058  00663C                     _pwmSet:
  4059                           	callstack 28
  4060                           
  4061                           ;incstack = 0
  4062                           ;pwmSet@porcento stored from wreg
  4063  00663C  6E0A               	movwf	pwmSet@porcento^0,c
  4064  00663E                     
  4065                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  4066  00663E  0E01               	movlw	1
  4067  006640  24CB               	addwf	203,w,c	;volatile
  4068  006642  6E01               	movwf	___wmul@multiplier^0,c
  4069  006644  6A02               	clrf	(___wmul@multiplier+1)^0,c
  4070  006646  0E00               	movlw	0
  4071  006648  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  4072  00664A  C00A  F003         	movff	pwmSet@porcento,___wmul@multiplicand
  4073  00664E  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  4074  006650  EC77  F032         	call	___wmul	;wreg free
  4075  006654  C001  F00B         	movff	?___wmul,pwmSet@val
  4076  006658  C002  F00C         	movff	?___wmul+1,pwmSet@val+1
  4077  00665C                     
  4078                           ;pwm.c: 33:     val = val / 25;
  4079  00665C  C00B  F001         	movff	pwmSet@val,___lwdiv@dividend
  4080  006660  C00C  F002         	movff	pwmSet@val+1,___lwdiv@dividend+1
  4081  006664  0E00               	movlw	0
  4082  006666  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  4083  006668  0E19               	movlw	25
  4084  00666A  6E03               	movwf	___lwdiv@divisor^0,c
  4085  00666C  EC8E  F033         	call	___lwdiv	;wreg free
  4086  006670  C001  F00B         	movff	?___lwdiv,pwmSet@val
  4087  006674  C002  F00C         	movff	?___lwdiv+1,pwmSet@val+1
  4088  006678                     
  4089                           ;pwm.c: 35:  val &= 0x03ff;
  4090  006678  0EFF               	movlw	255
  4091  00667A  160B               	andwf	pwmSet@val^0,f,c
  4092  00667C  0E03               	movlw	3
  4093  00667E  160C               	andwf	(pwmSet@val+1)^0,f,c
  4094  006680                     
  4095                           ;pwm.c: 37:  CCPR1L = val >> 2;
  4096  006680  C00B  F008         	movff	pwmSet@val,??_pwmSet
  4097  006684  C00C  F009         	movff	pwmSet@val+1,??_pwmSet+1
  4098  006688  90D8               	bcf	status,0,c
  4099  00668A  3209               	rrcf	(??_pwmSet+1)^0,f,c
  4100  00668C  3208               	rrcf	??_pwmSet^0,f,c
  4101  00668E  90D8               	bcf	status,0,c
  4102  006690  3209               	rrcf	(??_pwmSet+1)^0,f,c
  4103  006692  3208               	rrcf	??_pwmSet^0,f,c
  4104  006694  5008               	movf	??_pwmSet^0,w,c
  4105  006696  6EBE               	movwf	190,c	;volatile
  4106  006698                     
  4107                           ;pwm.c: 39:  CCP1CON |= (val & 0x0003) << 4;
  4108  006698  C00B  F008         	movff	pwmSet@val,??_pwmSet	;volatile
  4109  00669C  0E03               	movlw	3
  4110  00669E  1608               	andwf	??_pwmSet^0,f,c
  4111  0066A0  3808               	swapf	??_pwmSet^0,w,c
  4112  0066A2  0BF0               	andlw	240
  4113  0066A4  12BD               	iorwf	189,f,c	;volatile
  4114  0066A6  0012               	return		;funcret
  4115  0066A8                     __end_of_pwmSet:
  4116                           	callstack 0
  4117                           
  4118 ;; *************** function ___wmul *****************
  4119 ;; Defined at:
  4120 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  multiplier      2    0[COMRAM] unsigned int 
  4123 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  product         2    4[COMRAM] unsigned int 
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  2    0[COMRAM] unsigned int 
  4128 ;; Registers used:
  4129 ;;		wreg, status,2, status,0, prodl, prodh
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4135 ;;      Params:         4       0       0       0       0       0       0
  4136 ;;      Locals:         2       0       0       0       0       0       0
  4137 ;;      Temps:          0       0       0       0       0       0       0
  4138 ;;      Totals:         6       0       0       0       0       0       0
  4139 ;;Total ram usage:        6 bytes
  4140 ;; Hardware stack levels used: 1
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_pwmSet
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           	psect	text17
  4149  0064EE                     __ptext17:
  4150                           	callstack 0
  4151  0064EE                     ___wmul:
  4152                           	callstack 28
  4153  0064EE  5001               	movf	___wmul@multiplier^0,w,c
  4154  0064F0  0203               	mulwf	___wmul@multiplicand^0,c
  4155  0064F2  CFF3 F005          	movff	prodl,___wmul@product
  4156  0064F6  CFF4 F006          	movff	prodh,___wmul@product+1
  4157  0064FA  5001               	movf	___wmul@multiplier^0,w,c
  4158  0064FC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4159  0064FE  50F3               	movf	243,w,c
  4160  006500  2606               	addwf	(___wmul@product+1)^0,f,c
  4161  006502  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4162  006504  0203               	mulwf	___wmul@multiplicand^0,c
  4163  006506  50F3               	movf	243,w,c
  4164  006508  2606               	addwf	(___wmul@product+1)^0,f,c
  4165  00650A  C005  F001         	movff	___wmul@product,?___wmul
  4166  00650E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4167  006512  0012               	return		;funcret
  4168  006514                     __end_of___wmul:
  4169                           	callstack 0
  4170                           
  4171 ;; *************** function ___lwdiv *****************
  4172 ;; Defined at:
  4173 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  dividend        2    0[COMRAM] unsigned int 
  4176 ;;  divisor         2    2[COMRAM] unsigned int 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  quotient        2    4[COMRAM] unsigned int 
  4179 ;;  counter         1    6[COMRAM] unsigned char 
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  2    0[COMRAM] unsigned int 
  4182 ;; Registers used:
  4183 ;;		wreg, status,2, status,0
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4189 ;;      Params:         4       0       0       0       0       0       0
  4190 ;;      Locals:         3       0       0       0       0       0       0
  4191 ;;      Temps:          0       0       0       0       0       0       0
  4192 ;;      Totals:         7       0       0       0       0       0       0
  4193 ;;Total ram usage:        7 bytes
  4194 ;; Hardware stack levels used: 1
  4195 ;; This function calls:
  4196 ;;		Nothing
  4197 ;; This function is called by:
  4198 ;;		_pwmSet
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           	psect	text18
  4203  00671C                     __ptext18:
  4204                           	callstack 0
  4205  00671C                     ___lwdiv:
  4206                           	callstack 28
  4207  00671C  0E00               	movlw	0
  4208  00671E  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  4209  006720  0E00               	movlw	0
  4210  006722  6E05               	movwf	___lwdiv@quotient^0,c
  4211  006724  5003               	movf	___lwdiv@divisor^0,w,c
  4212  006726  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4213  006728  B4D8               	btfsc	status,2,c
  4214  00672A  EF99  F033         	goto	u2201
  4215  00672E  EF9B  F033         	goto	u2200
  4216  006732                     u2201:
  4217  006732  EFC3  F033         	goto	l852
  4218  006736                     u2200:
  4219  006736  0E01               	movlw	1
  4220  006738  6E07               	movwf	___lwdiv@counter^0,c
  4221  00673A  EFA3  F033         	goto	l2290
  4222  00673E                     l2288:
  4223  00673E  90D8               	bcf	status,0,c
  4224  006740  3603               	rlcf	___lwdiv@divisor^0,f,c
  4225  006742  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4226  006744  2A07               	incf	___lwdiv@counter^0,f,c
  4227  006746                     l2290:
  4228  006746  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  4229  006748  EFA8  F033         	goto	u2211
  4230  00674C  EFAA  F033         	goto	u2210
  4231  006750                     u2211:
  4232  006750  EF9F  F033         	goto	l2288
  4233  006754                     u2210:
  4234  006754                     l2292:
  4235  006754  90D8               	bcf	status,0,c
  4236  006756  3605               	rlcf	___lwdiv@quotient^0,f,c
  4237  006758  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4238  00675A  5003               	movf	___lwdiv@divisor^0,w,c
  4239  00675C  5C01               	subwf	___lwdiv@dividend^0,w,c
  4240  00675E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4241  006760  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4242  006762  A0D8               	btfss	status,0,c
  4243  006764  EFB6  F033         	goto	u2221
  4244  006768  EFB8  F033         	goto	u2220
  4245  00676C                     u2221:
  4246  00676C  EFBD  F033         	goto	l2300
  4247  006770                     u2220:
  4248  006770  5003               	movf	___lwdiv@divisor^0,w,c
  4249  006772  5E01               	subwf	___lwdiv@dividend^0,f,c
  4250  006774  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4251  006776  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4252  006778  8005               	bsf	___lwdiv@quotient^0,0,c
  4253  00677A                     l2300:
  4254  00677A  90D8               	bcf	status,0,c
  4255  00677C  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4256  00677E  3203               	rrcf	___lwdiv@divisor^0,f,c
  4257  006780  2E07               	decfsz	___lwdiv@counter^0,f,c
  4258  006782  EFAA  F033         	goto	l2292
  4259  006786                     l852:
  4260  006786  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4261  00678A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4262  00678E  0012               	return		;funcret
  4263  006790                     __end_of___lwdiv:
  4264                           	callstack 0
  4265                           
  4266 ;; *************** function _printf *****************
  4267 ;; Defined at:
  4268 ;;		line 4 in file "stdio.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  texto           2    8[COMRAM] PTR unsigned char 
  4271 ;;		 -> STR_12(32), STR_11(9), STR_10(12), STR_9(27), 
  4272 ;;		 -> STR_8(27), STR_7(19), STR_6(29), STR_5(36), 
  4273 ;;		 -> STR_4(25), STR_3(22), STR_2(29), STR_1(30), 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;  i               2   12[COMRAM] int 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      void 
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4285 ;;      Params:         2       0       0       0       0       0       0
  4286 ;;      Locals:         2       0       0       0       0       0       0
  4287 ;;      Temps:          2       0       0       0       0       0       0
  4288 ;;      Totals:         6       0       0       0       0       0       0
  4289 ;;Total ram usage:        6 bytes
  4290 ;; Hardware stack levels used: 1
  4291 ;; Hardware stack levels required when called: 3
  4292 ;; This function calls:
  4293 ;;		_lcdCommand
  4294 ;;		_lcdData
  4295 ;; This function is called by:
  4296 ;;		_main
  4297 ;;		_acesso
  4298 ;;		_defineSenha
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text19
  4303  006886                     __ptext19:
  4304                           	callstack 0
  4305  006886                     _printf:
  4306                           	callstack 27
  4307  006886                     
  4308                           ;stdio.c: 5:     int i;;stdio.c: 7:     for(i=0; i<32; i++){
  4309  006886  0E00               	movlw	0
  4310  006888  6E0E               	movwf	(printf@i+1)^0,c
  4311  00688A  0E00               	movlw	0
  4312  00688C  6E0D               	movwf	printf@i^0,c
  4313  00688E                     l2312:
  4314                           
  4315                           ;stdio.c: 8:         if(texto[i] == '\0'){
  4316  00688E  500D               	movf	printf@i^0,w,c
  4317  006890  2409               	addwf	printf@texto^0,w,c
  4318  006892  6E0B               	movwf	??_printf^0,c
  4319  006894  500E               	movf	(printf@i+1)^0,w,c
  4320  006896  200A               	addwfc	(printf@texto+1)^0,w,c
  4321  006898  6E0C               	movwf	(??_printf+1)^0,c
  4322  00689A  C00B  FFF6         	movff	??_printf,tblptrl
  4323  00689E  C00C  FFF7         	movff	??_printf+1,tblptrh
  4324  0068A2                     	if	0	;tblptru may be non-zero
  4325  0068A2                     	endif
  4326  0068A2                     	if	0	;tblptru may be non-zero
  4327  0068A2                     	endif
  4328  0068A2  0008               	tblrd		*
  4329  0068A4  50F5               	movf	tablat,w,c
  4330  0068A6  0900               	iorlw	0
  4331  0068A8  A4D8               	btfss	status,2,c
  4332  0068AA  EF59  F034         	goto	u2231
  4333  0068AE  EF5B  F034         	goto	u2230
  4334  0068B2                     u2231:
  4335  0068B2  EF5D  F034         	goto	l2316
  4336  0068B6                     u2230:
  4337  0068B6  EF94  F034         	goto	l356
  4338  0068BA                     l2316:
  4339                           
  4340                           ;stdio.c: 11:         if(texto[i] == '\n'){
  4341  0068BA  500D               	movf	printf@i^0,w,c
  4342  0068BC  2409               	addwf	printf@texto^0,w,c
  4343  0068BE  6E0B               	movwf	??_printf^0,c
  4344  0068C0  500E               	movf	(printf@i+1)^0,w,c
  4345  0068C2  200A               	addwfc	(printf@texto+1)^0,w,c
  4346  0068C4  6E0C               	movwf	(??_printf+1)^0,c
  4347  0068C6  C00B  FFF6         	movff	??_printf,tblptrl
  4348  0068CA  C00C  FFF7         	movff	??_printf+1,tblptrh
  4349  0068CE                     	if	0	;tblptru may be non-zero
  4350  0068CE                     	endif
  4351  0068CE                     	if	0	;tblptru may be non-zero
  4352  0068CE                     	endif
  4353  0068CE  0008               	tblrd		*
  4354  0068D0  50F5               	movf	tablat,w,c
  4355  0068D2  0A0A               	xorlw	10
  4356  0068D4  A4D8               	btfss	status,2,c
  4357  0068D6  EF6F  F034         	goto	u2241
  4358  0068DA  EF71  F034         	goto	u2240
  4359  0068DE                     u2241:
  4360  0068DE  EF76  F034         	goto	l2320
  4361  0068E2                     u2240:
  4362  0068E2                     
  4363                           ;stdio.c: 12:             lcdCommand(0xC0);
  4364  0068E2  0EC0               	movlw	192
  4365  0068E4  EC04  F034         	call	_lcdCommand
  4366                           
  4367                           ;stdio.c: 13:             continue;
  4368  0068E8  EF84  F034         	goto	l2322
  4369  0068EC                     l2320:
  4370                           
  4371                           ;stdio.c: 16:         lcdData(texto[i]);
  4372  0068EC  500D               	movf	printf@i^0,w,c
  4373  0068EE  2409               	addwf	printf@texto^0,w,c
  4374  0068F0  6E0B               	movwf	??_printf^0,c
  4375  0068F2  500E               	movf	(printf@i+1)^0,w,c
  4376  0068F4  200A               	addwfc	(printf@texto+1)^0,w,c
  4377  0068F6  6E0C               	movwf	(??_printf+1)^0,c
  4378  0068F8  C00B  FFF6         	movff	??_printf,tblptrl
  4379  0068FC  C00C  FFF7         	movff	??_printf+1,tblptrh
  4380  006900                     	if	0	;tblptru may be non-zero
  4381  006900                     	endif
  4382  006900                     	if	0	;tblptru may be non-zero
  4383  006900                     	endif
  4384  006900  0008               	tblrd		*
  4385  006902  50F5               	movf	tablat,w,c
  4386  006904  EC9D  F032         	call	_lcdData
  4387  006908                     l2322:
  4388  006908  4A0D               	infsnz	printf@i^0,f,c
  4389  00690A  2A0E               	incf	(printf@i+1)^0,f,c
  4390  00690C  BE0E               	btfsc	(printf@i+1)^0,7,c
  4391  00690E  EF92  F034         	goto	u2251
  4392  006912  500E               	movf	(printf@i+1)^0,w,c
  4393  006914  E109               	bnz	u2250
  4394  006916  0E20               	movlw	32
  4395  006918  5C0D               	subwf	printf@i^0,w,c
  4396  00691A  A0D8               	btfss	status,0,c
  4397  00691C  EF92  F034         	goto	u2251
  4398  006920  EF94  F034         	goto	u2250
  4399  006924                     u2251:
  4400  006924  EF47  F034         	goto	l2312
  4401  006928                     u2250:
  4402  006928                     l356:
  4403  006928  0012               	return		;funcret
  4404  00692A                     __end_of_printf:
  4405                           	callstack 0
  4406                           
  4407 ;; *************** function _lcdCommand *****************
  4408 ;; Defined at:
  4409 ;;		line 48 in file "lcd.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  cmd             1    wreg     unsigned char 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  cmd             1    7[COMRAM] unsigned char 
  4414 ;;  old_D           1    6[COMRAM] unsigned char 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      void 
  4417 ;; Registers used:
  4418 ;;		wreg, status,2, status,0, cstack
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4424 ;;      Params:         0       0       0       0       0       0       0
  4425 ;;      Locals:         2       0       0       0       0       0       0
  4426 ;;      Temps:          0       0       0       0       0       0       0
  4427 ;;      Totals:         2       0       0       0       0       0       0
  4428 ;;Total ram usage:        2 bytes
  4429 ;; Hardware stack levels used: 1
  4430 ;; Hardware stack levels required when called: 2
  4431 ;; This function calls:
  4432 ;;		_Delay2ms
  4433 ;;		_Delay40us
  4434 ;;		_digitalWrite
  4435 ;; This function is called by:
  4436 ;;		_main
  4437 ;;		_acesso
  4438 ;;		_lcdInit
  4439 ;;		_printf
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           	psect	text20
  4444  006808                     __ptext20:
  4445                           	callstack 0
  4446  006808                     _lcdCommand:
  4447                           	callstack 27
  4448                           
  4449                           ;incstack = 0
  4450                           ;lcdCommand@cmd stored from wreg
  4451  006808  6E08               	movwf	lcdCommand@cmd^0,c
  4452  00680A                     
  4453                           ;lcd.c: 48: void lcdCommand(unsigned char cmd);lcd.c: 49: {;lcd.c: 50:     unsigned char
      +                           old_D;;lcd.c: 51:     old_D = PORTD;
  4454  00680A  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  4455  00680E                     
  4456                           ;lcd.c: 54:     TRISD = 0x00;
  4457  00680E  0E00               	movlw	0
  4458  006810  6E95               	movwf	149,c	;volatile
  4459  006812                     
  4460                           ;lcd.c: 56:  digitalWrite(PIN_E2, 0);
  4461  006812  0E00               	movlw	0
  4462  006814  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4463  006816  0E22               	movlw	34
  4464  006818  6E01               	movwf	digitalWrite@pin^0,c
  4465  00681A  0E00               	movlw	0
  4466  00681C  6E04               	movwf	(digitalWrite@value+1)^0,c
  4467  00681E  0E00               	movlw	0
  4468  006820  6E03               	movwf	digitalWrite@value^0,c
  4469  006822  EC8F  F037         	call	_digitalWrite	;wreg free
  4470  006826                     
  4471                           ;lcd.c: 57:  PORTD = cmd;
  4472  006826  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  4473  00682A                     
  4474                           ;lcd.c: 59:     digitalWrite(PIN_E1, 1);
  4475  00682A  0E00               	movlw	0
  4476  00682C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4477  00682E  0E21               	movlw	33
  4478  006830  6E01               	movwf	digitalWrite@pin^0,c
  4479  006832  0E00               	movlw	0
  4480  006834  6E04               	movwf	(digitalWrite@value+1)^0,c
  4481  006836  0E01               	movlw	1
  4482  006838  6E03               	movwf	digitalWrite@value^0,c
  4483  00683A  EC8F  F037         	call	_digitalWrite	;wreg free
  4484  00683E                     
  4485                           ;lcd.c: 60:  digitalWrite(PIN_E1, 0);
  4486  00683E  0E00               	movlw	0
  4487  006840  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4488  006842  0E21               	movlw	33
  4489  006844  6E01               	movwf	digitalWrite@pin^0,c
  4490  006846  0E00               	movlw	0
  4491  006848  6E04               	movwf	(digitalWrite@value+1)^0,c
  4492  00684A  0E00               	movlw	0
  4493  00684C  6E03               	movwf	digitalWrite@value^0,c
  4494  00684E  EC8F  F037         	call	_digitalWrite	;wreg free
  4495  006852                     
  4496                           ;lcd.c: 63:     PORTD= old_D;
  4497  006852  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  4498  006856                     
  4499                           ;lcd.c: 65:     if((cmd == 0x02)||(cmd == 0x01)){
  4500  006856  0E02               	movlw	2
  4501  006858  1808               	xorwf	lcdCommand@cmd^0,w,c
  4502  00685A  B4D8               	btfsc	status,2,c
  4503  00685C  EF32  F034         	goto	u1961
  4504  006860  EF34  F034         	goto	u1960
  4505  006864                     u1961:
  4506  006864  EF3C  F034         	goto	l2070
  4507  006868                     u1960:
  4508  006868  0408               	decf	lcdCommand@cmd^0,w,c
  4509  00686A  A4D8               	btfss	status,2,c
  4510  00686C  EF3A  F034         	goto	u1971
  4511  006870  EF3C  F034         	goto	u1970
  4512  006874                     u1971:
  4513  006874  EF40  F034         	goto	l2072
  4514  006878                     u1970:
  4515  006878                     l2070:
  4516                           
  4517                           ;lcd.c: 66:        Delay2ms();
  4518  006878  EC69  F032         	call	_Delay2ms	;wreg free
  4519                           
  4520                           ;lcd.c: 67:     }else{
  4521  00687C  EF42  F034         	goto	l275
  4522  006880                     l2072:
  4523                           
  4524                           ;lcd.c: 68:     Delay40us();
  4525  006880  EC50  F032         	call	_Delay40us	;wreg free
  4526  006884                     l275:
  4527  006884  0012               	return		;funcret
  4528  006886                     __end_of_lcdCommand:
  4529                           	callstack 0
  4530                           
  4531 ;; *************** function _Delay2ms *****************
  4532 ;; Defined at:
  4533 ;;		line 37 in file "lcd.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;		None
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  i               1    1[COMRAM] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      void 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2, status,0, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4547 ;;      Params:         0       0       0       0       0       0       0
  4548 ;;      Locals:         1       0       0       0       0       0       0
  4549 ;;      Temps:          0       0       0       0       0       0       0
  4550 ;;      Totals:         1       0       0       0       0       0       0
  4551 ;;Total ram usage:        1 bytes
  4552 ;; Hardware stack levels used: 1
  4553 ;; Hardware stack levels required when called: 1
  4554 ;; This function calls:
  4555 ;;		_Delay40us
  4556 ;; This function is called by:
  4557 ;;		_lcdCommand
  4558 ;;		_lcdInit
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           	psect	text21
  4563  0064D2                     __ptext21:
  4564                           	callstack 0
  4565  0064D2                     _Delay2ms:
  4566                           	callstack 27
  4567  0064D2                     
  4568                           ;lcd.c: 39:  unsigned char i;;lcd.c: 40:  for(i=0; i < 50; i++)
  4569  0064D2  0E00               	movlw	0
  4570  0064D4  6E02               	movwf	Delay2ms@i^0,c
  4571  0064D6                     l1090:
  4572                           
  4573                           ;lcd.c: 41:  {;lcd.c: 42:   Delay40us();
  4574  0064D6  EC50  F032         	call	_Delay40us	;wreg free
  4575  0064DA                     
  4576                           ;lcd.c: 43:  }
  4577  0064DA  2A02               	incf	Delay2ms@i^0,f,c
  4578  0064DC  0E31               	movlw	49
  4579  0064DE  6402               	cpfsgt	Delay2ms@i^0,c
  4580  0064E0  EF74  F032         	goto	u221
  4581  0064E4  EF76  F032         	goto	u220
  4582  0064E8                     u221:
  4583  0064E8  EF6B  F032         	goto	l1090
  4584  0064EC                     u220:
  4585  0064EC  0012               	return		;funcret
  4586  0064EE                     __end_of_Delay2ms:
  4587                           	callstack 0
  4588                           
  4589 ;; *************** function _lcdNumber *****************
  4590 ;; Defined at:
  4591 ;;		line 117 in file "lcd.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;  value           2   14[COMRAM] int 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  i               2   16[COMRAM] int 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4605 ;;      Params:         2       0       0       0       0       0       0
  4606 ;;      Locals:         2       0       0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0
  4608 ;;      Totals:         4       0       0       0       0       0       0
  4609 ;;Total ram usage:        4 bytes
  4610 ;; Hardware stack levels used: 1
  4611 ;; Hardware stack levels required when called: 2
  4612 ;; This function calls:
  4613 ;;		___awdiv
  4614 ;;		___awmod
  4615 ;;		_lcdData
  4616 ;; This function is called by:
  4617 ;;		_acesso
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text22
  4622  0066A8                     __ptext22:
  4623                           	callstack 0
  4624  0066A8                     _lcdNumber:
  4625                           	callstack 27
  4626  0066A8                     
  4627                           ;lcd.c: 118:  int i = 1000;
  4628  0066A8  0E03               	movlw	3
  4629  0066AA  6E12               	movwf	(lcdNumber@i+1)^0,c
  4630  0066AC  0EE8               	movlw	232
  4631  0066AE  6E11               	movwf	lcdNumber@i^0,c
  4632                           
  4633                           ;lcd.c: 121:  while (i > 0) {
  4634  0066B0  EF80  F033         	goto	l2504
  4635  0066B4                     l2502:
  4636                           
  4637                           ;lcd.c: 122:   lcdData((value / i) % 10 + 48);
  4638  0066B4  C011  F003         	movff	lcdNumber@i,___awdiv@divisor
  4639  0066B8  C012  F004         	movff	lcdNumber@i+1,___awdiv@divisor+1
  4640  0066BC  C00F  F001         	movff	lcdNumber@value,___awdiv@dividend
  4641  0066C0  C010  F002         	movff	lcdNumber@value+1,___awdiv@dividend+1
  4642  0066C4  EC40  F035         	call	___awdiv	;wreg free
  4643  0066C8  C001  F009         	movff	?___awdiv,___awmod@dividend
  4644  0066CC  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  4645  0066D0  0E00               	movlw	0
  4646  0066D2  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4647  0066D4  0E0A               	movlw	10
  4648  0066D6  6E0B               	movwf	___awmod@divisor^0,c
  4649  0066D8  ECE8  F034         	call	___awmod	;wreg free
  4650  0066DC  5009               	movf	?___awmod^0,w,c
  4651  0066DE  0F30               	addlw	48
  4652  0066E0  EC9D  F032         	call	_lcdData
  4653                           
  4654                           ;lcd.c: 123:   i /= 10;
  4655  0066E4  C011  F001         	movff	lcdNumber@i,___awdiv@dividend
  4656  0066E8  C012  F002         	movff	lcdNumber@i+1,___awdiv@dividend+1
  4657  0066EC  0E00               	movlw	0
  4658  0066EE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4659  0066F0  0E0A               	movlw	10
  4660  0066F2  6E03               	movwf	___awdiv@divisor^0,c
  4661  0066F4  EC40  F035         	call	___awdiv	;wreg free
  4662  0066F8  C001  F011         	movff	?___awdiv,lcdNumber@i
  4663  0066FC  C002  F012         	movff	?___awdiv+1,lcdNumber@i+1
  4664  006700                     l2504:
  4665                           
  4666                           ;lcd.c: 121:  while (i > 0) {
  4667  006700  BE12               	btfsc	(lcdNumber@i+1)^0,7,c
  4668  006702  EF8D  F033         	goto	u2720
  4669  006706  5012               	movf	(lcdNumber@i+1)^0,w,c
  4670  006708  E106               	bnz	u2721
  4671  00670A  0411               	decf	lcdNumber@i^0,w,c
  4672  00670C  B0D8               	btfsc	status,0,c
  4673  00670E  EF8B  F033         	goto	u2721
  4674  006712  EF8D  F033         	goto	u2720
  4675  006716                     u2721:
  4676  006716  EF5A  F033         	goto	l2502
  4677  00671A                     u2720:
  4678  00671A  0012               	return		;funcret
  4679  00671C                     __end_of_lcdNumber:
  4680                           	callstack 0
  4681                           
  4682 ;; *************** function _lcdData *****************
  4683 ;; Defined at:
  4684 ;;		line 74 in file "lcd.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  valor           1    wreg     unsigned char 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  valor           1    6[COMRAM] unsigned char 
  4689 ;;  old_D           1    7[COMRAM] unsigned char 
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  1    wreg      void 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2, status,0, cstack
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4699 ;;      Params:         0       0       0       0       0       0       0
  4700 ;;      Locals:         2       0       0       0       0       0       0
  4701 ;;      Temps:          0       0       0       0       0       0       0
  4702 ;;      Totals:         2       0       0       0       0       0       0
  4703 ;;Total ram usage:        2 bytes
  4704 ;; Hardware stack levels used: 1
  4705 ;; Hardware stack levels required when called: 1
  4706 ;; This function calls:
  4707 ;;		_Delay40us
  4708 ;;		_digitalWrite
  4709 ;; This function is called by:
  4710 ;;		_lcdNumber
  4711 ;;		_printf
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           	psect	text23
  4716  00653A                     __ptext23:
  4717                           	callstack 0
  4718  00653A                     _lcdData:
  4719                           	callstack 28
  4720                           
  4721                           ;incstack = 0
  4722                           ;lcdData@valor stored from wreg
  4723  00653A  6E07               	movwf	lcdData@valor^0,c
  4724  00653C                     
  4725                           ;lcd.c: 74: void lcdData(unsigned char valor);lcd.c: 75: {;lcd.c: 77:     unsigned char 
      +                          old_D;;lcd.c: 78:     old_D = PORTD;
  4726  00653C  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  4727  006540                     
  4728                           ;lcd.c: 80:     TRISD = 0x00;
  4729  006540  0E00               	movlw	0
  4730  006542  6E95               	movwf	149,c	;volatile
  4731  006544                     
  4732                           ;lcd.c: 81:  digitalWrite(PIN_E2, 1);
  4733  006544  0E00               	movlw	0
  4734  006546  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4735  006548  0E22               	movlw	34
  4736  00654A  6E01               	movwf	digitalWrite@pin^0,c
  4737  00654C  0E00               	movlw	0
  4738  00654E  6E04               	movwf	(digitalWrite@value+1)^0,c
  4739  006550  0E01               	movlw	1
  4740  006552  6E03               	movwf	digitalWrite@value^0,c
  4741  006554  EC8F  F037         	call	_digitalWrite	;wreg free
  4742  006558                     
  4743                           ;lcd.c: 83:  PORTD = valor;
  4744  006558  C007  FF83         	movff	lcdData@valor,3971	;volatile
  4745  00655C                     
  4746                           ;lcd.c: 85:     digitalWrite(PIN_E1, 1);
  4747  00655C  0E00               	movlw	0
  4748  00655E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4749  006560  0E21               	movlw	33
  4750  006562  6E01               	movwf	digitalWrite@pin^0,c
  4751  006564  0E00               	movlw	0
  4752  006566  6E04               	movwf	(digitalWrite@value+1)^0,c
  4753  006568  0E01               	movlw	1
  4754  00656A  6E03               	movwf	digitalWrite@value^0,c
  4755  00656C  EC8F  F037         	call	_digitalWrite	;wreg free
  4756  006570                     
  4757                           ;lcd.c: 86:  digitalWrite(PIN_E1, 0);
  4758  006570  0E00               	movlw	0
  4759  006572  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4760  006574  0E21               	movlw	33
  4761  006576  6E01               	movwf	digitalWrite@pin^0,c
  4762  006578  0E00               	movlw	0
  4763  00657A  6E04               	movwf	(digitalWrite@value+1)^0,c
  4764  00657C  0E00               	movlw	0
  4765  00657E  6E03               	movwf	digitalWrite@value^0,c
  4766  006580  EC8F  F037         	call	_digitalWrite	;wreg free
  4767  006584                     
  4768                           ;lcd.c: 88:     PORTD= old_D;
  4769  006584  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  4770  006588                     
  4771                           ;lcd.c: 90:  Delay40us();
  4772  006588  EC50  F032         	call	_Delay40us	;wreg free
  4773  00658C  0012               	return		;funcret
  4774  00658E                     __end_of_lcdData:
  4775                           	callstack 0
  4776                           
  4777 ;; *************** function _digitalWrite *****************
  4778 ;; Defined at:
  4779 ;;		line 6 in file "io.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  pin             2    0[COMRAM] int 
  4782 ;;  value           2    2[COMRAM] int 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;		None
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		wreg, status,2, status,0
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4794 ;;      Params:         4       0       0       0       0       0       0
  4795 ;;      Locals:         0       0       0       0       0       0       0
  4796 ;;      Temps:          2       0       0       0       0       0       0
  4797 ;;      Totals:         6       0       0       0       0       0       0
  4798 ;;Total ram usage:        6 bytes
  4799 ;; Hardware stack levels used: 1
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_lcdCommand
  4804 ;;		_lcdData
  4805 ;;		_ssdUpdate
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text24
  4810  006F1E                     __ptext24:
  4811                           	callstack 0
  4812  006F1E                     _digitalWrite:
  4813                           	callstack 28
  4814  006F1E                     
  4815                           ;io.c: 8:     if(pin <8){
  4816  006F1E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4817  006F20  EF9D  F037         	goto	u1760
  4818  006F24  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4819  006F26  E107               	bnz	u1761
  4820  006F28  0E08               	movlw	8
  4821  006F2A  5C01               	subwf	digitalWrite@pin^0,w,c
  4822  006F2C  B0D8               	btfsc	status,0,c
  4823  006F2E  EF9B  F037         	goto	u1761
  4824  006F32  EF9D  F037         	goto	u1760
  4825  006F36                     u1761:
  4826  006F36  EFC7  F037         	goto	l2020
  4827  006F3A                     u1760:
  4828  006F3A                     
  4829                           ;io.c: 9:         if (value){ ((PORTA) |= (1<<(pin)));}
  4830  006F3A  5003               	movf	digitalWrite@value^0,w,c
  4831  006F3C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4832  006F3E  B4D8               	btfsc	status,2,c
  4833  006F40  EFA4  F037         	goto	u1771
  4834  006F44  EFA6  F037         	goto	u1770
  4835  006F48                     u1771:
  4836  006F48  EFB6  F037         	goto	l2018
  4837  006F4C                     u1770:
  4838  006F4C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4839  006F50  0E01               	movlw	1
  4840  006F52  6E06               	movwf	(??_digitalWrite+1)^0,c
  4841  006F54  2A05               	incf	??_digitalWrite^0,f,c
  4842  006F56  EFAF  F037         	goto	u1784
  4843  006F5A                     u1785:
  4844  006F5A  90D8               	bcf	status,0,c
  4845  006F5C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4846  006F5E                     u1784:
  4847  006F5E  2E05               	decfsz	??_digitalWrite^0,f,c
  4848  006F60  EFAD  F037         	goto	u1785
  4849  006F64  5006               	movf	(??_digitalWrite+1)^0,w,c
  4850  006F66  1280               	iorwf	128,f,c	;volatile
  4851  006F68  EFB5  F038         	goto	l178
  4852  006F6C                     l2018:
  4853  006F6C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4854  006F70  0E01               	movlw	1
  4855  006F72  6E06               	movwf	(??_digitalWrite+1)^0,c
  4856  006F74  2A05               	incf	??_digitalWrite^0,f,c
  4857  006F76  EFBF  F037         	goto	u1794
  4858  006F7A                     u1795:
  4859  006F7A  90D8               	bcf	status,0,c
  4860  006F7C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4861  006F7E                     u1794:
  4862  006F7E  2E05               	decfsz	??_digitalWrite^0,f,c
  4863  006F80  EFBD  F037         	goto	u1795
  4864  006F84  5006               	movf	(??_digitalWrite+1)^0,w,c
  4865  006F86  0AFF               	xorlw	255
  4866  006F88  1680               	andwf	128,f,c	;volatile
  4867  006F8A  EFB5  F038         	goto	l178
  4868  006F8E                     l2020:
  4869  006F8E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4870  006F90  EFD5  F037         	goto	u1800
  4871  006F94  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4872  006F96  E107               	bnz	u1801
  4873  006F98  0E10               	movlw	16
  4874  006F9A  5C01               	subwf	digitalWrite@pin^0,w,c
  4875  006F9C  B0D8               	btfsc	status,0,c
  4876  006F9E  EFD3  F037         	goto	u1801
  4877  006FA2  EFD5  F037         	goto	u1800
  4878  006FA6                     u1801:
  4879  006FA6  EF03  F038         	goto	l2028
  4880  006FAA                     u1800:
  4881  006FAA                     
  4882                           ;io.c: 12:         pin -=8;
  4883  006FAA  0EF8               	movlw	248
  4884  006FAC  2601               	addwf	digitalWrite@pin^0,f,c
  4885  006FAE  0EFF               	movlw	255
  4886  006FB0  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4887                           
  4888                           ;io.c: 13:         if (value){ ((PORTB) |= (1<<(pin)));}
  4889  006FB2  5003               	movf	digitalWrite@value^0,w,c
  4890  006FB4  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4891  006FB6  B4D8               	btfsc	status,2,c
  4892  006FB8  EFE0  F037         	goto	u1811
  4893  006FBC  EFE2  F037         	goto	u1810
  4894  006FC0                     u1811:
  4895  006FC0  EFF2  F037         	goto	l2026
  4896  006FC4                     u1810:
  4897  006FC4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4898  006FC8  0E01               	movlw	1
  4899  006FCA  6E06               	movwf	(??_digitalWrite+1)^0,c
  4900  006FCC  2A05               	incf	??_digitalWrite^0,f,c
  4901  006FCE  EFEB  F037         	goto	u1824
  4902  006FD2                     u1825:
  4903  006FD2  90D8               	bcf	status,0,c
  4904  006FD4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4905  006FD6                     u1824:
  4906  006FD6  2E05               	decfsz	??_digitalWrite^0,f,c
  4907  006FD8  EFE9  F037         	goto	u1825
  4908  006FDC  5006               	movf	(??_digitalWrite+1)^0,w,c
  4909  006FDE  1281               	iorwf	129,f,c	;volatile
  4910  006FE0  EFB5  F038         	goto	l178
  4911  006FE4                     l2026:
  4912  006FE4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4913  006FE8  0E01               	movlw	1
  4914  006FEA  6E06               	movwf	(??_digitalWrite+1)^0,c
  4915  006FEC  2A05               	incf	??_digitalWrite^0,f,c
  4916  006FEE  EFFB  F037         	goto	u1834
  4917  006FF2                     u1835:
  4918  006FF2  90D8               	bcf	status,0,c
  4919  006FF4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4920  006FF6                     u1834:
  4921  006FF6  2E05               	decfsz	??_digitalWrite^0,f,c
  4922  006FF8  EFF9  F037         	goto	u1835
  4923  006FFC  5006               	movf	(??_digitalWrite+1)^0,w,c
  4924  006FFE  0AFF               	xorlw	255
  4925  007000  1681               	andwf	129,f,c	;volatile
  4926  007002  EFB5  F038         	goto	l178
  4927  007006                     l2028:
  4928  007006  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4929  007008  EF11  F038         	goto	u1840
  4930  00700C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4931  00700E  E107               	bnz	u1841
  4932  007010  0E18               	movlw	24
  4933  007012  5C01               	subwf	digitalWrite@pin^0,w,c
  4934  007014  B0D8               	btfsc	status,0,c
  4935  007016  EF0F  F038         	goto	u1841
  4936  00701A  EF11  F038         	goto	u1840
  4937  00701E                     u1841:
  4938  00701E  EF3F  F038         	goto	l2036
  4939  007022                     u1840:
  4940  007022                     
  4941                           ;io.c: 16:         pin -=16;
  4942  007022  0EF0               	movlw	240
  4943  007024  2601               	addwf	digitalWrite@pin^0,f,c
  4944  007026  0EFF               	movlw	255
  4945  007028  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4946                           
  4947                           ;io.c: 17:         if (value){ ((PORTC) |= (1<<(pin)));}
  4948  00702A  5003               	movf	digitalWrite@value^0,w,c
  4949  00702C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4950  00702E  B4D8               	btfsc	status,2,c
  4951  007030  EF1C  F038         	goto	u1851
  4952  007034  EF1E  F038         	goto	u1850
  4953  007038                     u1851:
  4954  007038  EF2E  F038         	goto	l2034
  4955  00703C                     u1850:
  4956  00703C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4957  007040  0E01               	movlw	1
  4958  007042  6E06               	movwf	(??_digitalWrite+1)^0,c
  4959  007044  2A05               	incf	??_digitalWrite^0,f,c
  4960  007046  EF27  F038         	goto	u1864
  4961  00704A                     u1865:
  4962  00704A  90D8               	bcf	status,0,c
  4963  00704C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4964  00704E                     u1864:
  4965  00704E  2E05               	decfsz	??_digitalWrite^0,f,c
  4966  007050  EF25  F038         	goto	u1865
  4967  007054  5006               	movf	(??_digitalWrite+1)^0,w,c
  4968  007056  1282               	iorwf	130,f,c	;volatile
  4969  007058  EFB5  F038         	goto	l178
  4970  00705C                     l2034:
  4971  00705C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4972  007060  0E01               	movlw	1
  4973  007062  6E06               	movwf	(??_digitalWrite+1)^0,c
  4974  007064  2A05               	incf	??_digitalWrite^0,f,c
  4975  007066  EF37  F038         	goto	u1874
  4976  00706A                     u1875:
  4977  00706A  90D8               	bcf	status,0,c
  4978  00706C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4979  00706E                     u1874:
  4980  00706E  2E05               	decfsz	??_digitalWrite^0,f,c
  4981  007070  EF35  F038         	goto	u1875
  4982  007074  5006               	movf	(??_digitalWrite+1)^0,w,c
  4983  007076  0AFF               	xorlw	255
  4984  007078  1682               	andwf	130,f,c	;volatile
  4985  00707A  EFB5  F038         	goto	l178
  4986  00707E                     l2036:
  4987  00707E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4988  007080  EF4D  F038         	goto	u1880
  4989  007084  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4990  007086  E107               	bnz	u1881
  4991  007088  0E20               	movlw	32
  4992  00708A  5C01               	subwf	digitalWrite@pin^0,w,c
  4993  00708C  B0D8               	btfsc	status,0,c
  4994  00708E  EF4B  F038         	goto	u1881
  4995  007092  EF4D  F038         	goto	u1880
  4996  007096                     u1881:
  4997  007096  EF7B  F038         	goto	l2044
  4998  00709A                     u1880:
  4999  00709A                     
  5000                           ;io.c: 20:         pin -=24;
  5001  00709A  0EE8               	movlw	232
  5002  00709C  2601               	addwf	digitalWrite@pin^0,f,c
  5003  00709E  0EFF               	movlw	255
  5004  0070A0  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5005                           
  5006                           ;io.c: 21:         if (value){ ((PORTD) |= (1<<(pin)));}
  5007  0070A2  5003               	movf	digitalWrite@value^0,w,c
  5008  0070A4  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5009  0070A6  B4D8               	btfsc	status,2,c
  5010  0070A8  EF58  F038         	goto	u1891
  5011  0070AC  EF5A  F038         	goto	u1890
  5012  0070B0                     u1891:
  5013  0070B0  EF6A  F038         	goto	l2042
  5014  0070B4                     u1890:
  5015  0070B4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5016  0070B8  0E01               	movlw	1
  5017  0070BA  6E06               	movwf	(??_digitalWrite+1)^0,c
  5018  0070BC  2A05               	incf	??_digitalWrite^0,f,c
  5019  0070BE  EF63  F038         	goto	u1904
  5020  0070C2                     u1905:
  5021  0070C2  90D8               	bcf	status,0,c
  5022  0070C4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5023  0070C6                     u1904:
  5024  0070C6  2E05               	decfsz	??_digitalWrite^0,f,c
  5025  0070C8  EF61  F038         	goto	u1905
  5026  0070CC  5006               	movf	(??_digitalWrite+1)^0,w,c
  5027  0070CE  1283               	iorwf	131,f,c	;volatile
  5028  0070D0  EFB5  F038         	goto	l178
  5029  0070D4                     l2042:
  5030  0070D4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5031  0070D8  0E01               	movlw	1
  5032  0070DA  6E06               	movwf	(??_digitalWrite+1)^0,c
  5033  0070DC  2A05               	incf	??_digitalWrite^0,f,c
  5034  0070DE  EF73  F038         	goto	u1914
  5035  0070E2                     u1915:
  5036  0070E2  90D8               	bcf	status,0,c
  5037  0070E4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5038  0070E6                     u1914:
  5039  0070E6  2E05               	decfsz	??_digitalWrite^0,f,c
  5040  0070E8  EF71  F038         	goto	u1915
  5041  0070EC  5006               	movf	(??_digitalWrite+1)^0,w,c
  5042  0070EE  0AFF               	xorlw	255
  5043  0070F0  1683               	andwf	131,f,c	;volatile
  5044  0070F2  EFB5  F038         	goto	l178
  5045  0070F6                     l2044:
  5046  0070F6  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5047  0070F8  EF89  F038         	goto	u1920
  5048  0070FC  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5049  0070FE  E107               	bnz	u1921
  5050  007100  0E28               	movlw	40
  5051  007102  5C01               	subwf	digitalWrite@pin^0,w,c
  5052  007104  B0D8               	btfsc	status,0,c
  5053  007106  EF87  F038         	goto	u1921
  5054  00710A  EF89  F038         	goto	u1920
  5055  00710E                     u1921:
  5056  00710E  EFB5  F038         	goto	l178
  5057  007112                     u1920:
  5058  007112                     
  5059                           ;io.c: 24:         pin -=32;
  5060  007112  0EE0               	movlw	224
  5061  007114  2601               	addwf	digitalWrite@pin^0,f,c
  5062  007116  0EFF               	movlw	255
  5063  007118  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5064                           
  5065                           ;io.c: 25:         if (value){ ((PORTE) |= (1<<(pin)));}
  5066  00711A  5003               	movf	digitalWrite@value^0,w,c
  5067  00711C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5068  00711E  B4D8               	btfsc	status,2,c
  5069  007120  EF94  F038         	goto	u1931
  5070  007124  EF96  F038         	goto	u1930
  5071  007128                     u1931:
  5072  007128  EFA6  F038         	goto	l2050
  5073  00712C                     u1930:
  5074  00712C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5075  007130  0E01               	movlw	1
  5076  007132  6E06               	movwf	(??_digitalWrite+1)^0,c
  5077  007134  2A05               	incf	??_digitalWrite^0,f,c
  5078  007136  EF9F  F038         	goto	u1944
  5079  00713A                     u1945:
  5080  00713A  90D8               	bcf	status,0,c
  5081  00713C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5082  00713E                     u1944:
  5083  00713E  2E05               	decfsz	??_digitalWrite^0,f,c
  5084  007140  EF9D  F038         	goto	u1945
  5085  007144  5006               	movf	(??_digitalWrite+1)^0,w,c
  5086  007146  1284               	iorwf	132,f,c	;volatile
  5087  007148  EFB5  F038         	goto	l178
  5088  00714C                     l2050:
  5089  00714C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5090  007150  0E01               	movlw	1
  5091  007152  6E06               	movwf	(??_digitalWrite+1)^0,c
  5092  007154  2A05               	incf	??_digitalWrite^0,f,c
  5093  007156  EFAF  F038         	goto	u1954
  5094  00715A                     u1955:
  5095  00715A  90D8               	bcf	status,0,c
  5096  00715C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5097  00715E                     u1954:
  5098  00715E  2E05               	decfsz	??_digitalWrite^0,f,c
  5099  007160  EFAD  F038         	goto	u1955
  5100  007164  5006               	movf	(??_digitalWrite+1)^0,w,c
  5101  007166  0AFF               	xorlw	255
  5102  007168  1684               	andwf	132,f,c	;volatile
  5103  00716A                     l178:
  5104  00716A  0012               	return		;funcret
  5105  00716C                     __end_of_digitalWrite:
  5106                           	callstack 0
  5107                           
  5108 ;; *************** function _Delay40us *****************
  5109 ;; Defined at:
  5110 ;;		line 31 in file "lcd.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;		None
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;  i               1    0[COMRAM] unsigned char 
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      void 
  5117 ;; Registers used:
  5118 ;;		wreg, status,2, status,0
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5124 ;;      Params:         0       0       0       0       0       0       0
  5125 ;;      Locals:         1       0       0       0       0       0       0
  5126 ;;      Temps:          0       0       0       0       0       0       0
  5127 ;;      Totals:         1       0       0       0       0       0       0
  5128 ;;Total ram usage:        1 bytes
  5129 ;; Hardware stack levels used: 1
  5130 ;; This function calls:
  5131 ;;		Nothing
  5132 ;; This function is called by:
  5133 ;;		_Delay2ms
  5134 ;;		_lcdCommand
  5135 ;;		_lcdData
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text25
  5140  0064A0                     __ptext25:
  5141                           	callstack 0
  5142  0064A0                     _Delay40us:
  5143                           	callstack 28
  5144  0064A0                     
  5145                           ;lcd.c: 33:  unsigned char i;;lcd.c: 34:  for(i=0; i < 25; i++);
  5146  0064A0  0E00               	movlw	0
  5147  0064A2  6E01               	movwf	Delay40us@i^0,c
  5148  0064A4                     l1040:
  5149  0064A4  2A01               	incf	Delay40us@i^0,f,c
  5150  0064A6  0E18               	movlw	24
  5151  0064A8  6401               	cpfsgt	Delay40us@i^0,c
  5152  0064AA  EF59  F032         	goto	u11
  5153  0064AE  EF5B  F032         	goto	u10
  5154  0064B2                     u11:
  5155  0064B2  EF52  F032         	goto	l1040
  5156  0064B6                     u10:
  5157  0064B6  0012               	return		;funcret
  5158  0064B8                     __end_of_Delay40us:
  5159                           	callstack 0
  5160                           
  5161 ;; *************** function ___awmod *****************
  5162 ;; Defined at:
  5163 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  dividend        2    8[COMRAM] int 
  5166 ;;  divisor         2   10[COMRAM] int 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;  sign            1   13[COMRAM] unsigned char 
  5169 ;;  counter         1   12[COMRAM] unsigned char 
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  2    8[COMRAM] int 
  5172 ;; Registers used:
  5173 ;;		wreg, status,2, status,0
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5179 ;;      Params:         4       0       0       0       0       0       0
  5180 ;;      Locals:         2       0       0       0       0       0       0
  5181 ;;      Temps:          0       0       0       0       0       0       0
  5182 ;;      Totals:         6       0       0       0       0       0       0
  5183 ;;Total ram usage:        6 bytes
  5184 ;; Hardware stack levels used: 1
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_lcdNumber
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           	psect	text26
  5193  0069D0                     __ptext26:
  5194                           	callstack 0
  5195  0069D0                     ___awmod:
  5196                           	callstack 28
  5197  0069D0  0E00               	movlw	0
  5198  0069D2  6E0E               	movwf	___awmod@sign^0,c
  5199  0069D4  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  5200  0069D6  EFF1  F034         	goto	u2140
  5201  0069DA  EFEF  F034         	goto	u2141
  5202  0069DE                     u2141:
  5203  0069DE  EFF7  F034         	goto	l2254
  5204  0069E2                     u2140:
  5205  0069E2  6C09               	negf	___awmod@dividend^0,c
  5206  0069E4  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  5207  0069E6  B0D8               	btfsc	status,0,c
  5208  0069E8  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  5209  0069EA  0E01               	movlw	1
  5210  0069EC  6E0E               	movwf	___awmod@sign^0,c
  5211  0069EE                     l2254:
  5212  0069EE  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  5213  0069F0  EFFE  F034         	goto	u2150
  5214  0069F4  EFFC  F034         	goto	u2151
  5215  0069F8                     u2151:
  5216  0069F8  EF02  F035         	goto	l2258
  5217  0069FC                     u2150:
  5218  0069FC  6C0B               	negf	___awmod@divisor^0,c
  5219  0069FE  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  5220  006A00  B0D8               	btfsc	status,0,c
  5221  006A02  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  5222  006A04                     l2258:
  5223  006A04  500B               	movf	___awmod@divisor^0,w,c
  5224  006A06  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  5225  006A08  B4D8               	btfsc	status,2,c
  5226  006A0A  EF09  F035         	goto	u2161
  5227  006A0E  EF0B  F035         	goto	u2160
  5228  006A12                     u2161:
  5229  006A12  EF2F  F035         	goto	l2274
  5230  006A16                     u2160:
  5231  006A16  0E01               	movlw	1
  5232  006A18  6E0D               	movwf	___awmod@counter^0,c
  5233  006A1A  EF13  F035         	goto	l2264
  5234  006A1E                     l2262:
  5235  006A1E  90D8               	bcf	status,0,c
  5236  006A20  360B               	rlcf	___awmod@divisor^0,f,c
  5237  006A22  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  5238  006A24  2A0D               	incf	___awmod@counter^0,f,c
  5239  006A26                     l2264:
  5240  006A26  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  5241  006A28  EF18  F035         	goto	u2171
  5242  006A2C  EF1A  F035         	goto	u2170
  5243  006A30                     u2171:
  5244  006A30  EF0F  F035         	goto	l2262
  5245  006A34                     u2170:
  5246  006A34                     l2266:
  5247  006A34  500B               	movf	___awmod@divisor^0,w,c
  5248  006A36  5C09               	subwf	___awmod@dividend^0,w,c
  5249  006A38  500C               	movf	(___awmod@divisor+1)^0,w,c
  5250  006A3A  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  5251  006A3C  A0D8               	btfss	status,0,c
  5252  006A3E  EF23  F035         	goto	u2181
  5253  006A42  EF25  F035         	goto	u2180
  5254  006A46                     u2181:
  5255  006A46  EF29  F035         	goto	l2270
  5256  006A4A                     u2180:
  5257  006A4A  500B               	movf	___awmod@divisor^0,w,c
  5258  006A4C  5E09               	subwf	___awmod@dividend^0,f,c
  5259  006A4E  500C               	movf	(___awmod@divisor+1)^0,w,c
  5260  006A50  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  5261  006A52                     l2270:
  5262  006A52  90D8               	bcf	status,0,c
  5263  006A54  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  5264  006A56  320B               	rrcf	___awmod@divisor^0,f,c
  5265  006A58  2E0D               	decfsz	___awmod@counter^0,f,c
  5266  006A5A  EF1A  F035         	goto	l2266
  5267  006A5E                     l2274:
  5268  006A5E  500E               	movf	___awmod@sign^0,w,c
  5269  006A60  B4D8               	btfsc	status,2,c
  5270  006A62  EF35  F035         	goto	u2191
  5271  006A66  EF37  F035         	goto	u2190
  5272  006A6A                     u2191:
  5273  006A6A  EF3B  F035         	goto	l2278
  5274  006A6E                     u2190:
  5275  006A6E  6C09               	negf	___awmod@dividend^0,c
  5276  006A70  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  5277  006A72  B0D8               	btfsc	status,0,c
  5278  006A74  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  5279  006A76                     l2278:
  5280  006A76  C009  F009         	movff	___awmod@dividend,?___awmod
  5281  006A7A  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  5282  006A7E  0012               	return		;funcret
  5283  006A80                     __end_of___awmod:
  5284                           	callstack 0
  5285                           
  5286 ;; *************** function ___awdiv *****************
  5287 ;; Defined at:
  5288 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  5289 ;; Parameters:    Size  Location     Type
  5290 ;;  dividend        2    0[COMRAM] int 
  5291 ;;  divisor         2    2[COMRAM] int 
  5292 ;; Auto vars:     Size  Location     Type
  5293 ;;  quotient        2    6[COMRAM] int 
  5294 ;;  sign            1    5[COMRAM] unsigned char 
  5295 ;;  counter         1    4[COMRAM] unsigned char 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  2    0[COMRAM] int 
  5298 ;; Registers used:
  5299 ;;		wreg, status,2, status,0
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5305 ;;      Params:         4       0       0       0       0       0       0
  5306 ;;      Locals:         4       0       0       0       0       0       0
  5307 ;;      Temps:          0       0       0       0       0       0       0
  5308 ;;      Totals:         8       0       0       0       0       0       0
  5309 ;;Total ram usage:        8 bytes
  5310 ;; Hardware stack levels used: 1
  5311 ;; This function calls:
  5312 ;;		Nothing
  5313 ;; This function is called by:
  5314 ;;		_lcdNumber
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           	psect	text27
  5319  006A80                     __ptext27:
  5320                           	callstack 0
  5321  006A80                     ___awdiv:
  5322                           	callstack 28
  5323  006A80  0E00               	movlw	0
  5324  006A82  6E06               	movwf	___awdiv@sign^0,c
  5325  006A84  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5326  006A86  EF49  F035         	goto	u2080
  5327  006A8A  EF47  F035         	goto	u2081
  5328  006A8E                     u2081:
  5329  006A8E  EF4F  F035         	goto	l2210
  5330  006A92                     u2080:
  5331  006A92  6C03               	negf	___awdiv@divisor^0,c
  5332  006A94  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5333  006A96  B0D8               	btfsc	status,0,c
  5334  006A98  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5335  006A9A  0E01               	movlw	1
  5336  006A9C  6E06               	movwf	___awdiv@sign^0,c
  5337  006A9E                     l2210:
  5338  006A9E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5339  006AA0  EF56  F035         	goto	u2090
  5340  006AA4  EF54  F035         	goto	u2091
  5341  006AA8                     u2091:
  5342  006AA8  EF5C  F035         	goto	l2216
  5343  006AAC                     u2090:
  5344  006AAC  6C01               	negf	___awdiv@dividend^0,c
  5345  006AAE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5346  006AB0  B0D8               	btfsc	status,0,c
  5347  006AB2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5348  006AB4  0E01               	movlw	1
  5349  006AB6  1A06               	xorwf	___awdiv@sign^0,f,c
  5350  006AB8                     l2216:
  5351  006AB8  0E00               	movlw	0
  5352  006ABA  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5353  006ABC  0E00               	movlw	0
  5354  006ABE  6E07               	movwf	___awdiv@quotient^0,c
  5355  006AC0  5003               	movf	___awdiv@divisor^0,w,c
  5356  006AC2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5357  006AC4  B4D8               	btfsc	status,2,c
  5358  006AC6  EF67  F035         	goto	u2101
  5359  006ACA  EF69  F035         	goto	u2100
  5360  006ACE                     u2101:
  5361  006ACE  EF91  F035         	goto	l2238
  5362  006AD2                     u2100:
  5363  006AD2  0E01               	movlw	1
  5364  006AD4  6E05               	movwf	___awdiv@counter^0,c
  5365  006AD6  EF71  F035         	goto	l2224
  5366  006ADA                     l2222:
  5367  006ADA  90D8               	bcf	status,0,c
  5368  006ADC  3603               	rlcf	___awdiv@divisor^0,f,c
  5369  006ADE  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5370  006AE0  2A05               	incf	___awdiv@counter^0,f,c
  5371  006AE2                     l2224:
  5372  006AE2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5373  006AE4  EF76  F035         	goto	u2111
  5374  006AE8  EF78  F035         	goto	u2110
  5375  006AEC                     u2111:
  5376  006AEC  EF6D  F035         	goto	l2222
  5377  006AF0                     u2110:
  5378  006AF0                     l2226:
  5379  006AF0  90D8               	bcf	status,0,c
  5380  006AF2  3607               	rlcf	___awdiv@quotient^0,f,c
  5381  006AF4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5382  006AF6  5003               	movf	___awdiv@divisor^0,w,c
  5383  006AF8  5C01               	subwf	___awdiv@dividend^0,w,c
  5384  006AFA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5385  006AFC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5386  006AFE  A0D8               	btfss	status,0,c
  5387  006B00  EF84  F035         	goto	u2121
  5388  006B04  EF86  F035         	goto	u2120
  5389  006B08                     u2121:
  5390  006B08  EF8B  F035         	goto	l2234
  5391  006B0C                     u2120:
  5392  006B0C  5003               	movf	___awdiv@divisor^0,w,c
  5393  006B0E  5E01               	subwf	___awdiv@dividend^0,f,c
  5394  006B10  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5395  006B12  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5396  006B14  8007               	bsf	___awdiv@quotient^0,0,c
  5397  006B16                     l2234:
  5398  006B16  90D8               	bcf	status,0,c
  5399  006B18  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5400  006B1A  3203               	rrcf	___awdiv@divisor^0,f,c
  5401  006B1C  2E05               	decfsz	___awdiv@counter^0,f,c
  5402  006B1E  EF78  F035         	goto	l2226
  5403  006B22                     l2238:
  5404  006B22  5006               	movf	___awdiv@sign^0,w,c
  5405  006B24  B4D8               	btfsc	status,2,c
  5406  006B26  EF97  F035         	goto	u2131
  5407  006B2A  EF99  F035         	goto	u2130
  5408  006B2E                     u2131:
  5409  006B2E  EF9D  F035         	goto	l2242
  5410  006B32                     u2130:
  5411  006B32  6C07               	negf	___awdiv@quotient^0,c
  5412  006B34  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5413  006B36  B0D8               	btfsc	status,0,c
  5414  006B38  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5415  006B3A                     l2242:
  5416  006B3A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5417  006B3E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5418  006B42  0012               	return		;funcret
  5419  006B44                     __end_of___awdiv:
  5420                           	callstack 0
  5421                           
  5422                           	psect	rparam
  5423  0000                     
  5424                           	psect	idloc
  5425                           
  5426                           ;Config register IDLOC0 @ 0x200000
  5427                           ;	unspecified, using default values
  5428  200000                     	org	2097152
  5429  200000  FF                 	db	255
  5430                           
  5431                           ;Config register IDLOC1 @ 0x200001
  5432                           ;	unspecified, using default values
  5433  200001                     	org	2097153
  5434  200001  FF                 	db	255
  5435                           
  5436                           ;Config register IDLOC2 @ 0x200002
  5437                           ;	unspecified, using default values
  5438  200002                     	org	2097154
  5439  200002  FF                 	db	255
  5440                           
  5441                           ;Config register IDLOC3 @ 0x200003
  5442                           ;	unspecified, using default values
  5443  200003                     	org	2097155
  5444  200003  FF                 	db	255
  5445                           
  5446                           ;Config register IDLOC4 @ 0x200004
  5447                           ;	unspecified, using default values
  5448  200004                     	org	2097156
  5449  200004  FF                 	db	255
  5450                           
  5451                           ;Config register IDLOC5 @ 0x200005
  5452                           ;	unspecified, using default values
  5453  200005                     	org	2097157
  5454  200005  FF                 	db	255
  5455                           
  5456                           ;Config register IDLOC6 @ 0x200006
  5457                           ;	unspecified, using default values
  5458  200006                     	org	2097158
  5459  200006  FF                 	db	255
  5460                           
  5461                           ;Config register IDLOC7 @ 0x200007
  5462                           ;	unspecified, using default values
  5463  200007                     	org	2097159
  5464  200007  FF                 	db	255
  5465                           
  5466                           	psect	config
  5467                           
  5468                           ; Padding undefined space
  5469  300000                     	org	3145728
  5470  300000  FF                 	db	255
  5471                           
  5472                           ;Config register CONFIG1H @ 0x300001
  5473                           ;	Oscillator Selection bits
  5474                           ;	OSC = HS, HS oscillator
  5475                           ;	Fail-Safe Clock Monitor Enable bit
  5476                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5477                           ;	Internal/External Oscillator Switchover bit
  5478                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5479  300001                     	org	3145729
  5480  300001  02                 	db	2
  5481                           
  5482                           ;Config register CONFIG2L @ 0x300002
  5483                           ;	Power-up Timer Enable bit
  5484                           ;	PWRT = OFF, PWRT disabled
  5485                           ;	Brown-out Reset Enable bits
  5486                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5487                           ;	Brown Out Reset Voltage bits
  5488                           ;	BORV = 0x2E, user specified literal
  5489  300002                     	org	3145730
  5490  300002  71                 	db	369
  5491                           
  5492                           ;Config register CONFIG2H @ 0x300003
  5493                           ;	Watchdog Timer Enable bit
  5494                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5495                           ;	Watchdog Timer Postscale Select bits
  5496                           ;	WDTPS = 1, 1:1
  5497  300003                     	org	3145731
  5498  300003  00                 	db	0
  5499                           
  5500                           ; Padding undefined space
  5501  300004                     	org	3145732
  5502  300004  FF                 	db	255
  5503                           
  5504                           ;Config register CONFIG3H @ 0x300005
  5505                           ;	CCP2 MUX bit
  5506                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5507                           ;	PORTB A/D Enable bit
  5508                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5509                           ;	Low-Power Timer1 Oscillator Enable bit
  5510                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5511                           ;	MCLR Pin Enable bit
  5512                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5513  300005                     	org	3145733
  5514  300005  83                 	db	131
  5515                           
  5516                           ;Config register CONFIG4L @ 0x300006
  5517                           ;	Stack Full/Underflow Reset Enable bit
  5518                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5519                           ;	Single-Supply ICSP Enable bit
  5520                           ;	LVP = OFF, Single-Supply ICSP disabled
  5521                           ;	Extended Instruction Set Enable bit
  5522                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5523                           ;	Background Debugger Enable bit
  5524                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5525  300006                     	org	3145734
  5526  300006  80                 	db	128
  5527                           
  5528                           ; Padding undefined space
  5529  300007                     	org	3145735
  5530  300007  FF                 	db	255
  5531                           
  5532                           ;Config register CONFIG5L @ 0x300008
  5533                           ;	Code Protection bit
  5534                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5535                           ;	Code Protection bit
  5536                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5537                           ;	Code Protection bit
  5538                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5539                           ;	Code Protection bit
  5540                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5541  300008                     	org	3145736
  5542  300008  0F                 	db	15
  5543                           
  5544                           ;Config register CONFIG5H @ 0x300009
  5545                           ;	Boot Block Code Protection bit
  5546                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5547                           ;	Data EEPROM Code Protection bit
  5548                           ;	CPD = OFF, Data EEPROM not code-protected
  5549  300009                     	org	3145737
  5550  300009  C0                 	db	192
  5551                           
  5552                           ;Config register CONFIG6L @ 0x30000A
  5553                           ;	Write Protection bit
  5554                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5555                           ;	Write Protection bit
  5556                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5557                           ;	Write Protection bit
  5558                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5559                           ;	Write Protection bit
  5560                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5561  30000A                     	org	3145738
  5562  30000A  0F                 	db	15
  5563                           
  5564                           ;Config register CONFIG6H @ 0x30000B
  5565                           ;	Configuration Register Write Protection bit
  5566                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5567                           ;	Boot Block Write Protection bit
  5568                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5569                           ;	Data EEPROM Write Protection bit
  5570                           ;	WRTD = OFF, Data EEPROM not write-protected
  5571  30000B                     	org	3145739
  5572  30000B  E0                 	db	224
  5573                           
  5574                           ;Config register CONFIG7L @ 0x30000C
  5575                           ;	Table Read Protection bit
  5576                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5577                           ;	Table Read Protection bit
  5578                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5579                           ;	Table Read Protection bit
  5580                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5581                           ;	Table Read Protection bit
  5582                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5583  30000C                     	org	3145740
  5584  30000C  0F                 	db	15
  5585                           
  5586                           ;Config register CONFIG7H @ 0x30000D
  5587                           ;	Boot Block Table Read Protection bit
  5588                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5589  30000D                     	org	3145741
  5590  30000D  40                 	db	64
  5591                           tosu	equ	0xFFF
  5592                           tosh	equ	0xFFE
  5593                           tosl	equ	0xFFD
  5594                           stkptr	equ	0xFFC
  5595                           pclatu	equ	0xFFB
  5596                           pclath	equ	0xFFA
  5597                           pcl	equ	0xFF9
  5598                           tblptru	equ	0xFF8
  5599                           tblptrh	equ	0xFF7
  5600                           tblptrl	equ	0xFF6
  5601                           tablat	equ	0xFF5
  5602                           prodh	equ	0xFF4
  5603                           prodl	equ	0xFF3
  5604                           indf0	equ	0xFEF
  5605                           postinc0	equ	0xFEE
  5606                           postdec0	equ	0xFED
  5607                           preinc0	equ	0xFEC
  5608                           plusw0	equ	0xFEB
  5609                           fsr0h	equ	0xFEA
  5610                           fsr0l	equ	0xFE9
  5611                           wreg	equ	0xFE8
  5612                           indf1	equ	0xFE7
  5613                           postinc1	equ	0xFE6
  5614                           postdec1	equ	0xFE5
  5615                           preinc1	equ	0xFE4
  5616                           plusw1	equ	0xFE3
  5617                           fsr1h	equ	0xFE2
  5618                           fsr1l	equ	0xFE1
  5619                           bsr	equ	0xFE0
  5620                           indf2	equ	0xFDF
  5621                           postinc2	equ	0xFDE
  5622                           postdec2	equ	0xFDD
  5623                           preinc2	equ	0xFDC
  5624                           plusw2	equ	0xFDB
  5625                           fsr2h	equ	0xFDA
  5626                           fsr2l	equ	0xFD9
  5627                           status	equ	0xFD8

Data Sizes:
    Strings     288
    Constant    16
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     27      53
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@texto	PTR unsigned char  size(2) Largest target is 36
		 -> STR_12(CODE[32]), STR_11(CODE[9]), STR_10(CODE[12]), STR_9(CODE[27]), 
		 -> STR_8(CODE[27]), STR_7(CODE[19]), STR_6(CODE[29]), STR_5(CODE[36]), 
		 -> STR_4(CODE[25]), STR_3(CODE[22]), STR_2(CODE[29]), STR_1(CODE[30]), 


Critical Paths under _main in COMRAM

    _main->_acesso
    _ssdInit->_pinMode
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _lcdInit->_lcdCommand
    _defineSenha->_printf
    _acesso->_lcdNumber
    _teclado2->_kpDebounce
    _teclado1->_kpDebounce
    _ssdUpdate->_digitalWrite
    _pwmSet->___lwdiv
    _printf->_lcdCommand
    _printf->_lcdData
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    _lcdNumber->___awmod
    _lcdData->_digitalWrite
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   61159
                                             25 COMRAM     2     2      0
                             _acesso
                        _defineSenha
                             _kpInit
                         _lcdCommand
                            _lcdInit
                             _printf
                       _pwmFrequency
                            _pwmInit
                            _ssdInit
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     626
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     626
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4163
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _defineSenha                                          6     6      0   13475
                                             14 COMRAM     6     6      0
                         _kpDebounce
                             _kpRead
                             _printf
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (1) _acesso                                               7     7      0   31586
                                             18 COMRAM     7     7      0
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                          _lcdNumber
                             _printf
                             _pwmSet
                           _ssdDigit
                           _teclado1
                           _teclado2
 ---------------------------------------------------------------------------------
 (2) _teclado2                                             6     6      0    6767
                                             10 COMRAM     6     6      0
                         _kpDebounce
                             _kpRead
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _teclado1                                             6     6      0    6767
                                             10 COMRAM     6     6      0
                         _kpDebounce
                             _kpRead
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1    3672
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _kpDebounce                                          10    10      0     210
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (2) _pwmSet                                               5     5      0     716
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    6488
                                              8 COMRAM     6     4      2
                         _lcdCommand
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2751
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      60
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (2) _lcdNumber                                            4     2      2    3941
                                             14 COMRAM     4     2      2
                            ___awdiv
                            ___awmod
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    2647
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _acesso
     _kpDebounce
     _kpRead
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _lcdNumber
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _lcdData
         _Delay40us
         _digitalWrite
     _printf
       _lcdCommand
       _lcdData
     _pwmSet
       ___lwdiv
       ___wmul
     _ssdDigit
     _teclado1
       _kpDebounce
       _kpRead
       _ssdDigit
       _ssdUpdate
         _digitalWrite
     _teclado2
       _kpDebounce
       _kpRead
       _ssdDigit
       _ssdUpdate
   _defineSenha
     _kpDebounce
     _kpRead
     _printf
     _ssdDigit
     _ssdUpdate
   _kpInit
   _lcdCommand
   _lcdInit
     _Delay2ms
     _lcdCommand
     _pinMode
   _printf
   _pwmFrequency
     ___aldiv
   _pwmInit
     _pwmFrequency
   _ssdInit
     _pinMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1B      35       1       41.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      15        0.0%
DATA                 0      0      35       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 30 19:01:20 2021

                     l73 73B8                       l94 7606                       u10 64B6  
                     u11 64B2             ___awdiv@sign 0006                       _v0 0033  
                     _v1 0032                       _v2 0031                       _v3 0030  
    ___wmul@multiplicand 0003                      l300 66A6                      l212 7854  
                    l109 7B4A                      l303 6538                      l136 7ECC  
                    l250 6488                      l306 64D0                      l227 647E  
                    l245 6EFC                      l333 663A                      l246 6F14  
                    l263 64B6                      l247 6F1C                      l343 6D9E  
                    l440 6C4E                      l361 6512                      l281 6806  
                    l178 716A                      l346 65E2                      l275 6884  
                    l268 64EC                      l356 6928                      l605 6A7E  
                    l278 658C                      l287 671A                      l592 6B42  
                    l852 6786                      l859 678E                      u220 64EC  
                    u221 64E8                      u320 6EC0                      u304 6E68  
                    u321 6EBC                      u305 6E62                      u330 6ED2  
                    u314 6E98                      u331 6ECE                      u315 6E92  
                    u340 6EEA                      u341 6EE6                      u350 6F0C  
                    u270 6E1A                      u254 6DC6                      _PR2 000FCB  
                    u351 6F08                      u271 6E16                      u255 6DC2  
                    u264 6DE6                      u265 6DE2                      u290 6E4A  
                    u291 6E46                      u284 6E30                      u285 6E2C  
           ___awmod@sign 000E                      wreg 000FE8                     l1040 64A4  
                   l1120 6DA4                     l1042 64A6                     l1034 64A0  
                   l1130 6DF2                     l1122 6DA8                     l2020 6F8E  
                   l2012 6F1E                     l1140 6E1A                     l1124 6DAC  
                   l2100 6D2E                     l2030 7022                     l2022 6FAA  
                   l2014 6F3A                     l1150 6E7A                     l1118 6DA0  
                   l2102 6D36                     l2040 70B4                     l2032 703C  
                   l2024 6FC4                     l2016 6F4C                     l1160 6ED2  
                   l1152 6EAE                     l1136 6DFA                     l1128 6DB0  
                   l2120 65E6                     l2104 6D48                     l2112 6D64  
                   l2210 6A9E                     l2202 6A80                     l2050 714C  
                   l2042 70D4                     l2034 705C                     l2026 6FE4  
                   l2018 6F6C                     l1090 64D6                     l1170 6F18  
                   l1162 6EEA                     l1154 6EB0                     l1146 6E1E  
                   l1138 6DFE                     l2130 6620                     l2122 65F6  
                   l2106 6D5C                     l2220 6AD2                     l2212 6AAC  
                   l2204 6A84                     l2044 70F6                     l2036 707E  
                   l2028 7006                     l2140 6544                     l1092 64DA  
                   l1084 64D2                     l2060 682A                     l2052 680A  
                   l2300 677A                     l1164 6EF0                     l1156 6EC0  
                   l1148 6E4A                     l2132 6624                     l2124 65FA  
                   l2230 6B0C                     l2222 6ADA                     l2214 6AB4  
                   l2206 6A92                     l2046 7112                     l2038 709A  
                   l2150 6588                     l2142 6558                     l1094 64DC  
                   l2070 6878                     l2062 683E                     l2054 680E  
                   l2302 6780                     l1166 6EF4                     l1158 6EC2  
                   l2118 6476                     l2134 6636                     l2126 660A  
                   l2240 6B32                     l2232 6B14                     l2224 6AE2  
                   l2216 6AB8                     l2208 6A9A                     l2048 712C  
                   l2144 655C                     l2136 653C                     l2072 6880  
                   l2064 6852                     l2056 6812                     l2320 68EC  
                   l2312 688E                     l2152 64EE                     l1168 6F0C  
                   l2128 660E                     l2080 6C7C                     l2400 7376  
                   l2160 6B48                     l2304 6514                     l2242 6B3A  
                   l2234 6B16                     l2226 6AF0                     l2218 6AC0  
                   l2250 69E2                     l2146 6570                     l2138 6540  
                   l2066 6856                     l2058 6826                     l2322 6908  
                   l2306 6886                     l2154 650A                     l2090 6CDA  
                   l2082 6C90                     l2074 6C50                     l2402 7380  
                   l2330 7178                     l2410 73C2                     l2170 6B88  
                   l2162 6B56                     l2236 6B1C                     l2228 6AF6  
                   l2260 6A16                     l2252 69EA                     l2148 6584  
                   l2500 66A8                     l2068 6868                     l2324 690C  
                   l2316 68BA                     l2092 6CEC                     l2084 6CAC  
                   l2076 6C54                     l2404 7392                     l2340 7188  
                   l2332 717C                     l2420 73D2                     l2412 73C6  
                   l2180 6BC6                     l2172 6B8C                     l2164 6B66  
                   l2238 6B22                     l2270 6A52                     l2262 6A1E  
                   l2254 69EE                     l2246 69D0                     l2502 66B4  
                   l2318 68E2                     l2094 6D00                     l2086 6CBE  
                   l2078 6C68                     l2350 7202                     l2406 739C  
                   l2342 71A4                     l2326 716C                     l2430 743E  
                   l2422 73D6                     l2414 73CA                     l2510 7636  
                   l2190 6C0E                     l2182 6BD4                     l2174 6B9C  
                   l2166 6B6A                     l2158 6B44                     l2272 6A58  
                   l2264 6A26                     l2256 69FC                     l2248 69D4  
                   l2504 6700                     l2096 6D08                     l2088 6CD2  
                   l2360 725C                     l2352 7214                     l2344 71C0  
                   l2328 7174                     l2440 7498                     l2432 7450  
                   l2424 73F2                     l2408 73BA                     l2600 7B84  
                   l2520 76CA                     l2512 7656                     l2192 6C18  
                   l2184 6BDE                     l2176 6BB2                     l2168 6B78  
                   l2266 6A34                     l2274 6A5E                     l2258 6A04  
                   l2290 6746                     l2282 671C                     l2098 6D1A  
                   l2370 72A0                     l2362 726E                     l2354 7226  
                   l2346 71DE                     l2338 7184                     l2450 74E4  
                   l2442 74AA                     l2434 7462                     l2426 740E  
                   l2610 7B94                     l2602 7B88                     l2530 7768  
                   l2522 76F0                     l2514 7678                     l2506 7608  
                   l2186 6BFC                     l2178 6BBA                     l2194 6C1E  
                   l2276 6A6E                     l2268 6A4A                     l2292 6754  
                   l2284 6724                     l2380 72EA                     l2372 72B2  
                   l2356 7238                     l2348 71F0                     l2364 7280  
                   l2460 7526                     l2452 74EE                     l2444 74BC  
                   l2436 7474                     l2428 742C                     l2700 7856  
                   l2620 7C00                     l2612 7B98                     l2604 7B8C  
                   l2540 77FC                     l2532 7784                     l2524 770C  
                   l2516 7694                     l2508 7624                     l2196 6C2E  
                   l2188 6C0C                     l2278 6A76                     l2294 675A  
                   l2286 6736                     l2390 732C                     l2382 72F4  
                   l2374 72BC                     l2366 7284                     l2358 724A  
                   l2470 7570                     l2462 7538                     l2454 7500  
                   l2438 7486                     l2446 74CE                     l2702 7884  
                   l2630 7C5A                     l2622 7C12                     l2614 7BB4  
                   l2542 780E                     l2534 7796                     l2526 771E  
                   l2518 76A6                     l2198 6C3E                     l2550 64BE  
                   l2296 6770                     l2288 673E                     l2392 733E  
                   l2384 7306                     l2376 72CE                     l2368 7296  
                   l2480 75B2                     l2472 757A                     l2464 7542  
                   l2456 750A                     l2448 74D2                     l2720 7900  
                   l2712 789C                     l2704 7890                     l2640 7CA6  
                   l2632 7C6C                     l2624 7C24                     l2616 7BD0  
                   l2544 7832                     l2536 77BA                     l2528 7742  
                   l2560 67BC                     l2552 64C0                     l2298 6778  
                   l2490 663E                     l2394 7348                     l2386 7310  
                   l2378 72D8                     l2482 75C4                     l2474 758C  
                   l2466 7554                     l2458 751C                     l2810 7AA2  
                   l2730 7912                     l2722 7906                     l2714 78EA  
                   l2706 7894                     l2650 7D00                     l2642 7CB0  
                   l2634 7C7E                     l2626 7C36                     l2618 7BEE  
                   l2538 77E0                     l2570 67D0                     l2562 67C0  
                   l2554 64C4                     l2546 64B8                     l2492 665C  
                   l2396 735A                     l2388 7322                     l2484 75CE  
                   l2476 7596                     l2468 755E                     l2820 7AEC  
                   l2812 7AAE                     l2804 7A7C                     l2740 794E  
                   l2732 792E                     l2716 78EE                     l2660 7D52  
                   l2652 7D12                     l2644 7CCA                     l2628 7C48  
                   l2636 7C90                     l2580 67E8                     l2572 67D6  
                   l2564 67C4                     l2556 6790                     l2548 64BA  
                   l2494 6678                     l2398 7364                     l2486 75E0  
                   l2478 75A8                     l2822 7AF8                     l2814 7AB2  
                   l2806 7A80                     l2750 7982                     l2742 7958  
                   l2734 7934                     l2718 78F4                     l2830 7B2A  
                   l2670 7DB4                     l2662 7D6C                     l2654 7D1C  
                   l2646 7CDC                     l2638 7C94                     l2582 67EE  
                   l2574 67DA                     l2566 67C8                     l2558 67B8  
                   l2590 658E                     l2496 6680                     l2488 75EA  
                   l2832 7B2E                     l2824 7B04                     l2808 7A9C  
                   l2760 79BA                     l2816 7ACE                     l2752 798C  
                   l2744 7962                     l2736 793A                     l2728 790E  
                   l2680 7E0E                     l2672 7DBE                     l2664 7D7E  
                   l2656 7D36                     l2648 7CE6                     l1688 6480  
                   l2584 67F4                     l2576 67DE                     l2568 67CC  
                   l2592 65DE                     l2840 6950                     l2498 6698  
                   l2826 7B0A                     l2818 7AE0                     l2770 7A14  
                   l2762 79BE                     l2754 7996                     l2746 796E  
                   l2738 7944                     l2690 7E60                     l2682 7E20  
                   l2674 7DD8                     l2666 7D88                     l2658 7D48  
                   l2594 7B4C                     l2586 67FA                     l2578 67E4  
                   l2850 6968                     l2842 695C                     l2834 692A  
                   l2828 7B22                     l2772 7A18                     l2756 79A8  
                   l2748 7978                     l2692 7E7A                     l2684 7E2A  
                   l2676 7DEA                     l2668 7DA2                     l2596 7B50  
                   l2588 6800                     l2852 6984                     l2836 6946  
                   l2774 7A1E                     l2758 79AE                     l2694 7E8C  
                   l2686 7E44                     l2678 7DF4                     l2598 7B78  
                   l2862 699E                     l2854 698A                     l2838 694A  
                   l2784 7A38                     l2776 7A2A                     l2768 79C6  
                   l2696 7E96                     l2688 7E56                     l2864 69A2  
                   l2856 6996                     l2848 6964                     l2874 6D78  
                   l2786 7A3C                     l2778 7A30                     l2794 7A62  
                   l2698 7EB0                     l2866 69BE                     l2796 7A68  
                   l2788 7A58                     l2868 69C4                     l2798 7A74  
                   STR_1 7F23                     STR_2 7F5E                     STR_3 7FCA  
                   STR_4 7FB1                     STR_5 7EDF                     STR_6 7F41  
                   STR_7 7FE0                     STR_8 7F96                     STR_9 7F7B  
                   u2000 6620                     u2001 661C                     u2010 6636  
                   u2011 6632                     u2100 6AD2                     u2020 6B56  
                   u2101 6ACE                     u2021 6B52                     u2110 6AF0  
                   u2030 6B78                     u2111 6AEC                     u2031 6B74  
                   u2120 6B0C                     u2200 6736                     u3000 7C48  
                   u2040 6BB2                     u2121 6B08                     u2201 6732  
                   u3001 7C44                     u2041 6BAE                     u2130 6B32  
                   u2210 6754                     u3010 7C5A                     u2050 6BD4  
                   u2131 6B2E                     u2211 6750                     u3011 7C56  
                   u2051 6BD0                     u2140 69E2                     u2220 6770  
                   u2300 7202                     u3100 7DB4                     u3020 7C6C  
                   u2060 6BFC                     u2141 69DE                     u2221 676C  
                   u2301 71FE                     u3101 7DB0                     u3021 7C68  
                   u2061 6BF8                     u2150 69FC                     u2230 68B6  
                   u2310 7214                     u3110 7DEA                     u3030 7C7E  
                   u2070 6C2E                     u2151 69F8                     u2231 68B2  
                   u2311 7210                     u3111 7DE6                     u3031 7C7A  
                   u2071 6C2A                     u2080 6A92                     u2160 6A16  
                   u2240 68E2                     u2400 72CE                     u2320 7226  
                   u3120 7E20                     u3040 7C90                     u2081 6A8E  
                   u2161 6A12                     u2241 68DE                     u2401 72CA  
                   u2321 7222                     u3121 7E1C                     u3041 7C8C  
                   u2090 6AAC                     u2170 6A34                     u2250 6928  
                   u2410 72EA                     u2330 7238                     u3210 7A14  
                   u3130 7E56                     u3050 7CA6                     u2091 6AA8  
                   u2171 6A30                     u2251 6924                     u2411 72E6  
                   u2331 7234                     u3211 7A10                     u3131 7E52  
                   u3051 7CA2                     u2180 6A4A                     u2420 7306  
                   u2340 724A                     u2260 71A4                     u2500 740E  
                   u3220 7A58                     u3204 79F0                     u3140 7E8C  
                   u3060 7CDC                     u2181 6A46                     u2421 7302  
                   u2341 7246                     u2261 71A0                     u2501 740A  
                   u3221 7A54                     u3205 79EA                     u3141 7E88  
                   u3061 7CD8                     u2190 6A6E                     u2430 7322  
                   u2350 725C                     u2270 71C0                     u2510 742C  
                   u3230 7A9C                     u3150 7ECC                     u3070 7D12  
                   u2191 6A6A                     u2431 731E                     u2351 7258  
                   u2271 71BC                     u2511 7428                     u3231 7A98  
                   u3151 7EC8                     u3071 7D0E                     u1800 6FAA  
                   u2440 733E                     u2360 726E                     u2280 71DE  
                   u2600 74CE                     u2520 743E                     u3240 7ACE  
                   u3080 7D48                     u1801 6FA6                     u2441 733A  
                   u2361 726A                     u2281 71DA                     u2601 74CA  
                   u2521 743A                     u3241 7ACA                     u3081 7D44  
                   u1810 6FC4                     u2450 735A                     u2370 7280  
                   u2290 71F0                     u2610 74E4                     u2530 7450  
                   u3250 7AE0                     u3170 78EA                     u3090 7D7E  
                   u1811 6FC0                     u2451 7356                     u2371 727C  
                   u2291 71EC                     u2611 74E0                     u2531 744C  
                   u3251 7ADC                     u3171 78E6                     u3091 7D7A  
                   u2460 7376                     u2380 7296                     u2700 75E0  
                   u2620 7500                     u2540 7462                     u3260 7B4A  
                   u3180 792E                     u3164 78C6                     u2461 7372  
                   u2381 7292                     u2701 75DC                     u2621 74FC  
                   u2541 745E                     u3261 7B46                     u3181 792A  
                   u3165 78C0                     u2470 7392                     u2390 72B2  
                   u2710 7606                     u2630 751C                     u2550 7474  
                   u3190 79A8                     u3270 6984                     u2471 738E  
                   u2391 72AE                     u2711 7602                     u2631 7518  
                   u2551 7470                     u3191 79A4                     u3271 6980  
                   u1920 7112                     u1904 70C6                     u1840 7022  
                   u1824 6FD6                     u1760 6F3A                     u2720 671A  
                   u2480 73B8                     u2640 7538                     u2560 7486  
                   u3280 69BE                     u1921 710E                     u1905 70C2  
                   u1841 701E                     u1825 6FD2                     u1761 6F36  
                   u2721 6716                     u2481 73B4                     u2641 7534  
                   u2561 7482                     u3281 69BA                     u1930 712C  
                   u1914 70E6                     u1850 703C                     u1834 6FF6  
                   u1770 6F4C                     u2650 7554                     u2570 7498  
                   u2490 73F2                     u2810 770C                     u2730 7624  
                   u1931 7128                     u1915 70E2                     u1851 7038  
                   u1835 6FF2                     u1771 6F48                     u2651 7550  
                   u2571 7494                     u2491 73EE                     u2811 7708  
                   u2731 7620                     u2660 7570                     u2580 74AA  
                   u2900 780E                     u2820 771E                     u2804 76E0  
                   u2740 7636                     u2661 756C                     u2581 74A6  
                   u2901 780A                     u2821 771A                     u2805 76DC  
                   u2741 7632                     u2670 758C                     u2590 74BC  
                   u2671 7588                     u2591 74B8                     u1944 713E  
                   u1880 709A                     u1864 704E                     u1784 6F5E  
                   u1960 6868                     u2680 75A8                     u1945 713A  
                   u1881 7096                     u1865 704A                     u1785 6F5A  
                   u1961 6864                     u2681 75A4                     u1954 715E  
                   u1890 70B4                     u1874 706E                     u1794 6F7E  
                   u1970 6878                     u2690 75C4                     u2930 7BB4  
                   u2914 7824                     u2850 7784                     u2834 7734  
                   u2770 7694                     u2754 7648                     u1955 715A  
                   u1891 70B0                     u1875 706A                     u1795 6F7A  
                   u1971 6874                     u2691 75C0                     u2931 7BB0  
                   u2915 7820                     u2851 7780                     u2835 7730  
                   u2771 7690                     u2755 7644                     u1980 65F6  
                   u2940 7BD0                     u2924 7848                     u2860 7796  
                   u2844 7758                     u2780 76A6                     u2764 7668  
                   u1981 65F2                     u2941 7BCC                     u2925 7844  
                   u2861 7792                     u2845 7754                     u2781 76A2  
                   u2765 7664                     u1990 660A                     u2950 7BEE  
                   u1991 6606                     u2951 7BEA                     u2960 7C00  
                   u2961 7BFC                     u2970 7C12                     u2890 77FC  
                   u2874 77AC                     u2794 76BC                     u2971 7C0E  
                   u2891 77F8                     u2875 77A8                     u2795 76B8  
                   u2980 7C24                     u2884 77D0                     u2981 7C20  
                   u2885 77CC                     u2990 7C36                     u2991 7C32  
                   _main 692A                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___param_bank 000000           pwmSet@porcento 000A  
        __end_of___aldiv 6C50                    ?_main 0001          __end_of___awdiv 6B44  
                  STR_10 7FF3                    STR_11 7FF6                    STR_12 7F03  
        __end_of___awmod 6A80          ___awdiv@divisor 0003                    _T2CON 000FCA  
        __end_of___lwdiv 6790          ___awdiv@counter 0005                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcdData 658E          __end_of_lcdInit 6808                    _flag1 002E  
                  _flag2 002C                    _senha 001C          __end_of_pinMode 7856  
                  _valor 002A                    main@k 001A     __size_of_defineSenha 0382  
                  tablat 000FF5          __end_of_ssdInit 65E4          __end_of_pwmInit 64D2  
                  status 000FD8         __end_of_Delay2ms 64EE     __end_of_digitalWrite 716C  
        __initialization 648A             __end_of_main 69D0       __size_of_Delay40us 0018  
                 ??_main 001A            __activetblptr 000002                   _CCPR1L 000FBE  
       ___awdiv@dividend 0001                ??___aldiv 0009                   ___wmul 64EE  
                 _acesso 7856                ??___awdiv 0005                ??___awmod 000D  
              ??___lwdiv 0005                   _kpInit 6480                   _kpRead 6476  
                 clear_0 6490         ___awdiv@quotient 0007          ___awmod@divisor 000B  
              ??_lcdData 0007                   isa$std 000001                ??_lcdInit 0009  
                 _pwmSet 663C          ___awmod@counter 000D                   _printf 6886  
       __end_of_teclado1 73BA         __end_of_teclado2 7608         __end_of_ssdDigit 663C  
              ??_pinMode 0005             __mediumconst 7ECE                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_ssdInit 0007  
              ??_pwmInit 0011        __end_of_Delay40us 64B8               __accesstop 0080  
__end_of__initialization 6496            ___rparam_used 000001              pinMode@type 0003  
         __pcstackCOMRAM 0001       __size_of_lcdNumber 0074                ?_Delay2ms 0001  
  __size_of_digitalWrite 024E               _lcdCommand 6808                  ?___wmul 0001  
                ?_acesso 0001                  ?_kpInit 0001                  ?_kpRead 0001  
                _CCP1CON 000FBD               _kpDebounce 6DA0                  ?_pwmSet 0001  
                ?_printf 0009       __size_of_ssdUpdate 0150               ??_Delay2ms 0002  
           _digitalWrite 6F1E               acesso@time 0016                ?_teclado1 0001  
              ?_teclado2 0001                  __Hparam 0000        __end_of_lcdNumber 671C  
                __Lparam 0000                ?_ssdDigit 0001          kpDebounce@old_D 0006  
        kpDebounce@tempo 0035                  ___aldiv 6B44                  ___awdiv 6A80  
                ___awmod 69D0          __size_of___wmul 0026          __size_of_acesso 02F6  
                ___lwdiv 671C          __size_of_kpInit 000A          __size_of_kpRead 000A  
            ssdDigit@val 0002              ssdDigit@pos 0001                  __pcinit 648A  
                _lcdData 653A                  __ramtop 0600                  _lcdInit 6790  
                __ptext0 692A                  __ptext1 658E                  __ptext2 64B8  
                __ptext3 6514                  __ptext4 6B44                  __ptext5 6790  
                __ptext6 7608                  __ptext7 6480                  __ptext8 7B4C  
                __ptext9 7856          __size_of_pwmSet 006C          __size_of_printf 00A4  
                _display 0034                  acesso@i 0018                  _pinMode 7608  
       ___awmod@dividend 0009         ___aldiv@dividend 0001                  _ssdInit 658E  
          ??_defineSenha 000F                  _pwmInit 64B8                Delay2ms@i 0002  
    kpDebounce@valorNovo 0028     end_of_initialization 6496          defineSenha@temp 000F  
        defineSenha@time 0011            __Lmediumconst 7ECE            ?_pwmFrequency 000F  
             ??_teclado1 000B               ??_teclado2 000B        __end_of_ssdUpdate 6DA0  
             ??_ssdDigit 0002                  printf@i 000D         ___aldiv@quotient 000B  
                postdec2 000FDD              ?_lcdCommand 0001                  postinc0 000FEE  
                postinc2 000FDE              ?_kpDebounce 0001               lcdNumber@i 0011  
         _valor@ssd$F285 7ECF           ??_pwmFrequency 0011      __end_of_defineSenha 7ECE  
              _Delay40us 64A0              printf@texto 0009           __end_of___wmul 6514  
         __end_of_acesso 7B4C           __end_of_kpInit 648A           __end_of_kpRead 6480  
 __end_of_valor@ssd$F285 7EDF           __end_of_pwmSet 66A8           __end_of_printf 692A  
    start_initialization 648A        __size_of_Delay2ms 001C      __size_of_lcdCommand 007E  
    __size_of_kpDebounce 017E               ?_Delay40us 0001                 ??___wmul 0005  
               ??_acesso 0013                 ??_kpInit 0001                 ??_kpRead 0003  
               ??_pwmSet 0008                 ??_printf 000B              __pbssCOMRAM 001C  
             pinMode@pin 0001              _defineSenha 7B4C         ___lwdiv@dividend 0001  
      __size_of_teclado1 024E        __size_of_teclado2 024E            __pmediumconst 7ECE  
               ?___aldiv 0001                 ?___awdiv 0001                 ?___awmod 0009  
      __size_of_ssdDigit 0058             teclado1@temp 000B             teclado1@time 000D  
           teclado2@temp 000B             teclado2@time 000D                _lcdNumber 66A8  
               ?___lwdiv 0001             defineSenha@i 0013                 ?_lcdData 0001  
               ?_lcdInit 0001     __end_of_pwmFrequency 653A            lcdCommand@cmd 0008  
               ?_pinMode 0001                 ?_ssdInit 0001                 ?_pwmInit 0001  
       ___lwdiv@quotient 0005         pwmFrequency@freq 000F          ___aldiv@divisor 0005  
        ___aldiv@counter 0009              ??_Delay40us 0001           ___wmul@product 0005  
           ??_lcdCommand 0007                _ssdUpdate 6C50               ?_lcdNumber 000F  
           ??_kpDebounce 0001        ___wmul@multiplier 0001          lcdCommand@old_D 0007  
  kpDebounce@valorAntigo 0026                 _Delay2ms 64D2       __end_of_lcdCommand 6886  
           lcdData@old_D 0008             lcdData@valor 0007       __end_of_kpDebounce 6F1E  
               __Hrparam 0000                 __Lrparam 0000               ?_ssdUpdate 0001  
       __size_of___aldiv 010C         __size_of___awdiv 00C4         __size_of___awmod 00B0  
         lcdNumber@value 000F         __size_of___lwdiv 0074         __size_of_lcdData 0054  
       __size_of_lcdInit 0078         __size_of_pinMode 024E          ___lwdiv@divisor 0003  
              teclado1@i 000F                teclado2@j 000F          ___lwdiv@counter 0007  
               __ptext10 73BA                 __ptext11 716C                 __ptext20 6808  
               __ptext12 6C50                 __ptext21 64D2                 __ptext13 65E4  
               __ptext22 66A8                 __ptext14 6476                 __ptext23 653A  
               __ptext15 6DA0                 __ptext24 6F1E                 __ptext16 663C  
               __ptext25 64A0                 __ptext17 64EE                 __ptext26 69D0  
               __ptext18 671C                 __ptext27 6A80                 __ptext19 6886  
       __size_of_ssdInit 0056         __size_of_pwmInit 001A            __size_of_main 00A6  
               _teclado1 716C                 _teclado2 73BA               Delay40us@i 0001  
               _ssdDigit 65E4                 isa$xinst 000000    __size_of_pwmFrequency 0026  
            ??_lcdNumber 0011                pwmSet@val 000B            ?_digitalWrite 0001  
           ?_defineSenha 0001        digitalWrite@value 0003             _pwmFrequency 6514  
            ??_ssdUpdate 0007              kpDebounce@i 000A              kpDebounce@j 0009  
            kpDebounce@k 0007           ??_digitalWrite 0005             ___aldiv@sign 000A  
        digitalWrite@pin 0001  
